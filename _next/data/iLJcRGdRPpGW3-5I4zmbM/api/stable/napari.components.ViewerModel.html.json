{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release Guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer Guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing Guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/perfmon.html","/guides/stable/rendering.html","/guides/stable/docker.html","/guides/stable/performance.html","/guides/stable/magicgui.html","/guides/stable/translations.html","/guides/stable/rendering-explanation.html","/guides/stable/connecting_events.html","/guides/stable/connecting_events.html#long-running-blocking-functions","/guides/stable/3D_interactivity.html"],"href":"/guides/stable/index.html","text":"Developer guides"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"/guides/stable/connecting_events.html":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html","text":"Hooking up your own events"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/translations.html":{"level":2,"children":[],"href":"/guides/stable/translations.html","text":"Translations"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"Napari Performance"},"/guides/stable/docker.html":{"level":2,"children":[],"href":"/guides/stable/docker.html","text":"Napari in Docker (WIP)"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous Rendering"},"/guides/stable/perfmon.html":{"level":2,"children":[],"href":"/guides/stable/perfmon.html","text":"Performance Monitoring"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/release/index.html":{"level":1,"children":["/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_11.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/for_napari_developers.html","/plugins/stable/for_plugin_developers.html","/plugins/stable/hook_specifications.html","/plugins/stable/find-and-install-plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"/plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"/plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"/plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"/tutorials/index.html":{"level":1,"children":["/tutorials/fundamentals/index.html","/tutorials/applications/index.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/applications/index.html":{"level":2,"children":["/tutorials/applications/annotate_segmentation.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/applications/napari_imageJ.html","/tutorials/applications/cell_tracking.html"],"href":"/tutorials/applications/index.html","text":"Applications"},"/tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"/tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"/tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"/tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"/tutorials/applications/dask.html":{"level":3,"children":[],"href":"/tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"/tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"/tutorials/fundamentals/index.html":{"level":2,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/fundamentals/index.html","text":"Fundamentals"},"/tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html"],"href":"/community/index.html","text":"Community"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance Model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the Project and Team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["/community/index.html","/tutorials/index.html","/plugins/stable/index.html","/release/index.html","/api/stable/index.html","/roadmaps/index.html","/guides/stable/index.html","/developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"napari.components.ViewerModel","pageFrontMatter":{},"appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"napari-components-viewermodel\">\n\n<dl class=\"py class\">\n<dt id=\"napari.components.ViewerModel\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">napari.components.</span></code><code class=\"sig-name descname\"><span class=\"pre\">ViewerModel</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.utils.key_bindings.KeymapProvider</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.utils.mouse_bindings.MousemapProvider</span></code>, <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.utils.events.evented_model.EventedModel</span></code></p>\n<p>Viewer containing the rendered scene, layers, and controlling elements\nincluding dimension sliders, and control bars for color limits.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>title</strong> (<em>string</em>) – The title of the viewer window.</p></li>\n<li><p><strong>ndisplay</strong> (<em>{2</em><em>, </em><em>3}</em>) – Number of displayed dimensions.</p></li>\n<li><p><strong>order</strong> (<em>tuple of int</em>) – Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3.</p></li>\n<li><p><strong>axis_labels</strong> (<em>list of str</em>) – Dimension names.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.window\">\n<code class=\"sig-name descname\"><span class=\"pre\">window</span></code></dt>\n<dd><p>Parent window.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Window</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.layers\">\n<code class=\"sig-name descname\"><span class=\"pre\">layers</span></code></dt>\n<dd><p>List of contained layers.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.components.LayerList.html#napari.components.LayerList\" title=\"napari.components.LayerList\">LayerList</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.dims\">\n<code class=\"sig-name descname\"><span class=\"pre\">dims</span></code></dt>\n<dd><p>Contains axes, indices, dimensions and sliders.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dimensions</p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Methods</p>\n<p class=\"rubric\">Attributes</p>\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_image\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_image</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">channel_axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgb</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gamma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">interpolation</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'nearest'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rendering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mip'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iso_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">attenuation</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.05</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">multiscale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_slicing_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.add_image\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Add an image layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> or </em><em>list of array</em>) – Image data. Can be N &gt;= 2 dimensional. If the last dimension has length\n3 or 4 can be interpreted as RGB or RGBA if rgb is <cite>True</cite>. If a\nlist and arrays are decreasing in shape then the data is treated as\na multiscale image. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>channel_axis</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em>, </em><em>optional</em>) – Axis to expand image along.  If provided, each channel in the data\nwill be added as an individual image layer.  In channel_axis mode,\nall other parameters MAY be provided as lists, and the Nth value\nwill be applied to the Nth channel in the data.  If a single value\nis provided, it will be broadcast to all Layers.</p></li>\n<li><p><strong>rgb</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Whether the image is rgb RGB or RGBA. If not specified by user and\nthe last dimension of the data has length 3 or 4 it will be set as\n<cite>True</cite>. If <cite>False</cite> the image is interpreted as a luminance image.\nIf a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Colormaps to use for luminance images. If a string must be the name\nof a supported colormap from vispy or matplotlib. If a tuple the\nfirst value must be a string to assign as a name to a colormap and\nthe second item must be a Colormap. If a dict the key must be a\nstring to assign as a name to a colormap and the value must be a\nColormap. If a list then must be same length as the axis that is\nbeing expanded as channels, and each colormap is applied to each\nnew image layer.</p></li>\n<li><p><strong>contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em> (</em><em>2</em><em>,</em><em>)</em>) – Color limits to be used for determining the colormap bounds for\nluminance images. If not passed is calculated as the min and max of\nthe image. If list of lists then must be same length as the axis\nthat is being expanded and then each colormap is applied to each\nimage.</p></li>\n<li><p><strong>gamma</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Gamma correction for determining colormap linearity. Defaults to 1.\nIf a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>interpolation</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Interpolation mode used by vispy. Must be one of our supported\nmodes. If a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>rendering</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Rendering mode used by vispy. Must be one of our supported\nmodes. If a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>iso_threshold</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Threshold for isosurface. If a list then must be same length as the\naxis that is being expanded as channels.</p></li>\n<li><p><strong>attenuation</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Attenuation rate for attenuated maximum intensity projection. If a\nlist then must be same length as the axis that is being expanded as\nchannels.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><em>list of str</em>) – Name of the layer.  If a list then must be same length as the axis\nthat is being expanded as channels.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>list of dict</em>) – Layer metadata. If a list then must be a list of dicts with the\nsame length as the axis that is being expanded as channels.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Scale factors for the layer. If a list then must be a list of\ntuples of float with the same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Translation values for the layer. If a list then must be a list of\ntuples of float with the same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, </em><em>n-D array</em><em> or </em><em>list.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed. If a list then must have same length as\nthe axis that is being expanded as channels.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>list.</em>) – A vector of shear values for an upper triangular n-D shear matrix.\nIf a list then must have same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a\nnapari <cite>Affine</cite> transform object. Applied as an extra transform on\ntop of the provided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.  If a list then\nmust be same length as the axis that is being expanded as channels.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}. If a list then\nmust be same length as the axis that is being expanded as channels.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em> or </em><em>list of bool</em>) – Whether the layer visual is currently being displayed.\nIf a list then must be same length as the axis that is\nbeing expanded as channels.</p></li>\n<li><p><strong>multiscale</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. If not specified by\nthe user and if the data is a list of arrays that decrease in shape\nthen it will be taken to be multiscale. The first image in the list\nshould be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>experimental_slicing_plane</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>SlicingPlane</em>) – Properties defining plane rendering in 3D. Properties are defined in\ndata coordinates. Valid dictionary keys are\n{‘position’, ‘normal’, ‘thickness’, and ‘enabled’}.</p></li>\n<li><p><strong>experimental_clipping_planes</strong> (<em>list of dicts</em><em>, </em><em>list of ClippingPlane</em><em>, or </em><em>ClippingPlaneList</em>) – Each dict defines a clipping plane in 3D in data coordinates.\nValid dictionary keys are {‘position’, ‘normal’, and ‘enabled’}.\nValues on the negative side of the normal are discarded if the plane is enabled.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>layer</strong> – The newly-created image layer or list of image layers.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.layers.Image.html#napari.layers.Image\" title=\"napari.layers.Image\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Image</span></code></a> or list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_labels\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_labels</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_colors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rendering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'iso_categorical'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">multiscale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_slicing_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Add a Labels layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> or </em><em>list of array</em>) – Labels data as an array or multiscale. Must be integer type or bools.\nPlease note multiscale rendering is only supported in 2D. In 3D, only\nthe lowest resolution scale is displayed.</p></li>\n<li><p><strong>num_colors</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of unique colors to use in colormap.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em> or </em><em>DataFrame</em>) – Properties for each label. Each property should be an array of length\nN, where N is the number of labels, and the first property corresponds\nto background.</p></li>\n<li><p><strong>color</strong> (<em>dict of int to str</em><em> or </em><em>array</em>) – Custom label to color mapping. Values must be valid color names or RGBA\narrays.</p></li>\n<li><p><strong>seed</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Seed for colormap random generator.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>rendering</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – 3D Rendering mode used by vispy. Must be one {‘translucent’, ‘iso_categorical’}.\n‘translucent’ renders without lighting. ‘iso_categorical’ uses isosurface\nrendering to calculate lighting effects on labeled surfaces.\nThe default value is ‘iso_categorical’.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n<li><p><strong>multiscale</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. If not specified by\nthe user and if the data is a list of arrays that decrease in shape\nthen it will be taken to be multiscale. The first image in the list\nshould be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>experimental_slicing_plane</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>SlicingPlane</em>) – Properties defining plane rendering in 3D. Properties are defined in\ndata coordinates. Valid dictionary keys are\n{‘position’, ‘normal’, ‘thickness’, and ‘enabled’}.</p></li>\n<li><p><strong>experimental_clipping_planes</strong> (<em>list of dicts</em><em>, </em><em>list of ClippingPlane</em><em>, or </em><em>ClippingPlaneList</em>) – Each dict defines a clipping plane in 3D in data coordinates.\nValid dictionary keys are {‘position’, ‘normal’, and ‘enabled’}.\nValues on the negative side of the normal are discarded if the plane is enabled.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.data\">\n<code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>Integer label data as an array or multiscale. Can be N dimensional.\nEvery pixel contains an integer ID corresponding to the region it\nbelongs to. The label 0 is rendered as transparent. Please note\nmultiscale rendering is only supported in 2D. In 3D, only\nthe lowest resolution scale is displayed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array or list of array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.multiscale\">\n<code class=\"sig-name descname\"><span class=\"pre\">multiscale</span></code></dt>\n<dd><p>Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. The first image in the\nlist should be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">metadata</span></code></dt>\n<dd><p>Labels metadata.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.num_colors\">\n<code class=\"sig-name descname\"><span class=\"pre\">num_colors</span></code></dt>\n<dd><p>Number of unique colors to use in colormap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.properties\">\n<code class=\"sig-name descname\"><span class=\"pre\">properties</span></code></dt>\n<dd><p>Properties for each label. Each property should be an array of length\nN, where N is the number of labels, and the first property corresponds\nto background.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict {str: array (N,)}, DataFrame</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.color\">\n<code class=\"sig-name descname\"><span class=\"pre\">color</span></code></dt>\n<dd><p>Custom label to color mapping. Values must be valid color names or RGBA\narrays.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict of int to str or array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.seed\">\n<code class=\"sig-name descname\"><span class=\"pre\">seed</span></code></dt>\n<dd><p>Seed for colormap random generator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.opacity\">\n<code class=\"sig-name descname\"><span class=\"pre\">opacity</span></code></dt>\n<dd><p>Opacity of the labels, must be between 0 and 1.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.contiguous\">\n<code class=\"sig-name descname\"><span class=\"pre\">contiguous</span></code></dt>\n<dd><p>If <cite>True</cite>, the fill bucket changes only connected pixels of same label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.n_dimensional\">\n<code class=\"sig-name descname\"><span class=\"pre\">n_dimensional</span></code></dt>\n<dd><p>If <cite>True</cite>, paint and fill edit labels across all dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.contour\">\n<code class=\"sig-name descname\"><span class=\"pre\">contour</span></code></dt>\n<dd><p>If greater than 0, displays contours of labels instead of shaded regions\nwith a thickness equal to its value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.brush_size\">\n<code class=\"sig-name descname\"><span class=\"pre\">brush_size</span></code></dt>\n<dd><p>Size of the paint brush in data coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.selected_label\">\n<code class=\"sig-name descname\"><span class=\"pre\">selected_label</span></code></dt>\n<dd><p>Index of selected label. Can be greater than the current maximum label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.mode\">\n<code class=\"sig-name descname\"><span class=\"pre\">mode</span></code></dt>\n<dd><p>Interactive mode. The normal, default mode is PAN_ZOOM, which\nallows for normal interactivity with the canvas.</p>\n<p>In PICK mode the cursor functions like a color picker, setting the\nclicked on label to be the current label. If the background is picked it\nwill select the background label <cite>0</cite>.</p>\n<p>In PAINT mode the cursor functions like a paint brush changing any\npixels it brushes over to the current label. If the background label\n<cite>0</cite> is selected than any pixels will be changed to background and this\ntool functions like an eraser. The size and shape of the cursor can be\nadjusted in the properties widget.</p>\n<p>In FILL mode the cursor functions like a fill bucket replacing pixels\nof the label clicked on with the current label. It can either replace\nall pixels of that label or just those that are contiguous with the\nclicked on pixel. If the background label <cite>0</cite> is selected than any\npixels will be changed to background and this tool functions like an\neraser.</p>\n<p>In ERASE mode the cursor functions similarly to PAINT mode, but to\npaint with background label, which effectively removes the label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.experimental_slicing_plane\">\n<code class=\"sig-name descname\"><span class=\"pre\">experimental_slicing_plane</span></code></dt>\n<dd><p>Properties defining plane rendering in 3D.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>SlicingPlane</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.experimental_clipping_planes\">\n<code class=\"sig-name descname\"><span class=\"pre\">experimental_clipping_planes</span></code></dt>\n<dd><p>Clipping planes defined in data coordinates, used to clip the volume.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>ClippingPlaneList</p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Notes</p>\n<dl class=\"simple\">\n<dt>_data_raw<span class=\"classifier\">array (N, M)</span></dt><dd><p>2D labels data for the currently viewed slice.</p>\n</dd>\n<dt>_selected_color<span class=\"classifier\">4-tuple or None</span></dt><dd><p>RGBA tuple of the color of the selected label, or None if the\nbackground label <cite>0</cite> is selected.</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>layer</strong> – The newly-created labels layer.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"napari.layers.Labels.html#napari.layers.Labels\" title=\"napari.layers.Labels\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Labels</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_layer\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_layer</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layer</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.add_layer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Add a layer to the viewer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>layer</strong> (<a class=\"reference internal\" href=\"napari.layers.Layer.html#napari.layers.Layer\" title=\"napari.layers.Layer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Layer</span></code></a>) – Layer to add.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>layer</strong> – The layer that was added (same as input).</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.layers.Layer.html#napari.layers.Layer\" title=\"napari.layers.Layer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Layer</span></code></a> or list</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_points\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_points</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndim</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">symbol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'o'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'black'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'white'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_dimensional</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_choices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Add a Points layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> (</em><em>N</em><em>, </em><em>D</em><em>)</em>) – Coordinates for N points in D dimensions.</p></li>\n<li><p><strong>ndim</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of dimensions for shapes. When data is not None, ndim must be D.\nAn empty points layer can be instantiated with arbitrary ndim.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each point. Each property should be an array of length N,\nwhere N is the number of points.</p></li>\n<li><p><strong>property_choices</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em>) – possible values for each property.</p></li>\n<li><p><strong>text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Text to be displayed with the points. If text is set to a key in properties,\nthe value of that property will be displayed. Multiple properties can be\ncomposed using f-string-like syntax (e.g., ‘{property_1}, {float_property:.2f}).\nA dictionary can be provided with keyword arguments to set the text values\nand display properties. See TextManager.__init__() for the valid keyword arguments.\nFor example usage, see /napari/examples/add_points_with_text.py.</p></li>\n<li><p><strong>symbol</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Symbol to be used for the point markers. Must be one of the\nfollowing: arrow, clobber, cross, diamond, disc, hbar, ring,\nsquare, star, tailed_arrow, triangle_down, triangle_up, vbar, x.</p></li>\n<li><p><strong>size</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>array</em>) – Size of the point marker. If given as a scalar, all points are made\nthe same size. If given as an array, size must be the same\nbroadcastable to the same shape as the data.</p></li>\n<li><p><strong>edge_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Width of the symbol edge in pixels.</p></li>\n<li><p><strong>edge_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Color of the point marker border. Numeric color values should be RGB(A).</p></li>\n<li><p><strong>edge_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>edge_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set edge_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>edge_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>face_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Color of the point marker body. Numeric color values should be RGB(A).</p></li>\n<li><p><strong>face_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to face_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>face_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set face_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>face_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>n_dimensional</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – If True, renders points not just in central plane but also in all\nn-dimensions according to specified point marker size.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"id0\">\n<code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>Coordinates for N points in D dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array (N, D)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id1\">\n<code class=\"sig-name descname\"><span class=\"pre\">properties</span></code></dt>\n<dd><p>Annotations for each point. Each property should be an array of length N,\nwhere N is the number of points.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict {str: array (N,)} or DataFrame</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.text\">\n<code class=\"sig-name descname\"><span class=\"pre\">text</span></code></dt>\n<dd><p>Text to be displayed with the points. If text is set to a key in properties, the value of\nthat property will be displayed. Multiple properties can be composed using f-string-like\nsyntax (e.g., ‘{property_1}, {float_property:.2f}).\nFor example usage, see /napari/examples/add_points_with_text.py.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.symbol\">\n<code class=\"sig-name descname\"><span class=\"pre\">symbol</span></code></dt>\n<dd><p>Symbol used for all point markers.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.size\">\n<code class=\"sig-name descname\"><span class=\"pre\">size</span></code></dt>\n<dd><p>Array of sizes for each point in each dimension. Must have the same\nshape as the layer <cite>data</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array (N, D)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.edge_width\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_width</span></code></dt>\n<dd><p>Width of the marker edges in pixels for all points</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.edge_color\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_color</span></code></dt>\n<dd><p>Array of edge color RGBA values, one for each point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Nx4 numpy array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.edge_color_cycle\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_color_cycle</span></code></dt>\n<dd><p>Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>np.ndarray, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.edge_colormap\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_colormap</span></code></dt>\n<dd><p>Colormap to set edge_color if a continuous attribute is used to set face_color.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, <a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\">napari.utils.Colormap</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.edge_contrast_limits\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_contrast_limits</span></code></dt>\n<dd><p>clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\">None</a>, (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.face_color\">\n<code class=\"sig-name descname\"><span class=\"pre\">face_color</span></code></dt>\n<dd><p>Array of face color RGBA values, one for each point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Nx4 numpy array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.face_color_cycle\">\n<code class=\"sig-name descname\"><span class=\"pre\">face_color_cycle</span></code></dt>\n<dd><p>Cycle of colors (provided as string name, RGB, or RGBA) to map to face_color if a\ncategorical attribute is used color the vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>np.ndarray, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.face_colormap\">\n<code class=\"sig-name descname\"><span class=\"pre\">face_colormap</span></code></dt>\n<dd><p>Colormap to set face_color if a continuous attribute is used to set face_color.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, <a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\">napari.utils.Colormap</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.face_contrast_limits\">\n<code class=\"sig-name descname\"><span class=\"pre\">face_contrast_limits</span></code></dt>\n<dd><p>clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\">None</a>, (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.current_size\">\n<code class=\"sig-name descname\"><span class=\"pre\">current_size</span></code></dt>\n<dd><p>Size of the marker for the next point to be added or the currently\nselected point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.current_edge_color\">\n<code class=\"sig-name descname\"><span class=\"pre\">current_edge_color</span></code></dt>\n<dd><p>Size of the marker edge for the next point to be added or the currently\nselected point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.current_face_color\">\n<code class=\"sig-name descname\"><span class=\"pre\">current_face_color</span></code></dt>\n<dd><p>Size of the marker edge for the next point to be added or the currently\nselected point.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id2\">\n<code class=\"sig-name descname\"><span class=\"pre\">n_dimensional</span></code></dt>\n<dd><p>If True, renders points not just in central plane but also in all\nn-dimensions according to specified point marker size.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.selected_data\">\n<code class=\"sig-name descname\"><span class=\"pre\">selected_data</span></code></dt>\n<dd><p>Integer indices of any selected points.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#set\" title=\"(in Python v3.9)\">set</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id3\">\n<code class=\"sig-name descname\"><span class=\"pre\">mode</span></code></dt>\n<dd><p>Interactive mode. The normal, default mode is PAN_ZOOM, which\nallows for normal interactivity with the canvas.</p>\n<p>In ADD mode clicks of the cursor add points at the clicked location.</p>\n<p>In SELECT mode the cursor can select points by clicking on them or\nby dragging a box around them. Once selected points can be moved,\nhave their properties edited, or be deleted.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.face_color_mode\">\n<code class=\"sig-name descname\"><span class=\"pre\">face_color_mode</span></code></dt>\n<dd><p>Face color setting mode.</p>\n<p>DIRECT (default mode) allows each point to be set arbitrarily</p>\n<p>CYCLE allows the color to be set via a color cycle over an attribute</p>\n<p>COLORMAP allows color to be set via a color map over an attribute</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.edge_color_mode\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_color_mode</span></code></dt>\n<dd><p>Edge color setting mode.</p>\n<p>DIRECT (default mode) allows each point to be set arbitrarily</p>\n<p>CYCLE allows the color to be set via a color cycle over an attribute</p>\n<p>COLORMAP allows color to be set via a color map over an attribute</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Notes</p>\n<dl class=\"simple\">\n<dt>_property_choices<span class=\"classifier\">dict {str: array (N,)}</span></dt><dd><p>Possible values for the properties in Points.properties.</p>\n</dd>\n<dt>_view_data<span class=\"classifier\">array (M, 2)</span></dt><dd><p>2D coordinates of points in the currently viewed slice.</p>\n</dd>\n<dt>_view_size<span class=\"classifier\">array (M, )</span></dt><dd><p>Size of the point markers in the currently viewed slice.</p>\n</dd>\n<dt>_indices_view<span class=\"classifier\">array (M, )</span></dt><dd><p>Integer indices of the points in the currently viewed slice.</p>\n</dd>\n<dt>_selected_view :</dt><dd><p>Integer indices of selected points in the currently viewed slice within\nthe <cite>_view_data</cite> array.</p>\n</dd>\n<dt>_selected_box<span class=\"classifier\">array (4, 2) or None</span></dt><dd><p>Four corners of any box either around currently selected points or\nbeing created during a drag action. Starting in the top left and\ngoing clockwise.</p>\n</dd>\n<dt>_drag_start<span class=\"classifier\">list or None</span></dt><dd><p>Coordinates of first cursor click during a drag action. Gets reset to\nNone after dragging is done.</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>layer</strong> – The newly-created points layer.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"napari.layers.Points.html#napari.layers.Points\" title=\"napari.layers.Points\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Points</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_shapes\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_shapes</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndim</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_choices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rectangle'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'#777777'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'white'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z_index</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Add a Shapes layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em> or </em><em>array</em>) – List of shape data, where each element is an (N, D) array of the\nN vertices of a shape in D dimensions. Can be an 3-dimensional\narray if each shape has the same number of vertices.</p></li>\n<li><p><strong>ndim</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of dimensions for shapes. When data is not None, ndim must be D.\nAn empty shapes layer can be instantiated with arbitrary ndim.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each shape. Each property should be an array of length N,\nwhere N is the number of shapes.</p></li>\n<li><p><strong>property_choices</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em>) – possible values for each property.</p></li>\n<li><p><strong>text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Text to be displayed with the shapes. If text is set to a key in properties,\nthe value of that property will be displayed. Multiple properties can be\ncomposed using f-string-like syntax (e.g., ‘{property_1}, {float_property:.2f}).\nA dictionary can be provided with keyword arguments to set the text values\nand display properties. See TextManager.__init__() for the valid keyword arguments.\nFor example usage, see /napari/examples/add_shapes_with_text.py.</p></li>\n<li><p><strong>shape_type</strong> (<em>string</em><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – String of shape shape_type, must be one of “{‘line’, ‘rectangle’,\n‘ellipse’, ‘path’, ‘polygon’}”. If a list is supplied it must be\nthe same length as the length of <cite>data</cite> and each element will be\napplied to each shape otherwise the same value will be used for all\nshapes.</p></li>\n<li><p><strong>edge_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Thickness of lines and edges. If a list is supplied it must be the\nsame length as the length of <cite>data</cite> and each element will be\napplied to each shape otherwise the same value will be used for all\nshapes.</p></li>\n<li><p><strong>edge_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em>) – If string can be any color name recognized by vispy or hex value if\nstarting with <cite>#</cite>. If array-like must be 1-dimensional array with 3\nor 4 elements. If a list is supplied it must be the same length as\nthe length of <cite>data</cite> and each element will be applied to each shape\notherwise the same value will be used for all shapes.</p></li>\n<li><p><strong>edge_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>edge_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set edge_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>edge_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>face_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em>) – If string can be any color name recognized by vispy or hex value if\nstarting with <cite>#</cite>. If array-like must be 1-dimensional array with 3\nor 4 elements. If a list is supplied it must be the same length as\nthe length of <cite>data</cite> and each element will be applied to each shape\notherwise the same value will be used for all shapes.</p></li>\n<li><p><strong>face_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to face_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>face_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set face_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>face_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>z_index</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Specifier of z order priority. Shapes with higher z order are\ndisplayed ontop of others. If a list is supplied it must be the\nsame length as the length of <cite>data</cite> and each element will be\napplied to each shape otherwise the same value will be used for all\nshapes.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"id4\">\n<code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>List of shape data, where each element is an (N, D) array of the\nN vertices of a shape in D dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(N, ) list of array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id5\">\n<code class=\"sig-name descname\"><span class=\"pre\">properties</span></code></dt>\n<dd><p>Properties for each shape. Each property should be an array of length N,\nwhere N is the number of shapes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict {str: array (N,)}, DataFrame</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id6\">\n<code class=\"sig-name descname\"><span class=\"pre\">text</span></code></dt>\n<dd><p>Text to be displayed with the shapes. If text is set to a key in properties,\nthe value of that property will be displayed. Multiple properties can be\ncomposed using f-string-like syntax (e.g., ‘{property_1}, {float_property:.2f}).\nFor example usage, see /napari/examples/add_shapes_with_text.py.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.shape_type\">\n<code class=\"sig-name descname\"><span class=\"pre\">shape_type</span></code></dt>\n<dd><p>Name of shape type for each shape.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(N, ) list of str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id7\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_color</span></code></dt>\n<dd><p>Color of the shape border. Numeric color values should be RGB(A).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, array-like</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id8\">\n<code class=\"sig-name descname\"><span class=\"pre\">face_color</span></code></dt>\n<dd><p>Color of the shape face. Numeric color values should be RGB(A).</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, array-like</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id9\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_width</span></code></dt>\n<dd><p>Edge width for each shape.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(N, ) list of float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.z_index\">\n<code class=\"sig-name descname\"><span class=\"pre\">z_index</span></code></dt>\n<dd><p>z-index for each shape.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(N, ) list of int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.current_edge_width\">\n<code class=\"sig-name descname\"><span class=\"pre\">current_edge_width</span></code></dt>\n<dd><p>Thickness of lines and edges of the next shape to be added or the\ncurrently selected shape.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id10\">\n<code class=\"sig-name descname\"><span class=\"pre\">current_edge_color</span></code></dt>\n<dd><p>Color of the edge of the next shape to be added or the currently\nselected shape.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id11\">\n<code class=\"sig-name descname\"><span class=\"pre\">current_face_color</span></code></dt>\n<dd><p>Color of the face of the next shape to be added or the currently\nselected shape.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id12\">\n<code class=\"sig-name descname\"><span class=\"pre\">selected_data</span></code></dt>\n<dd><p>List of currently selected shapes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#set\" title=\"(in Python v3.9)\">set</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.nshapes\">\n<code class=\"sig-name descname\"><span class=\"pre\">nshapes</span></code></dt>\n<dd><p>Total number of shapes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id13\">\n<code class=\"sig-name descname\"><span class=\"pre\">mode</span></code></dt>\n<dd><p>Interactive mode. The normal, default mode is PAN_ZOOM, which\nallows for normal interactivity with the canvas.</p>\n<p>The SELECT mode allows for entire shapes to be selected, moved and\nresized.</p>\n<p>The DIRECT mode allows for shapes to be selected and their individual\nvertices to be moved.</p>\n<p>The VERTEX_INSERT and VERTEX_REMOVE modes allow for individual\nvertices either to be added to or removed from shapes that are already\nselected. Note that shapes cannot be selected in this mode.</p>\n<p>The ADD_RECTANGLE, ADD_ELLIPSE, ADD_LINE, ADD_PATH, and ADD_POLYGON\nmodes all allow for their corresponding shape type to be added.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Mode</p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Notes</p>\n<dl class=\"simple\">\n<dt>_data_dict<span class=\"classifier\">Dict of ShapeList</span></dt><dd><p>Dictionary containing all the shape data indexed by slice tuple</p>\n</dd>\n<dt>_data_view<span class=\"classifier\">ShapeList</span></dt><dd><p>Object containing the currently viewed shape data.</p>\n</dd>\n<dt>_selected_data_history<span class=\"classifier\">set</span></dt><dd><p>Set of currently selected captured on press of &lt;space&gt;.</p>\n</dd>\n<dt>_selected_data_stored<span class=\"classifier\">set</span></dt><dd><p>Set of selected previously displayed. Used to prevent rerendering the\nsame highlighted shapes when no data has changed.</p>\n</dd>\n<dt>_selected_box<span class=\"classifier\">None | np.ndarray</span></dt><dd><p><cite>None</cite> if no shapes are selected, otherwise a 10x2 array of vertices of\nthe interaction box. The first 8 points are the corners and midpoints\nof the box. The 9th point is the center of the box, and the last point\nis the location of the rotation handle that can be used to rotate the\nbox.</p>\n</dd>\n<dt>_drag_start<span class=\"classifier\">None | np.ndarray</span></dt><dd><p>If a drag has been started and is in progress then a length 2 array of\nthe initial coordinates of the drag. <cite>None</cite> otherwise.</p>\n</dd>\n<dt>_drag_box<span class=\"classifier\">None | np.ndarray</span></dt><dd><p>If a drag box is being created to select shapes then this is a 2x2\narray of the two extreme corners of the drag. <cite>None</cite> otherwise.</p>\n</dd>\n<dt>_drag_box_stored<span class=\"classifier\">None | np.ndarray</span></dt><dd><p>If a drag box is being created to select shapes then this is a 2x2\narray of the two extreme corners of the drag that have previously been\nrendered. <cite>None</cite> otherwise. Used to prevent rerendering the same\ndrag box when no data has changed.</p>\n</dd>\n<dt>_is_moving<span class=\"classifier\">bool</span></dt><dd><p>Bool indicating if any shapes are currently being moved.</p>\n</dd>\n<dt>_is_selecting<span class=\"classifier\">bool</span></dt><dd><p>Bool indicating if a drag box is currently being created in order to\nselect shapes.</p>\n</dd>\n<dt>_is_creating<span class=\"classifier\">bool</span></dt><dd><p>Bool indicating if any shapes are currently being created.</p>\n</dd>\n<dt>_fixed_aspect<span class=\"classifier\">bool</span></dt><dd><p>Bool indicating if aspect ratio of shapes should be preserved on\nresizing.</p>\n</dd>\n<dt>_aspect_ratio<span class=\"classifier\">float</span></dt><dd><p>Value of aspect ratio to be preserved if <cite>_fixed_aspect</cite> is <cite>True</cite>.</p>\n</dd>\n<dt>_fixed_vertex<span class=\"classifier\">None | np.ndarray</span></dt><dd><p>If a scaling or rotation is in progress then a length 2 array of the\ncoordinates that are remaining fixed during the move. <cite>None</cite> otherwise.</p>\n</dd>\n<dt>_fixed_index<span class=\"classifier\">int</span></dt><dd><p>If a scaling or rotation is in progress then the index of the vertex of\nthe bounding box that is remaining fixed during the move. <cite>None</cite>\notherwise.</p>\n</dd>\n<dt>_update_properties<span class=\"classifier\">bool</span></dt><dd><p>Bool indicating if properties are to allowed to update the selected\nshapes when they are changed. Blocking this prevents circular loops\nwhen shapes are selected and the properties are changed based on that\nselection</p>\n</dd>\n<dt>_allow_thumbnail_update<span class=\"classifier\">bool</span></dt><dd><p>Flag set to true to allow the thumbnail to be updated. Blocking the thumbnail\ncan be advantageous where responsiveness is critical.</p>\n</dd>\n<dt>_clipboard<span class=\"classifier\">dict</span></dt><dd><p>Dict of shape objects that are to be used during a copy and paste.</p>\n</dd>\n<dt>_colors<span class=\"classifier\">list</span></dt><dd><p>List of supported vispy color names.</p>\n</dd>\n<dt>_vertex_size<span class=\"classifier\">float</span></dt><dd><p>Size of the vertices of the shapes and bounding box in Canvas\ncoordinates.</p>\n</dd>\n<dt>_rotation_handle_length<span class=\"classifier\">float</span></dt><dd><p>Length of the rotation handle of the bounding box in Canvas\ncoordinates.</p>\n</dd>\n<dt>_input_ndim<span class=\"classifier\">int</span></dt><dd><p>Dimensions of shape data.</p>\n</dd>\n<dt>_thumbnail_update_thresh<span class=\"classifier\">int</span></dt><dd><p>If there are more than this number of shapes, the thumbnail\nwon’t update during interactive events</p>\n</dd>\n<dt>_property_choices<span class=\"classifier\">dict {str: array (N,)}</span></dt><dd><p>Possible values for the properties in Shapes.properties.</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>layer</strong> – The newly-created shapes layer.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"napari.layers.Shapes.html#napari.layers.Shapes\" title=\"napari.layers.Shapes\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Shapes</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_surface\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_surface</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'gray'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gamma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shading</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'flat'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Add a Surface layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>2-tuple</em><em> or </em><em>3-tuple of array</em>) – The first element of the tuple is an (N, D) array of vertices of\nmesh triangles. The second is an (M, 3) array of int of indices\nof the mesh triangles. The optional third element is the\n(K0, …, KL, N) array of values used to color vertices where the\nadditional L dimensions are used to color the same mesh with\ndifferent values. If not provided, it defaults to ones.</p></li>\n<li><p><strong>colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Colormap to use for luminance images. If a string must be the name\nof a supported colormap from vispy or matplotlib. If a tuple the\nfirst value must be a string to assign as a name to a colormap and\nthe second item must be a Colormap. If a dict the key must be a\nstring to assign as a name to a colormap and the value must be a\nColormap.</p></li>\n<li><p><strong>contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em> (</em><em>2</em><em>,</em><em>)</em>) – Color limits to be used for determining the colormap bounds for\nluminance images. If not passed is calculated as the min and max of\nthe image.</p></li>\n<li><p><strong>gamma</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Gamma correction for determining colormap linearity. Defaults to 1.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>shading</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>Shading</em>) – </p><p>One of a list of preset shading modes that determine the lighting model\nusing when rendering the surface in 3D.</p>\n<blockquote>\n<div><ul>\n<li><dl class=\"simple\">\n<dt>Shading.NONE</dt><dd><p>Corresponds to shading=’none’.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>Shading.FLAT</dt><dd><p>Corresponds to shading=’flat’.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>Shading.SMOOTH</dt><dd><p>Corresponds to shading=’smooth’.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</div></blockquote>\n<p></p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"id14\">\n<code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>The first element of the tuple is an (N, D) array of vertices of\nmesh triangles. The second is an (M, 3) array of int of indices\nof the mesh triangles. The third element is the (K0, …, KL, N)\narray of values used to color vertices where the additional L\ndimensions are used to color the same mesh with different values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>3-tuple of array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.vertices\">\n<code class=\"sig-name descname\"><span class=\"pre\">vertices</span></code></dt>\n<dd><p>Vertices of mesh triangles.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(N, D) array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.faces\">\n<code class=\"sig-name descname\"><span class=\"pre\">faces</span></code></dt>\n<dd><p>Indices of mesh triangles.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(M, 3) array of int</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.vertex_values\">\n<code class=\"sig-name descname\"><span class=\"pre\">vertex_values</span></code></dt>\n<dd><p>Values used to color vertices.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(K0, .., KL, N) array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.colormap\">\n<code class=\"sig-name descname\"><span class=\"pre\">colormap</span></code></dt>\n<dd><p>Colormap to use for luminance images. If a string must be the name\nof a supported colormap from vispy or matplotlib. If a tuple the\nfirst value must be a string to assign as a name to a colormap and\nthe second item must be a Colormap. If a dict the key must be a\nstring to assign as a name to a colormap and the value must be a\nColormap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, <a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\">napari.utils.Colormap</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\">tuple</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.contrast_limits\">\n<code class=\"sig-name descname\"><span class=\"pre\">contrast_limits</span></code></dt>\n<dd><p>Color limits to be used for determining the colormap bounds for\nluminance images. If not passed is calculated as the min and max of\nthe image.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a> (2,)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.shading\">\n<code class=\"sig-name descname\"><span class=\"pre\">shading</span></code></dt>\n<dd><p>One of a list of preset shading modes that determine the lighting model\nusing when rendering the surface.</p>\n<blockquote>\n<div><ul class=\"simple\">\n<li><p>‘none’</p></li>\n<li><p>‘flat’</p></li>\n<li><p>‘smooth’</p></li>\n</ul>\n</div></blockquote>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.gamma\">\n<code class=\"sig-name descname\"><span class=\"pre\">gamma</span></code></dt>\n<dd><p>Gamma correction for determining colormap linearity.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Notes</p>\n<dl class=\"simple\">\n<dt>_data_view<span class=\"classifier\">(M, 2) or (M, 3) array</span></dt><dd><p>The coordinates of the vertices given the viewed dimensions.</p>\n</dd>\n<dt>_view_faces<span class=\"classifier\">(P, 3) array</span></dt><dd><p>The integer indices of the vertices that form the triangles\nin the currently viewed slice.</p>\n</dd>\n<dt>_colorbar<span class=\"classifier\">array</span></dt><dd><p>Colorbar for current colormap.</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>layer</strong> – The newly-created surface layer.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"napari.layers.Surface.html#napari.layers.Surface\" title=\"napari.layers.Surface\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Surface</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_tracks\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_tracks</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tail_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tail_length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">head_length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'additive'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'turbo'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color_by</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'track_id'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormaps_dict</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Add a Tracks layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> (</em><em>N</em><em>, </em><em>D+1</em><em>)</em>) – Coordinates for N points in D+1 dimensions. ID,T,(Z),Y,X. The first\naxis is the integer ID of the track. D is either 3 or 4 for planar\nor volumetric timeseries respectively.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each point. Each property should be an array of length N,\nwhere N is the number of points.</p></li>\n<li><p><strong>graph</strong> (<em>dict {int: list}</em>) – Graph representing associations between tracks. Dictionary defines the\nmapping between a track ID and the parents of the track. This can be\none (the track has one parent, and the parent has &gt;=1 child) in the\ncase of track splitting, or more than one (the track has multiple\nparents, but only one child) in the case of track merging.\nSee examples/tracks_3d_with_graph.py</p></li>\n<li><p><strong>color_by</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Track property (from property keys) by which to color vertices.</p></li>\n<li><p><strong>tail_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Width of the track tails in pixels.</p></li>\n<li><p><strong>tail_length</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Length of the positive (backward in time) tails in units of time.</p></li>\n<li><p><strong>head_length</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Length of the positive (forward in time) tails in units of time.</p></li>\n<li><p><strong>colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Default colormap to use to set vertex colors. Specialized colormaps,\nrelating to specified properties can be passed to the layer via\ncolormaps_dict.</p></li>\n<li><p><strong>colormaps_dict</strong> (<em>dict {str: napari.utils.Colormap}</em>) – Optional dictionary mapping each property to a colormap for that\nproperty. This allows each property to be assigned a specific colormap,\nrather than having a global colormap for everything.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>layer</strong> – The newly-created tracks layer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.layers.Tracks.html#napari.layers.Tracks\" title=\"napari.layers.Tracks\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Tracks</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.add_vectors\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_vectors</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_choices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'red'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Add a Vectors layer to the layer list.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>(</em><em>N</em><em>, </em><em>2</em><em>, </em><em>D</em><em>) or </em><em>(</em><em>N1</em><em>, </em><em>N2</em><em>, </em><em>..</em><em>, </em><em>ND</em><em>, </em><em>D</em><em>) </em><em>array</em>) – An (N, 2, D) array is interpreted as “coordinate-like” data and a\nlist of N vectors with start point and projections of the vector in\nD dimensions. An (N1, N2, …, ND, D) array is interpreted as\n“image-like” data where there is a length D vector of the\nprojections at each pixel.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each vector. Each property should be an array of length N,\nwhere N is the number of vectors.</p></li>\n<li><p><strong>property_choices</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em>) – possible values for each property.</p></li>\n<li><p><strong>edge_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Width for all vectors in pixels.</p></li>\n<li><p><strong>length</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Multiplicative factor on projections for length of all vectors.</p></li>\n<li><p><strong>edge_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Color of all of the vectors.</p></li>\n<li><p><strong>edge_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>edge_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set vector color if a continuous attribute is used to set edge_color.</p></li>\n<li><p><strong>edge_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"id15\">\n<code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>The start point and projections of N vectors in D dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>(N, 2, D) array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id16\">\n<code class=\"sig-name descname\"><span class=\"pre\">properties</span></code></dt>\n<dd><p>Properties for each vector. Each property should be an array of length N,\nwhere N is the number of vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict {str: array (N,)}, DataFrame</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id17\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_width</span></code></dt>\n<dd><p>Width for all vectors in pixels.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.components.ViewerModel.length\">\n<code class=\"sig-name descname\"><span class=\"pre\">length</span></code></dt>\n<dd><p>Multiplicative factor on projections for length of all vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id18\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_color</span></code></dt>\n<dd><p>Color of all of the vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id19\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_color_cycle</span></code></dt>\n<dd><p>Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>np.ndarray, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id20\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_colormap</span></code></dt>\n<dd><p>Colormap to set vector color if a continuous attribute is used to set edge_color.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a>, <a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\">napari.utils.Colormap</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"id21\">\n<code class=\"sig-name descname\"><span class=\"pre\">edge_contrast_limits</span></code></dt>\n<dd><p>clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\">None</a>, (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a>)</p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Notes</p>\n<dl class=\"simple\">\n<dt>_view_data<span class=\"classifier\">(M, 2, 2) array</span></dt><dd><p>The start point and projections of N vectors in 2D for vectors whose\nstart point is in the currently viewed slice.</p>\n</dd>\n<dt>_view_face_color<span class=\"classifier\">(M, 4) np.ndarray</span></dt><dd><p>colors for the M in view vectors</p>\n</dd>\n<dt>_view_indices<span class=\"classifier\">(1, M) array</span></dt><dd><p>indices for the M in view vectors</p>\n</dd>\n<dt>_view_vertices<span class=\"classifier\">(4M, 2) or (8M, 2) np.ndarray</span></dt><dd><p>the corner points for the M in view faces. Shape is (4M, 2) for 2D and (8M, 2) for 3D.</p>\n</dd>\n<dt>_view_faces<span class=\"classifier\">(2M, 3) or (4M, 3) np.ndarray</span></dt><dd><p>indices of the _mesh_vertices that form the faces of the M in view vectors.\nShape is (2M, 2) for 2D and (4M, 2) for 3D.</p>\n</dd>\n<dt>_property_choices<span class=\"classifier\">dict {str: array (N,)}</span></dt><dd><p>Possible values for the properties in Vectors.properties.</p>\n</dd>\n<dt>_mesh_vertices<span class=\"classifier\">(4N, 2) array</span></dt><dd><p>The four corner points for the mesh representation of each vector as as\nrectangle in the slice that it starts in.</p>\n</dd>\n<dt>_mesh_triangles<span class=\"classifier\">(2N, 3) array</span></dt><dd><p>The integer indices of the <cite>_mesh_vertices</cite> that form the two triangles\nfor the mesh representation of the vectors.</p>\n</dd>\n<dt>_max_vectors_thumbnail<span class=\"classifier\">int</span></dt><dd><p>The maximum number of vectors that will ever be used to render the\nthumbnail. If more vectors are present then they are randomly\nsubsampled.</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>layer</strong> – The newly-created vectors layer.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference internal\" href=\"napari.layers.Vectors.html#napari.layers.Vectors\" title=\"napari.layers.Vectors\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.Vectors</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.asdict\">\n<code class=\"sig-name descname\"><span class=\"pre\">asdict</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span></dt>\n<dd><p>Convert a model to a dictionary.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.bind_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">bind_key</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">key</span></em>, <em class=\"sig-param\"><span class=\"pre\">func=&lt;object</span> <span class=\"pre\">object&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">*</span></em>, <em class=\"sig-param\"><span class=\"pre\">overwrite=False</span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Bind a key combination to a keymap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>keymap</strong> (<em>dict of str: callable</em>) – Keymap to modify.</p></li>\n<li><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><em>..</em>) – Key combination.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">...</span></code> acts as a wildcard if no key combinations can be matched\nin the keymap (this will overwrite all key combinations\nfurther down the lookup chain).</p></li>\n<li><p><strong>func</strong> (<em>callable</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, or </em><em>..</em>) – Callable to bind to the key combination.\nIf <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> is passed, unbind instead.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">...</span></code> acts as a blocker, effectively unbinding the key\ncombination for all keymaps further down the lookup chain.</p></li>\n<li><p><strong>overwrite</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>keyword-only</em><em>, </em><em>optional</em>) – Whether to overwrite the key combination if it already exists.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>unbound</strong> – Callable unbound by this operation, if any.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>callable or <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\">None</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>Key combinations are represented in the form <code class=\"docutils literal notranslate\"><span class=\"pre\">[modifier-]key</span></code>,\ne.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Control-c</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">Control-Alt-Delete</span></code>.\nValid modifiers are Control, Alt, Shift, and Meta.</p>\n<p>Letters will always be read as upper-case.\nDue to the native implementation of the key system, Shift pressed in\ncertain key combinations may yield inconsistent or unexpected results.\nTherefore, it is not recommended to use Shift with non-letter keys. On OSX,\nControl is swapped with Meta such that pressing Command reads as Control.</p>\n<p>Special keys include Shift, Control, Alt, Meta, Up, Down, Left, Right,\nPageUp, PageDown, Insert, Delete, Home, End, Escape, Backspace, F1,\nF2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, Space, Enter, and Tab</p>\n<p>Functions take in only one argument: the parent that the function\nwas bound to.</p>\n<p>By default, all functions are assumed to work on key presses only,\nbut can be denoted to work on release too by separating the function\ninto two statements with the yield keyword:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@viewer</span><span class=\"o\">.</span><span class=\"n\">bind_key</span><span class=\"p\">(</span><span class=\"s1\">'h'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">):</span>\n    <span class=\"c1\"># on key press</span>\n    <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s1\">'hello world!'</span>\n\n    <span class=\"k\">yield</span>\n\n    <span class=\"c1\"># on key release</span>\n    <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s1\">'goodbye world :('</span>\n</pre></div>\n</div>\n<p>To create a keymap that will block others, <code class=\"docutils literal notranslate\"><span class=\"pre\">bind_key(...,</span> <span class=\"pre\">...)`</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.construct\">\n<em class=\"property\"><span class=\"pre\">classmethod</span> </em><code class=\"sig-name descname\"><span class=\"pre\">construct</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_fields_set</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">values</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Creates a new model setting __dict__ and __fields_set__ from trusted or pre-validated data.\nDefault values are respected, but no other validation is performed.\nBehaves as if <cite>Config.extra = ‘allow’</cite> was set since it adds all passed values</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Model</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.copy\">\n<code class=\"sig-name descname\"><span class=\"pre\">copy</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">include</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">exclude</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">update</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">deep</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Duplicate a model, optionally choose which fields to include, exclude and change.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>include</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Union\" title=\"(in Python v3.9)\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Union</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.ForwardRef\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ForwardRef</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.ForwardRef\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ForwardRef</span></code></a>]) – fields to include in new model</p></li>\n<li><p><strong>exclude</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Union\" title=\"(in Python v3.9)\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Union</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.ForwardRef\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ForwardRef</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.ForwardRef\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ForwardRef</span></code></a>]) – fields to exclude from new model, as with values this takes precedence over include</p></li>\n<li><p><strong>update</strong> (<em>DictStrAny</em>) – values to change/add in the new model. Note: the data is not validated before creating\nthe new model: you should trust this data</p></li>\n<li><p><strong>deep</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bool</span></code></a>) – set to <cite>True</cite> to make a deep copy of the model</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Model</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>new model instance</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.dict\">\n<code class=\"sig-name descname\"><span class=\"pre\">dict</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.dict\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Convert to a dictionary.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.enums_as_values\">\n<code class=\"sig-name descname\"><span class=\"pre\">enums_as_values</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">as_values</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Temporarily override how enums are retrieved.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>as_values</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Whether enums should be shown as values (or as enum objects),\nby default <cite>True</cite></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.experimental\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">experimental</span></code></dt>\n<dd><p>Experimental commands for IPython console.</p>\n<p>For example run “viewer.experimental.cmds.loader.help”.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.json\">\n<code class=\"sig-name descname\"><span class=\"pre\">json</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.json\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Serialize to json.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.open\">\n<code class=\"sig-name descname\"><span class=\"pre\">open</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stack</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layer_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.open\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Open a path or list of paths with plugins, and add layers to viewer.</p>\n<p>A list of paths will be handed one-by-one to the napari_get_reader hook\nif stack is False, otherwise the full list is passed to each plugin\nhook.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><em>list of str</em>) – A filepath, directory, or URL (or a list of any) to open.</p></li>\n<li><p><strong>stack</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – If a list of strings is passed and <code class=\"docutils literal notranslate\"><span class=\"pre\">stack</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then the\nentire list will be passed to plugins.  It is then up to individual\nplugins to know how to handle a list of paths.  If <code class=\"docutils literal notranslate\"><span class=\"pre\">stack</span></code> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, then the <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> list is broken up and passed to plugin\nreaders one by one.  by default False.</p></li>\n<li><p><strong>plugin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – Name of a plugin to use.  If provided, will force <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> to be\nread with the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.  If the requested plugin cannot\nread <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code>, an exception will be raised.</p></li>\n<li><p><strong>layer_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – If provided, will force data read from <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> to be passed to the\ncorresponding <code class=\"docutils literal notranslate\"><span class=\"pre\">add_&lt;layer_type&gt;</span></code> method (along with any\nadditional) <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> provided to this function.  This <em>may</em>\nresult in exceptions if the data returned from the path is not\ncompatible with the layer_type.</p></li>\n<li><p><strong>**kwargs</strong> – All other keyword arguments will be passed on to the respective\n<code class=\"docutils literal notranslate\"><span class=\"pre\">add_layer</span></code> method.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>layers</strong> – A list of any layers that were added to the viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.open_sample\">\n<code class=\"sig-name descname\"><span class=\"pre\">open_sample</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">sample</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reader_plugin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.open_sample\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Open <cite>sample</cite> from <cite>plugin</cite> and add it to the viewer.</p>\n<p>To see all available samples registered by plugins, use\n<code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">napari.plugins.available_samples()</span></code></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plugin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – name of a plugin providing a sample</p></li>\n<li><p><strong>sample</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – name of the sample</p></li>\n<li><p><strong>reader_plugin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – reader plugin to pass to viewer.open (only used if the sample data\nis a string).  by default None.</p></li>\n<li><p><strong>**kwargs</strong> – additional kwargs will be passed to the sample data loader provided\nby <cite>plugin</cite>.  Use of <a href=\"#id22\"><span class=\"problematic\" id=\"id23\">**</span></a>kwargs may raise an error if the kwargs do\nnot match the sample data loader.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>layers</strong> – A list of any layers that were added to the viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#KeyError\" title=\"(in Python v3.9)\"><strong>KeyError</strong></a> – If <cite>plugin</cite> does not provide a sample named <cite>sample</cite>.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.reset\">\n<code class=\"sig-name descname\"><span class=\"pre\">reset</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span></dt>\n<dd><p>Reset the state of the model to default values.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.reset_view\">\n<code class=\"sig-name descname\"><span class=\"pre\">reset_view</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/components/viewer_model.html#ViewerModel.reset_view\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Reset the camera view.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.update\">\n<code class=\"sig-name descname\"><span class=\"pre\">update</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">values</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Update a model in place.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>values</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em>, </em><em>napari.utils.events.EventedModel</em>) – Values to update the model with. If an EventedModel is passed it is\nfirst converted to a dictionary. The keys of this dictionary must\nbe found as attributes on the current model.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.components.ViewerModel.update_forward_refs\">\n<em class=\"property\"><span class=\"pre\">classmethod</span> </em><code class=\"sig-name descname\"><span class=\"pre\">update_forward_refs</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">localns</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Try to update ForwardRefs on fields based on this Model, globalns and localns.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./api/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[]}},"__N_SSG":true}