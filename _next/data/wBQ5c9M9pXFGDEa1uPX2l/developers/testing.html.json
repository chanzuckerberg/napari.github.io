{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/release/index.html":{"level":1,"children":["/release/release_0_4_12.html","/release/release_0_4_11.html","/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_4_12.html":{"level":2,"children":[],"href":"/release/release_0_4_12.html","text":"napari 0.4.12"},"/glossary.html":{"level":1,"children":[],"href":"/glossary.html","text":"Glossary"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html","/developers/translations.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/translations.html":{"level":2,"children":[],"href":"/developers/translations.html","text":"Translations"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html","/api/stable/napari.utils.progress.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.progress.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.progress.html","text":"napari.utils.progress"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html","/api/stable/napari.types.partial.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.partial.html":{"level":3,"children":[],"href":"/api/stable/napari.types.partial.html","text":"napari.types.partial"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html","/community/working_groups.html","/community/meeting_schedule.html"],"href":"/community/index.html","text":"Community"},"/community/meeting_schedule.html":{"level":2,"children":[],"href":"/community/meeting_schedule.html","text":"Meeting schedule"},"/community/working_groups.html":{"level":2,"children":[],"href":"/community/working_groups.html","text":"Working groups"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the project and team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/best_practices.html","/plugins/stable/npe2_migration_guide.html","/plugins/stable/guides.html","/plugins/stable/first_plugin.html","/plugins/stable/test_deploy.html","/plugins/stable/npe1.html","/plugins/stable/find_and_install_plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find_and_install_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find_and_install_plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/npe1.html":{"level":2,"children":[],"href":"/plugins/stable/npe1.html","text":"1st Gen Plugin Guide (Deprecated)"},"/plugins/stable/test_deploy.html":{"level":2,"children":[],"href":"/plugins/stable/test_deploy.html","text":"Test and Deploy"},"/plugins/stable/first_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/first_plugin.html","text":"Your First Plugin"},"/plugins/stable/guides.html":{"level":2,"children":[],"href":"/plugins/stable/guides.html","text":"Contribution Guides"},"/plugins/stable/npe2_migration_guide.html":{"level":2,"children":[],"href":"/plugins/stable/npe2_migration_guide.html","text":"npe2 migration guide"},"/plugins/stable/best_practices.html":{"level":2,"children":[],"href":"/plugins/stable/best_practices.html","text":"Best practices"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/magicgui.html","/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/rendering-explanation.html","/guides/stable/rendering.html","/guides/stable/performance.html","/guides/stable/3D_interactivity.html","/guides/stable/events_reference.html","/guides/stable/contexts_expressions.html"],"href":"/guides/stable/index.html","text":"In-depth explanations"},"/guides/stable/contexts_expressions.html":{"level":2,"children":[],"href":"/guides/stable/contexts_expressions.html","text":"Contexts and Expressions in napari"},"/guides/stable/events_reference.html":{"level":2,"children":[],"href":"/guides/stable/events_reference.html","text":"Events reference"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"napari performance"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous rendering"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An introduction to the event loop in napari"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/howtos/index.html":{"level":1,"children":["/howtos/connecting_events.html","/howtos/napari_imageJ.html","/howtos/docker.html","/howtos/perfmon.html"],"href":"/howtos/index.html","text":"How-to guides"},"/howtos/perfmon.html":{"level":2,"children":[],"href":"/howtos/perfmon.html","text":"Performance monitoring"},"/howtos/docker.html":{"level":2,"children":[],"href":"/howtos/docker.html","text":"Napari in Docker"},"/howtos/napari_imageJ.html":{"level":2,"children":[],"href":"/howtos/napari_imageJ.html","text":"napari + ImageJ how-to guide"},"/howtos/connecting_events.html":{"level":2,"children":[],"href":"/howtos/connecting_events.html","text":"Hooking up your own events"},"/tutorials/index.html":{"level":1,"children":["/tutorials/segmentation/index.html","/tutorials/tracking/index.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/further-resources/napari-workshops.html","/tutorials/tracking/cell_tracking.html","/tutorials/segmentation/annotate_segmentation.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/segmentation/annotate_segmentation.html":{"level":2,"children":[],"href":"/tutorials/segmentation/annotate_segmentation.html","text":"Annotating segmentation with text and bounding boxes"},"/tutorials/tracking/cell_tracking.html":{"level":2,"children":[],"href":"/tutorials/tracking/cell_tracking.html","text":"Single cell tracking with napari"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/dask.html":{"level":2,"children":[],"href":"/tutorials/applications/dask.html","text":"Using Dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":2,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"Annotating videos with napari"},"/tutorials/tracking/index.html":{"level":2,"children":[],"href":"/tutorials/tracking/index.html","text":"Tracking"},"/tutorials/segmentation/index.html":{"level":2,"children":[],"href":"/tutorials/segmentation/index.html","text":"Segmentation"},"/tutorials/start_index.html":{"level":1,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/start_index.html","text":"Getting Started"},"/tutorials/fundamentals/vectors.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"Getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"How to install napari on your machine"}},"rootGlobalHeaders":["/tutorials/start_index.html","/tutorials/index.html","/howtos/index.html","/guides/stable/index.html","/plugins/stable/index.html","/community/index.html","/api/stable/index.html","/developers/index.html","/glossary.html","/release/index.html","/roadmaps/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Testing","pageFrontMatter":{},"previewImage":"../_images/tests.png","previewDescription":"We use unit tests, integration tests, and functional tests to ensure that\nnapari works as intended. We have","appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../\"></div>\n        <div class=\"section\" id=\"testing\">\n<span id=\"napari-testing\"></span>\n<div class=\"section\" id=\"overview\">\n<h2>Overview<a class=\"headerlink\" href=\"#overview\" title=\"Permalink to this headline\">¶</a></h2>\n<p>We use unit tests, integration tests, and functional tests to ensure that\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari</span></code> works as intended. We have</p>\n<ul class=\"simple\">\n<li><p>Unit tests which test if individual modules or functions work correctly\nin isolation.</p></li>\n<li><p>Integration tests which test if different modules or functions work properly\nwhen combined.</p></li>\n<li><p>Functional tests which test if slices of <code class=\"docutils literal notranslate\"><span class=\"pre\">napari</span></code> functionality work as\nintended in the whole system.</p></li>\n</ul>\n<p>To get the most return on investment (ROI) from our coding, we strive to test as\nmuch as we can with unit tests, requiring fewer integration tests, and the least number\nof functional tests as depicted in the test pyramid below from\n<a class=\"reference external\" href=\"https://www.softwaretestinghelp.com/the-difference-between-unit-integration-and-functional-testing/\" target=\"_blank\" rel=\"noreferrer\">softwaretestinghelp.com</a>:</p>\n<p><img alt=\"tests\" src=\"../_images/tests.png\"></p>\n<p>Unit tests are at the base of the pyramid because they are the easiest to write and\nthe quickest to run. The time and effort to implement and maintain tests increases\nfrom unit tests to integration and functional tests.</p>\n</div>\n<div class=\"section\" id=\"test-organization\">\n<h2>Test organization<a class=\"headerlink\" href=\"#test-organization\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All of <code class=\"docutils literal notranslate\"><span class=\"pre\">napari</span></code> tests are located in folders named <code class=\"docutils literal notranslate\"><span class=\"pre\">_tests</span></code>. We keep our unit\ntests located in the individual folders with the modules or functions they are\ntesting (e.g. the tests for the <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layer are located in a <code class=\"docutils literal notranslate\"><span class=\"pre\">_tests</span></code> folder\nalongside the <code class=\"docutils literal notranslate\"><span class=\"pre\">image.py</span></code> file). Our integration and functional tests are located in\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/_tests</span></code> folder at the top of the repository.</p>\n<p>We also strive to unit test as much of our model file and utils code independently of\nour GUI code. These tests are located in the <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/layers</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/components</span></code>,\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/utils</span></code> folders. Our GUI code is tests in the <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/_tests</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari/_qt</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/_vispy</span></code> folders. The <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/plugins</span></code> folder contains a mix\nof tests.</p>\n</div>\n<div class=\"section\" id=\"running-tests\">\n<h2>Running tests<a class=\"headerlink\" href=\"#running-tests\" title=\"Permalink to this headline\">¶</a></h2>\n<p>To run our test suite locally, run <code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code> on the command line.  If, for some reason\nyou don’t already have the test requirements in your environment, run <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span> <span class=\"pre\">install</span> <span class=\"pre\">-e</span> <span class=\"pre\">.[testing]</span></code>.</p>\n<p>There are a very small number of tests (&lt;5) that require showing GUI elements, (such\nas testing screenshots). By default, these are only run during continuous integration.\nIf you’d like to include them in local tests, set the environment variable “CI”:</p>\n<div class=\"highlight-sh notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nv\">CI</span><span class=\"o\">=</span><span class=\"m\">1</span> pytest\n</pre></div>\n</div>\n<div class=\"section\" id=\"tips-for-speeding-up-local-testing\">\n<h3>Tips for speeding up local testing<a class=\"headerlink\" href=\"#tips-for-speeding-up-local-testing\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Very often when developing new code, you don’t need or want to run the entire test suite (which can take many minutes to finish).  With <code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span></code>, it’s easy to run a subset of your tests:</p>\n<div class=\"highlight-sh notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># run tests in a specific subdirectory</span>\npytest napari/components\n<span class=\"c1\"># run tests in a specific file</span>\npytest napari/components/_tests/test_add_layers.py\n<span class=\"c1\"># run a specific test within a specific file</span>\npytest napari/components/_tests/test_add_layers.py::test_add_layers_with_plugins\n<span class=\"c1\"># select tests based on substring match of test name:</span>\npytest napari/layers/ -k <span class=\"s1\">'points and not bindings'</span>\n</pre></div>\n</div>\n<p>In general, it pays to learn a few of the <a class=\"reference external\" href=\"https://docs.pytest.org/en/latest/example/index.html\" target=\"_blank\" rel=\"noreferrer\">tips and tricks</a> of running pytest.</p>\n</div>\n<div class=\"section\" id=\"testing-coverage-locally\">\n<h3>Testing coverage locally<a class=\"headerlink\" href=\"#testing-coverage-locally\" title=\"Permalink to this headline\">¶</a></h3>\n<p>We always aim for good <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Code_coverage\" target=\"_blank\" rel=\"noreferrer\">test coverage</a> and we use <a class=\"reference external\" href=\"https://codecov.io/gh/napari/napari\" target=\"_blank\" rel=\"noreferrer\">codecov</a> during continuous integration to make sure we maintain good coverage.  If you’d like to test coverage locally as you develop new code, you can install <a class=\"reference external\" href=\"https://github.com/pytest-dev/pytest-cov\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">pytest-cov</span></code></a> and take advantage of a few handy commands:</p>\n<div class=\"highlight-sh notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># run the full test suite with coverage</span>\npytest --cov<span class=\"o\">=</span>napari\n<span class=\"c1\"># instead of coverage in the console, get a nice browser-based cov-report</span>\npytest --cov<span class=\"o\">=</span>napari --cov-report<span class=\"o\">=</span>html\nopen htmlcov/index.html  <span class=\"c1\"># look at the report</span>\n<span class=\"c1\"># run a subset of tests with coverage</span>\npytest --cov<span class=\"o\">=</span>napari.layers.shapes --cov-report<span class=\"o\">=</span>html napari/layers/shapes\nopen htmlcov/index.html  <span class=\"c1\"># look at the report</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"writing-tests\">\n<h2>Writing tests<a class=\"headerlink\" href=\"#writing-tests\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Writing tests for new code is a critical part of keeping napari maintainable as\nit grows. Tests are written in files whose names\nbegin with <code class=\"docutils literal notranslate\"><span class=\"pre\">test_*</span></code> and which are contained in one of the <code class=\"docutils literal notranslate\"><span class=\"pre\">_tests</span></code> directories.</p>\n<div class=\"section\" id=\"property-based-testing-with-hypothesis\">\n<h3>Property-based testing with Hypothesis<a class=\"headerlink\" href=\"#property-based-testing-with-hypothesis\" title=\"Permalink to this headline\">¶</a></h3>\n<p>Property-based tests allow you to test that “for any X, …” - with a much nicer\ndeveloper experience than using truly random data.  We use Hypothesis for unit or\nintegration tests where there are simple properties like <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span> <span class=\"pre\">==</span> <span class=\"pre\">load(save(x))</span></code> or\nwhen Napari implements a function we can check against the equivalent in a trusted\nlibrary for at least some inputs.</p>\n<p>See also <a class=\"reference external\" href=\"http://conference.scipy.org/proceedings/scipy2020/zac_hatfield-dodds.html\" target=\"_blank\" rel=\"noreferrer\">this paper on property-based testing in science</a>,\n<a class=\"reference external\" href=\"https://github.com/napari/napari/issues/2444\" target=\"_blank\" rel=\"noreferrer\">issue #2444</a>, and\n<a class=\"reference external\" href=\"https://hypothesis.readthedocs.io/en/latest/\" target=\"_blank\" rel=\"noreferrer\">the Hypothesis documentation</a>\n(including <a class=\"reference external\" href=\"https://hypothesis.readthedocs.io/en/latest/numpy.html\" target=\"_blank\" rel=\"noreferrer\">Numpy support</a>).</p>\n</div>\n<div class=\"section\" id=\"testing-with-qt-and-napari-viewer\">\n<h3>Testing with <code class=\"docutils literal notranslate\"><span class=\"pre\">Qt</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code><a class=\"headerlink\" href=\"#testing-with-qt-and-napari-viewer\" title=\"Permalink to this headline\">¶</a></h3>\n<p>There are a couple things to keep in mind when writing a test where a <code class=\"docutils literal notranslate\"><span class=\"pre\">Qt</span></code> event\nloop or a <code class=\"docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code> is required.  The important thing is that any widgets\nyou create during testing are cleaned up at the end of each test:</p>\n<ol>\n<li><p>If you need a <code class=\"docutils literal notranslate\"><span class=\"pre\">QApplication</span></code> to be running for your test, you can use the\n<a class=\"reference external\" href=\"https://pytest-qt.readthedocs.io/en/latest/reference.html#pytestqt.qtbot.QtBot\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">qtbot</span></code></a> fixture from <code class=\"docutils literal notranslate\"><span class=\"pre\">pytest-qt</span></code></p>\n<blockquote>\n<div><p>note: fixtures in pytest can be a little mysterious, since it’s not always\nclear where they are coming from.  In this case, using a pytest-qt fixture\nlooks like this:</p>\n</div></blockquote>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># just by putting `qtbot` in the list of arguments</span>\n<span class=\"c1\"># pytest-qt will start up an event loop for you</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">qtbot</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">qtbot</span></code> provides a convenient\n<a class=\"reference external\" href=\"https://pytest-qt.readthedocs.io/en/latest/reference.html#pytestqt.qtbot.QtBot.addWidget\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">addWidget</span></code></a>\nmethod that will ensure that the widget gets closed at the end of the test.\nIt <em>also</em> provides a whole bunch of other\nconvenient methods for interacting with your GUI tests (clicking, waiting\nsignals, etc…).  See the <a class=\"reference external\" href=\"https://pytest-qt.readthedocs.io/en/latest/reference.html#pytestqt.qtbot.QtBot\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">qtbot</span></code> docs</a> for details.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># the qtbot provides convenience methods like addWidget</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_something_else</span><span class=\"p\">(</span><span class=\"n\">qtbot</span><span class=\"p\">):</span>\n    <span class=\"n\">widget</span> <span class=\"o\">=</span> <span class=\"n\">QWidget</span><span class=\"p\">()</span>\n    <span class=\"n\">qtbot</span><span class=\"o\">.</span><span class=\"n\">addWidget</span><span class=\"p\">(</span><span class=\"n\">widget</span><span class=\"p\">)</span>  <span class=\"c1\"># tell qtbot to clean this widget later</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n<li><p>When writing a test that requires a <code class=\"docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code> object, we provide a\n<a class=\"reference external\" href=\"https://docs.pytest.org/en/stable/fixture.html\" target=\"_blank\" rel=\"noreferrer\">pytest fixture</a> called\n<code class=\"docutils literal notranslate\"><span class=\"pre\">make_napari_viewer</span></code> that will take care of creating a viewer and cleaning up\nat the end of the test.  When using this function, it is <strong>not</strong> necessary to\nuse a <code class=\"docutils literal notranslate\"><span class=\"pre\">qtbot</span></code> fixture, nor should you do any additional cleanup (such as\nusing <code class=\"docutils literal notranslate\"><span class=\"pre\">qtbot.addWidget</span></code> or calling <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.close()</span></code>) at the end of the test.\nDuplicate cleanup may cause an error.  Use the fixture as follows:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># the make_napari_viewer fixture is defined in napari/conftest.py</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_something_with_a_viewer</span><span class=\"p\">(</span><span class=\"n\">make_napari_viewer</span><span class=\"p\">):</span>\n    <span class=\"c1\"># make_napari_viewer takes any keyword arguments that napari.Viewer() takes</span>\n    <span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">make_napari_viewer</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># do stuff with the viewer, no qtbot or viewer.close() methods needed.</span>\n    <span class=\"o\">...</span>\n</pre></div>\n</div>\n</li>\n</ol>\n<blockquote>\n<div><p>If you’re curious to see the actual <code class=\"docutils literal notranslate\"><span class=\"pre\">make_napari_viewer</span></code> fixture definition, it’s\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">napari/conftest.py</span></code></p>\n</div></blockquote>\n</div>\n<div class=\"section\" id=\"mocking-fake-it-till-you-make-it\">\n<h3>Mocking: “Fake it till you make it”<a class=\"headerlink\" href=\"#mocking-fake-it-till-you-make-it\" title=\"Permalink to this headline\">¶</a></h3>\n<p>It can be confusing to write unit tests for individual functions, when the\nfunction being tested in turn depends on the output from some other function or\nmethod.  This makes it tempting to write integration tests that “just test the\nwhole thing together”.  A useful tool in this case is the <a class=\"reference external\" href=\"https://docs.python.org/3/library/unittest.mock.html\" target=\"_blank\" rel=\"noreferrer\">mock object\nlibrary</a>.  “Mocking” lets\nyou patch or replace parts of the code being tested with “fake” behavior or\nreturn values, so that you can test how a given function would perform <em>if</em> it\nwere to receive some value from the upstream code.  For a few examples of using\nmocks when testing napari, search the codebase for\n<a class=\"reference external\" href=\"https://github.com/napari/napari/search?q=%22unittest.mock%22&amp;type=Code\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code></a></p>\n</div>\n</div>\n<div class=\"section\" id=\"known-issues\">\n<h2>Known issues<a class=\"headerlink\" href=\"#known-issues\" title=\"Permalink to this headline\">¶</a></h2>\n<p>There are several known issues with displaying GUI tests on windows in CI, and\nso certain tests have been disabled from windows in CI, see\n<a class=\"reference external\" href=\"https://github.com/napari/napari/pull/1377\" target=\"_blank\" rel=\"noreferrer\">#1377</a> for more discussion.</p>\n</div>\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./developers\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[{"href":"#overview","text":"Overview"},{"href":"#test-organization","text":"Test organization"},{"href":"#running-tests","text":"Running tests"},{"href":"#writing-tests","text":"Writing tests"},{"href":"#known-issues","text":"Known issues"}],"ipynbSource":"","mdSource":"/_sources/developers/testing.md"}},"__N_SSG":true}