{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release Guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer Guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing Guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/perfmon.html","/guides/stable/rendering.html","/guides/stable/docker.html","/guides/stable/performance.html","/guides/stable/magicgui.html","/guides/stable/translations.html","/guides/stable/rendering-explanation.html","/guides/stable/connecting_events.html","/guides/stable/connecting_events.html#long-running-blocking-functions","/guides/stable/3D_interactivity.html"],"href":"/guides/stable/index.html","text":"Developer guides"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"/guides/stable/connecting_events.html":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html","text":"Hooking up your own events"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/translations.html":{"level":2,"children":[],"href":"/guides/stable/translations.html","text":"Translations"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"Napari Performance"},"/guides/stable/docker.html":{"level":2,"children":[],"href":"/guides/stable/docker.html","text":"Napari in Docker (WIP)"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous Rendering"},"/guides/stable/perfmon.html":{"level":2,"children":[],"href":"/guides/stable/perfmon.html","text":"Performance Monitoring"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/release/index.html":{"level":1,"children":["/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_11.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/for_napari_developers.html","/plugins/stable/for_plugin_developers.html","/plugins/stable/hook_specifications.html","/plugins/stable/find-and-install-plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"/plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"/plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"/plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"/tutorials/index.html":{"level":1,"children":["/tutorials/fundamentals/index.html","/tutorials/applications/index.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/applications/index.html":{"level":2,"children":["/tutorials/applications/annotate_segmentation.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/applications/napari_imageJ.html","/tutorials/applications/cell_tracking.html"],"href":"/tutorials/applications/index.html","text":"Applications"},"/tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"/tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"/tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"/tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"/tutorials/applications/dask.html":{"level":3,"children":[],"href":"/tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"/tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"/tutorials/fundamentals/index.html":{"level":2,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/fundamentals/index.html","text":"Fundamentals"},"/tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html"],"href":"/community/index.html","text":"Community"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance Model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the Project and Team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["/community/index.html","/tutorials/index.html","/plugins/stable/index.html","/release/index.html","/api/stable/index.html","/roadmaps/index.html","/guides/stable/index.html","/developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"image layer tutorial","pageFrontMatter":{},"appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"image-layer-tutorial\">\n\n<p>Welcome to the tutorial on the <strong>napari</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layer!</p>\n<p>This tutorial assumes you have already installed <strong>napari</strong>, know how to launch\nthe viewer, and are familiar with its layout. For help with installation see our\n<a class=\"reference internal\" href=\"installation.html\"><span class=\"doc std std-doc\">installation</span></a> tutorial. For help getting started with the\nviewer see our <a class=\"reference internal\" href=\"getting_started.html\"><span class=\"doc std std-doc\">getting started</span></a> tutorial. For help\nunderstanding the organisation of the viewer, including things like the layers\nlist, the layer properties widgets, the layer control panels, and the dimension\nsliders see our <a class=\"reference internal\" href=\"viewer.html\"><span class=\"doc std std-doc\">napari viewer</span></a> tutorial.</p>\n<p>This tutorial will teach you about the <strong>napari</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layer, including the\ntypes of images that can be displayed, and how to set properties like the\ncontrast, opacity, colormaps and blending mode. At the end of the tutorial you\nshould understand how to add and manipulate a variety of different types of\nimages both from the GUI and from the console.</p>\n<div class=\"section\" id=\"a-simple-example\">\n<h2>a simple example<a class=\"headerlink\" href=\"#a-simple-example\" title=\"Permalink to this headline\">¶</a></h2>\n<p>You can create a new viewer and add an image in one go using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari.view_image</span></code> method, or if you already have an existing viewer, you can\nadd an image to it using <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.add_image</span></code>. The api of both methods is the\nsame. In these examples we’ll mainly use <code class=\"docutils literal notranslate\"><span class=\"pre\">view_image</span></code>.</p>\n<p>A simple example of viewing an image is as follows:</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">napari</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skimage</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n\n<span class=\"n\">cells</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">cells3d</span><span class=\"p\">()[</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>  <span class=\"c1\"># grab some data</span>\n<span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">cells</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">'magma'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari.utils</span> <span class=\"kn\">import</span> <span class=\"n\">nbscreenshot</span>\n\n<span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"arguments-of-view-image-and-add-image\">\n<h2>arguments of view_image and add_image<a class=\"headerlink\" href=\"#arguments-of-view-image-and-add-image\" title=\"Permalink to this headline\">¶</a></h2>\n<p><a class=\"reference internal\" href=\"../../api/stable/napari.view_layers.html#napari.view_layers.view_image\" title=\"napari.view_layers.view_image\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">view_image()</span></code></a> and <a class=\"reference internal\" href=\"../../api/stable/napari.Viewer.html#napari.Viewer.add_image\" title=\"napari.Viewer.add_image\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add_image()</span></code></a>\naccept the same layer-creation parameters.</p>\n<div class=\"cell tag_hide-cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"image-data-and-numpy-like-arrays\">\n<h2>image data and numpy-like arrays<a class=\"headerlink\" href=\"#image-data-and-numpy-like-arrays\" title=\"Permalink to this headline\">¶</a></h2>\n<p>napari can take any numpy-like array as input for its image layer. A numpy-like\narray can just be a <a class=\"reference external\" href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html\" target=\"_blank\" rel=\"noreferrer\">numpy\narray</a>, a\n<a class=\"reference external\" href=\"https://docs.dask.org/en/stable/array.html\" target=\"_blank\" rel=\"noreferrer\">dask array</a>, an\n<a class=\"reference external\" href=\"http://xarray.pydata.org/en/stable/generated/xarray.DataArray.html\" target=\"_blank\" rel=\"noreferrer\">xarray</a>, a\n<a class=\"reference external\" href=\"https://zarr.readthedocs.io/en/stable/api/core.html\" target=\"_blank\" rel=\"noreferrer\">zarr array</a>, or any other\nobject that you can index into and when you call\n<a class=\"reference external\" href=\"https://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">np.asarray</span></code></a>\non it you get back a numpy array.</p>\n<p>The great thing about napari support array-like objects is that you get to keep\non using your favorite array libraries without worrying about any conversions as\nwe’ll handle all of that for you.</p>\n<p>napari will also wait until just before it displays data onto the screen to\nactually generate a numpy array from your data, and so if you’re using a library\nlike <code class=\"docutils literal notranslate\"><span class=\"pre\">dask</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">zarr</span></code> that supports lazy loading and lazy evaluation, we won’t\nforce you load or compute on data that you’re not looking at. This enables\nnapari to seamlessly browse enormous datasets that are loaded in the right way.\nFor example, here we are browsing over 100GB of lattice lightsheet data stored\nin a zarr file:</p>\n<p><img alt=\"image: lattice light sheet microscopy\" src=\"../../_images/LLSM.gif\"></p>\n</div>\n<div class=\"section\" id=\"image-pyramids\">\n<h2>image pyramids<a class=\"headerlink\" href=\"#image-pyramids\" title=\"Permalink to this headline\">¶</a></h2>\n<p>For exceptionally large datasets napari supports image pyramids. An image\npyramid is a list of arrays, where each array is downsampling of the previous\narray in the list, so that you end up with images of successively smaller and\nsmaller shapes. A standard image pyramid might have a 2x downsampling at each\nlevel, but napari can support any type of pyramid as long as the shapes are\ngetting smaller each time.</p>\n<p>Image pyramids are especially useful for incredibly large 2D images when viewed\nin 2D or incredibly large 3D images when viewed in 3D. For example this ~100k x\n200k pixel pathology image consists of 10 pyramid levels and can be easily\nbrowsed as at each moment in time we only load the level of the pyramid and the\npart of the image that needs to be displayed:</p>\n<p><img alt=\"image: pathology\" src=\"../../_images/pathology.gif\"></p>\n<p>This example had precomputed image pyramids stored in a zarr file, which is best\nfor performance. If, however you don’t have a precomputed pyramid but try and\nshow a exceptionally large image napari will try and compute pyramids for you\nunless you tell it not too.</p>\n<p>You can use the <code class=\"docutils literal notranslate\"><span class=\"pre\">is_pyramid</span></code> keyword argument to specify if your data is an\nimage pyramid or not. If you don’t provide this value, then will try and guess\nwhether your data is or needs to be an image pyramid.</p>\n</div>\n<div class=\"section\" id=\"d-rendering-of-images\">\n<h2>3D rendering of images<a class=\"headerlink\" href=\"#d-rendering-of-images\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers can be rendered in both 2D and 3D mode, and one of our viewer\nbuttons can toggle between each mode. The number of dimensions sliders will be 2\nor 3 less than the total number of dimensions of the layer, allowing you to\nbrowse volumetric timeseries data and other high dimensional data. See for\nexample these cells undergoing mitosis in this volumetric timeseries:</p>\n<p><img alt=\"image: mitorsis\" src=\"../../_images/mitosis.gif\"></p>\n</div>\n<div class=\"section\" id=\"loading-multichannel-images\">\n<h2>loading multichannel images<a class=\"headerlink\" href=\"#loading-multichannel-images\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Each channel in a multichannel image can be displayed as an individual layer\nby using the <code class=\"docutils literal notranslate\"><span class=\"pre\">channel_axis</span></code> argument in <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.add_image()</span></code>. All the rest\nof the arguments to <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.add_image()</span></code> (e.g. name, colormap, contrast_limit)\ncan take the form of a list of the same size as the number of channels.</p>\n<p>For example, the multichannel image below has dimensions (60, 2, 256, 256)\nwith axes ordered ZCYX (so the channel axis has an index of 1). It is loaded into\nnapari in one line.</p>\n<div class=\"highlight-{code notranslate\"><div class=\"highlight\"><pre><span></span>import napari\nfrom skimage import data\n\ncells = data.cells3d() #ZCYX image data\n\n# load multichannel image in one line\nviewer = napari.view_image(cells, channel_axis=1)\n\n# load multichannel image in one line, with additional options\nviewer = napari.view_image(cells, channel_axis=1, name=[\"membrane\", \"nuclei\"], colormap=[\"green\", \"magenta\"], contrast_limit=[[1000,20000],[1000,50000]]\n\n</pre></div>\n</div>\n<p><img alt=\"image: multichannel image\" src=\"../../_images/multichannel_cells.png\"></p>\n</div>\n<div class=\"section\" id=\"viewing-rgb-vs-luminance-grayscale-images\">\n<h2>viewing rgb vs luminance (grayscale) images<a class=\"headerlink\" href=\"#viewing-rgb-vs-luminance-grayscale-images\" title=\"Permalink to this headline\">¶</a></h2>\n<p>In this example we explicitly set the <code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> keyword to be <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>\nbecause we know we are working with an <code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> image:</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">astronaut</span><span class=\"p\">(),</span> <span class=\"n\">rgb</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari.utils</span> <span class=\"kn\">import</span> <span class=\"n\">nbscreenshot</span>\n\n<span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>If we had left that keyword argument out napari would have successfully guessed\nthat we were trying to show an <code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">rgba</span></code> image because the final dimension\nwas 3 or 4. If you have a luminance image where the last dimension is 3 or 4 you\ncan set the <code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> property to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> so napari handles the image correctly.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> data must either be <code class=\"docutils literal notranslate\"><span class=\"pre\">uint8</span></code>, corresponding to values between 0 and 255, or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code> and between 0 and 1. If the values are <code class=\"docutils literal notranslate\"><span class=\"pre\">float</span></code> and outside the 0 to 1\nrange they will be clipped.</p>\n</div>\n<div class=\"section\" id=\"working-with-colormaps\">\n<h2>working with colormaps<a class=\"headerlink\" href=\"#working-with-colormaps\" title=\"Permalink to this headline\">¶</a></h2>\n<p>napari supports any colormap that is created with <code class=\"docutils literal notranslate\"><span class=\"pre\">vispy.color.Colormap</span></code>. We\nprovide access to some standard colormaps that you can set using a string of\ntheir name. These include:</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">colormaps</span><span class=\"o\">.</span><span class=\"n\">AVAILABLE_COLORMAPS</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>Passing any of these strings as follows to set the image colormap:</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">moon</span><span class=\"p\">(),</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>You can also access the current\ncolormap through the <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.colormap</span></code> property which returns a tuple of the\ncolormap name followed by the vispy colormap object. You can list all the\navailable colormaps using <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.colormaps</span></code>.</p>\n<p>It is also possible to create your own colormaps using vispy’s\n<code class=\"docutils literal notranslate\"><span class=\"pre\">vispy.color.Colormap</span></code> object, see it’s full <a class=\"reference external\" href=\"http://vispy.org/color.html#vispy.color.Colormap\" target=\"_blank\" rel=\"noreferrer\">documentation\nhere</a>. Briefly, you can pass\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Colormap</span></code> a list of length 3 or length 4 lists, corresponding to the <code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">rgba</span></code> values at different points along the colormap.</p>\n<p>For example, to make a diverging colormap that goes from red to blue through\nblack, and color a random array you can do the following:</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">napari</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vispy.color</span> <span class=\"kn\">import</span> <span class=\"n\">Colormap</span>\n\n<span class=\"n\">cmap</span> <span class=\"o\">=</span> <span class=\"n\">Colormap</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">))</span>\n\n<span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">colormap</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'diverging'</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari.utils</span> <span class=\"kn\">import</span> <span class=\"n\">nbscreenshot</span>\n\n<span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>Note in this example how we passed the colormap keyword argument as a tuple\ncontaining both a name for our new custom colormap and the colormap itself. If\nwe had only passed the colormap it would have been given a default name.</p>\n<p>The named colormap now appears in the dropdown menu alongside a little thumbnail\nof the full range of the colormap.</p>\n</div>\n<div class=\"section\" id=\"adjusting-contrast-limits\">\n<h2>adjusting contrast limits<a class=\"headerlink\" href=\"#adjusting-contrast-limits\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Each image layer gets mapped through its colormap according to values called\ncontrast limits. The contrast limits are a 2-tuple where the second value is\nlarger than the first. The smaller contrast limit corresponds to the value of\nthe image data that will get mapped to the color defined by 0 in the colormap.\nAll values of image data smaller than this value will also get mapped to this\ncolor. The larger contrast limit corresponds to the value of the image data that\nwill get mapped to the color defined by 1 in the colormap. All values of image\ndata larger than this value will also get mapped to this color.</p>\n<p>For example, you are looking at an image that has values between 0 and 100 with\na standard <code class=\"docutils literal notranslate\"><span class=\"pre\">gray</span></code> colormap, and you set the contrast limits to <code class=\"docutils literal notranslate\"><span class=\"pre\">(20,</span> <span class=\"pre\">75)</span></code>. Then\nall the pixels with values less than 20 will get mapped to black, the color\ncorresponding to 0 in the colormap, and all pixels with values greater than 75\nwill get mapped to white, the color corresponding to 1 in the colormap. All\nother pixel values between 20 and 75 will get linearly mapped onto the range of\ncolors between black and white.</p>\n<p>In napari you can set the contrast limits when creating an <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layer or on\nan existing layer using the <code class=\"docutils literal notranslate\"><span class=\"pre\">contrast_limits</span></code> keyword argument or property,\nrespectively.</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">moon</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'moon'</span><span class=\"p\">)</span>\n<span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">[</span><span class=\"s1\">'moon'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">contrast_limits</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">175</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari.utils</span> <span class=\"kn\">import</span> <span class=\"n\">nbscreenshot</span>\n\n<span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>Because the contrast limits are defined by two values the corresponding slider\nhas two handles, one the adjusts the smaller value, one that adjusts the larger\nvalue.</p>\n<p>As of right now adjusting the contrast limits has no effect for <code class=\"docutils literal notranslate\"><span class=\"pre\">rgb</span></code> data.</p>\n<p>If no contrast limits are passed, then napari will compute them. If your data is\nsmall, then napari will just take the minimum and maximum values across your\nentire image. If your data is exceptionally large, this operation can be very\ntime consuming and so if you have passed an image pyramid then napari will just\nuse the top level of that pyramid, or it will use the minimum and maximum values\nacross the top, middle, and bottom slices of your image. In general, if working\nwith big images it is recommended you explicitly set the contrast limits if you\ncan.</p>\n<p>Currently if you pass contrast limits as a keyword argument to a layer then full\nextent of the contrast limits range slider will be set to those values.</p>\n</div>\n<div class=\"section\" id=\"layer-visibility\">\n<h2>layer visibility<a class=\"headerlink\" href=\"#layer-visibility\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers support a visibility toggle that allows you to set the <code class=\"docutils literal notranslate\"><span class=\"pre\">visible</span></code>\nproperty of each layer. This property is located inside the layer widget in the\nlayers list and is represented by an eye icon.</p>\n</div>\n<div class=\"section\" id=\"layer-opacity\">\n<h2>layer opacity<a class=\"headerlink\" href=\"#layer-opacity\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers support an opacity slider and <code class=\"docutils literal notranslate\"><span class=\"pre\">opacity</span></code> property that allow you\nto adjust the layer opacity between 0, fully invisible and 1, fully visible.</p>\n</div>\n<div class=\"section\" id=\"blending-layers\">\n<h2>blending layers<a class=\"headerlink\" href=\"#blending-layers\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers support three blending modes <code class=\"docutils literal notranslate\"><span class=\"pre\">translucent</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">additive</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">opaque</span></code> that determine how the visuals for this layer get mixed with the\nvisuals from the other layers.</p>\n<p>An <code class=\"docutils literal notranslate\"><span class=\"pre\">opaque</span></code> layer renders all the other layers below it invisible and will fade\nto black as you decrease its opacity.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">translucent</span></code> setting will cause the layer to blend with the layers below it\nif you decrease its opacity but will fully block those layers if its opacity is\n1. This is a reasonable default, useful for many applications.</p>\n<p>The final blending mode <code class=\"docutils literal notranslate\"><span class=\"pre\">additive</span></code> will cause the layer to blend with the layers\nbelow even when it has full opacity. This mode is especially useful for many\ncell biology applications where you have multiple different components of a cell\nlabeled in different colors.</p>\n<p>For example:</p>\n<p><img alt=\"image: blending\" src=\"../../_images/blending.png\"></p>\n</div>\n<div class=\"section\" id=\"layer-interpolation\">\n<h2>layer interpolation<a class=\"headerlink\" href=\"#layer-interpolation\" title=\"Permalink to this headline\">¶</a></h2>\n<p>We support a variety of interpolation modes when viewing 2D slices. In the\ndefault mode <code class=\"docutils literal notranslate\"><span class=\"pre\">nearest</span></code> each pixel is represented as a small square of specified\nsize. As you zoom in you will eventually see each pixel. In other modes\nneighbouring pixels are blended together according to different functions, for\nexample <code class=\"docutils literal notranslate\"><span class=\"pre\">bicubic</span></code>, which can lead to smoother looking images. For most\nscientific use-cases <code class=\"docutils literal notranslate\"><span class=\"pre\">nearest</span></code> is recommended because it does not introduce more\nartificial blurring. These modes have no effect when viewing 3D slices.</p>\n</div>\n<div class=\"section\" id=\"layer-rendering\">\n<h2>layer rendering<a class=\"headerlink\" href=\"#layer-rendering\" title=\"Permalink to this headline\">¶</a></h2>\n<p>When viewing 3D slices, we support a variety of rendering modes. The default\nmode <code class=\"docutils literal notranslate\"><span class=\"pre\">mip</span></code>, or maximum intensity projection, will combine voxels at different\ndistances from the camera according to a maximum intensity projection to create\nthe 2D image that is then displayed on the screen. This mode works well for many\nbiological images such as these cells growing in culture:</p>\n<p><img alt=\"image: rendering\" src=\"../../_images/rendering.png\"></p>\n<p>When viewing 2D slices the rendering mode has no effect.</p>\n</div>\n<div class=\"section\" id=\"naming-layers\">\n<h2>naming layers<a class=\"headerlink\" href=\"#naming-layers\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers support a <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> property that can be set inside a text box\ninside the layer widget in the layers list. The name of each layer is forced\ninto being unique so that you can use the name to index into <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.layers</span></code> to\nretrieve the layer object.</p>\n</div>\n<div class=\"section\" id=\"scaling-layers\">\n<h2>scaling layers<a class=\"headerlink\" href=\"#scaling-layers\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers support a <code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span></code> property and keyword argument that will rescale\nthe layer multiplicatively according to the scale values (one for each\ndimension). This property can be particularly useful for viewing anisotropic\nvolumes where the size of the voxel in the z dimension might be different then\nthe size in the x and y dimensions.</p>\n</div>\n<div class=\"section\" id=\"translating-layers\">\n<h2>translating layers<a class=\"headerlink\" href=\"#translating-layers\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers support a <code class=\"docutils literal notranslate\"><span class=\"pre\">translate</span></code> property and keyword argument that you can\nuse to offset a layer relative to the other layers, which could be useful if you\nare trying to overlay two layers for image registration purposes.</p>\n</div>\n<div class=\"section\" id=\"layer-metadata\">\n<h2>layer metadata<a class=\"headerlink\" href=\"#layer-metadata\" title=\"Permalink to this headline\">¶</a></h2>\n<p>All our layers also support a <code class=\"docutils literal notranslate\"><span class=\"pre\">metadata</span></code> property and keyword argument that you\ncan use to store an arbitrary metadata dictionary on the layer.</p>\n</div>\n<div class=\"section\" id=\"next-steps\">\n<h2>next steps<a class=\"headerlink\" href=\"#next-steps\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Hopefully, this tutorial has given you a detailed understanding of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code>\nlayer, including how to create one and control its properties. To learn more\nabout some of the other layer types that <strong>napari</strong> supports checkout some more\nof our tutorials listed below. The <a class=\"reference internal\" href=\"labels.html\"><span class=\"doc std std-doc\">labels layer</span></a> tutorial is a great\none to try next as labels layers are an extension of our image layers used for\nlabeling regions of images.</p>\n</div>\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./tutorials/fundamentals\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[{"href":"#a-simple-example","text":"a simple example"},{"href":"#arguments-of-view-image-and-add-image","text":"arguments of view_image and add_image"},{"href":"#image-data-and-numpy-like-arrays","text":"image data and numpy-like arrays"},{"href":"#image-pyramids","text":"image pyramids"},{"href":"#d-rendering-of-images","text":"3D rendering of images"},{"href":"#loading-multichannel-images","text":"loading multichannel images"},{"href":"#viewing-rgb-vs-luminance-grayscale-images","text":"viewing rgb vs luminance (grayscale) images"},{"href":"#working-with-colormaps","text":"working with colormaps"},{"href":"#adjusting-contrast-limits","text":"adjusting contrast limits"},{"href":"#layer-visibility","text":"layer visibility"},{"href":"#layer-opacity","text":"layer opacity"},{"href":"#blending-layers","text":"blending layers"},{"href":"#layer-interpolation","text":"layer interpolation"},{"href":"#layer-rendering","text":"layer rendering"},{"href":"#naming-layers","text":"naming layers"},{"href":"#scaling-layers","text":"scaling layers"},{"href":"#translating-layers","text":"translating layers"},{"href":"#layer-metadata","text":"layer metadata"},{"href":"#next-steps","text":"next steps"}]}},"__N_SSG":true}