{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"../../developers/index.html":{"level":1,"children":["../../developers/benchmarks.html","../../developers/contributing.html","../../developers/core_dev_guide.html","../../developers/profiling.html","../../developers/release.html","../../developers/testing.html","../../developers/docs.html"],"href":"../../developers/index.html","text":"Developer resources"},"../../developers/docs.html":{"level":2,"children":[],"href":"../../developers/docs.html","text":"Organization of Documentation for napari"},"../../developers/testing.html":{"level":2,"children":[],"href":"../../developers/testing.html","text":"Testing"},"../../developers/release.html":{"level":2,"children":[],"href":"../../developers/release.html","text":"Release Guide"},"../../developers/profiling.html":{"level":2,"children":[],"href":"../../developers/profiling.html","text":"Profiling"},"../../developers/core_dev_guide.html":{"level":2,"children":[],"href":"../../developers/core_dev_guide.html","text":"Core Developer Guide"},"../../developers/contributing.html":{"level":2,"children":[],"href":"../../developers/contributing.html","text":"Contributing Guide"},"../../developers/benchmarks.html":{"level":2,"children":[],"href":"../../developers/benchmarks.html","text":"Benchmarks"},"../../guides/stable/index.html":{"level":1,"children":["../../guides/stable/event_loop.html","../../guides/stable/threading.html","../../guides/stable/perfmon.html","../../guides/stable/rendering.html","../../guides/stable/docker.html","../../guides/stable/performance.html","../../guides/stable/magicgui.html","../../guides/stable/translations.html","../../guides/stable/rendering-explanation.html","../../guides/stable/connecting_events.html","../../guides/stable/connecting_events.html#long-running-blocking-functions","../../guides/stable/3D_interactivity.html"],"href":"../../guides/stable/index.html","text":"Developer guides"},"../../guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"../../guides/stable/3D_interactivity.html","text":"3D interactivity"},"../../guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"../../guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"../../guides/stable/connecting_events.html":{"level":2,"children":[],"href":"../../guides/stable/connecting_events.html","text":"Hooking up your own events"},"../../guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"../../guides/stable/rendering-explanation.html","text":"Rendering in napari"},"../../guides/stable/translations.html":{"level":2,"children":[],"href":"../../guides/stable/translations.html","text":"Translations"},"../../guides/stable/magicgui.html":{"level":2,"children":[],"href":"../../guides/stable/magicgui.html","text":"Using magicgui in napari"},"../../guides/stable/performance.html":{"level":2,"children":[],"href":"../../guides/stable/performance.html","text":"Napari Performance"},"../../guides/stable/docker.html":{"level":2,"children":[],"href":"../../guides/stable/docker.html","text":"Napari in Docker (WIP)"},"../../guides/stable/rendering.html":{"level":2,"children":[],"href":"../../guides/stable/rendering.html","text":"Asynchronous Rendering"},"../../guides/stable/perfmon.html":{"level":2,"children":[],"href":"../../guides/stable/perfmon.html","text":"Performance Monitoring"},"../../guides/stable/threading.html":{"level":2,"children":[],"href":"../../guides/stable/threading.html","text":"Multithreading in napari"},"../../guides/stable/event_loop.html":{"level":2,"children":[],"href":"../../guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"../../roadmaps/index.html":{"level":1,"children":["../../roadmaps/0_4.html","../../roadmaps/0_3_retrospective.html","../../roadmaps/0_3.html"],"href":"../../roadmaps/index.html","text":"Roadmaps"},"../../roadmaps/0_3.html":{"level":2,"children":[],"href":"../../roadmaps/0_3.html","text":"Roadmap 0.3"},"../../roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"../../roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"../../roadmaps/0_4.html":{"level":2,"children":[],"href":"../../roadmaps/0_4.html","text":"Roadmap 0.4"},"index.html":{"level":1,"children":["napari.layers.html","napari.view_layers.html","napari.types.html","napari.utils.html","napari.plugins.html","napari.components.html","napari.qt.threading.html","napari.utils.perf.html","napari.html"],"href":"index.html","text":"API reference"},"napari.html":{"level":2,"children":["napari.Viewer.html"],"href":"napari.html","text":"napari"},"napari.Viewer.html":{"level":3,"children":[],"href":"napari.Viewer.html","text":"napari.Viewer"},"napari.utils.perf.html":{"level":2,"children":["napari.utils.perf.PerfEvent.html"],"href":"napari.utils.perf.html","text":"napari.utils.perf"},"napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"napari.qt.threading.html":{"level":2,"children":["napari.qt.threading.FunctionWorker.html","napari.qt.threading.GeneratorWorker.html","napari.qt.threading.GeneratorWorkerSignals.html","napari.qt.threading.WorkerBase.html","napari.qt.threading.WorkerBaseSignals.html"],"href":"napari.qt.threading.html","text":"napari.qt.threading"},"napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"napari.components.html":{"level":2,"children":["napari.components.Camera.html","napari.components.Dims.html","napari.components.LayerList.html","napari.components.ViewerModel.html"],"href":"napari.components.html","text":"napari.components"},"napari.components.ViewerModel.html":{"level":3,"children":[],"href":"napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"napari.components.LayerList.html":{"level":3,"children":[],"href":"napari.components.LayerList.html","text":"napari.components.LayerList"},"napari.components.Dims.html":{"level":3,"children":[],"href":"napari.components.Dims.html","text":"napari.components.Dims"},"napari.components.Camera.html":{"level":3,"children":[],"href":"napari.components.Camera.html","text":"napari.components.Camera"},"napari.plugins.html":{"level":2,"children":["napari.plugins.NapariPluginManager.html"],"href":"napari.plugins.html","text":"napari.plugins"},"napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"napari.utils.html":{"level":2,"children":["napari.utils.Colormap.html","napari.utils.nbscreenshot.html"],"href":"napari.utils.html","text":"napari.utils"},"napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"napari.utils.Colormap.html":{"level":3,"children":[],"href":"napari.utils.Colormap.html","text":"napari.utils.Colormap"},"napari.types.html":{"level":2,"children":["napari.types.ArrayBase.html","napari.types.Path.html","napari.types.SampleDict.html","napari.types.TracebackType.html","napari.types.TypedDict.html"],"href":"napari.types.html","text":"napari.types"},"napari.types.TypedDict.html":{"level":3,"children":[],"href":"napari.types.TypedDict.html","text":"napari.types.TypedDict"},"napari.types.TracebackType.html":{"level":3,"children":[],"href":"napari.types.TracebackType.html","text":"napari.types.TracebackType"},"napari.types.SampleDict.html":{"level":3,"children":[],"href":"napari.types.SampleDict.html","text":"napari.types.SampleDict"},"napari.types.Path.html":{"level":3,"children":[],"href":"napari.types.Path.html","text":"napari.types.Path"},"napari.types.ArrayBase.html":{"level":3,"children":[],"href":"napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"napari.view_layers.html":{"level":2,"children":["napari.view_layers.Viewer.html"],"href":"napari.view_layers.html","text":"napari.view_layers"},"napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"napari.layers.html":{"level":2,"children":["napari.layers.Image.html","#","napari.layers.Layer.html","napari.layers.Points.html","napari.layers.Shapes.html","napari.layers.Surface.html","napari.layers.Tracks.html","napari.layers.Vectors.html"],"href":"napari.layers.html","text":"napari.layers"},"napari.layers.Vectors.html":{"level":3,"children":[],"href":"napari.layers.Vectors.html","text":"napari.layers.Vectors"},"napari.layers.Tracks.html":{"level":3,"children":[],"href":"napari.layers.Tracks.html","text":"napari.layers.Tracks"},"napari.layers.Surface.html":{"level":3,"children":[],"href":"napari.layers.Surface.html","text":"napari.layers.Surface"},"napari.layers.Shapes.html":{"level":3,"children":[],"href":"napari.layers.Shapes.html","text":"napari.layers.Shapes"},"napari.layers.Points.html":{"level":3,"children":[],"href":"napari.layers.Points.html","text":"napari.layers.Points"},"napari.layers.Layer.html":{"level":3,"children":[],"href":"napari.layers.Layer.html","text":"napari.layers.Layer"},"#":{"level":3,"children":[],"href":"#","text":"napari.layers.Labels"},"napari.layers.Image.html":{"level":3,"children":[],"href":"napari.layers.Image.html","text":"napari.layers.Image"},"../../release/index.html":{"level":1,"children":["../../release/release_0_4_10.html","../../release/release_0_4_9.html","../../release/release_0_4_8.html","../../release/release_0_4_7.html","../../release/release_0_4_6.html","../../release/release_0_4_5.html","../../release/release_0_4_4.html","../../release/release_0_4_3.html","../../release/release_0_4_2.html","../../release/release_0_4_1.html","../../release/release_0_4_0.html","../../release/release_0_3_8.html","../../release/release_0_3_7.html","../../release/release_0_3_6.html","../../release/release_0_3_5.html","../../release/release_0_3_4.html","../../release/release_0_3_3.html","../../release/release_0_3_2.html","../../release/release_0_3_1.html","../../release/release_0_3_0.html","../../release/release_0_2_12.html","../../release/release_0_2_11.html","../../release/release_0_2_10.html","../../release/release_0_2_9.html","../../release/release_0_2_8.html","../../release/release_0_2_7.html","../../release/release_0_2_6.html","../../release/release_0_2_5.html","../../release/release_0_2_4.html","../../release/release_0_2_3.html","../../release/release_0_2_1.html","../../release/release_0_2_0.html","../../release/release_0_1_5.html","../../release/release_0_1_3.html","../../release/release_0_1_0.html","../../release/release_0_4_11.html"],"href":"../../release/index.html","text":"Release notes"},"../../release/release_0_4_11.html":{"level":2,"children":[],"href":"../../release/release_0_4_11.html","text":"napari 0.4.11"},"../../release/release_0_1_0.html":{"level":2,"children":[],"href":"../../release/release_0_1_0.html","text":"napari 0.1.0"},"../../release/release_0_1_3.html":{"level":2,"children":[],"href":"../../release/release_0_1_3.html","text":"napari 0.1.3"},"../../release/release_0_1_5.html":{"level":2,"children":[],"href":"../../release/release_0_1_5.html","text":"napari 0.1.5"},"../../release/release_0_2_0.html":{"level":2,"children":[],"href":"../../release/release_0_2_0.html","text":"napari 0.2.0"},"../../release/release_0_2_1.html":{"level":2,"children":[],"href":"../../release/release_0_2_1.html","text":"napari 0.2.1"},"../../release/release_0_2_3.html":{"level":2,"children":[],"href":"../../release/release_0_2_3.html","text":"napari 0.2.3"},"../../release/release_0_2_4.html":{"level":2,"children":[],"href":"../../release/release_0_2_4.html","text":"napari 0.2.4"},"../../release/release_0_2_5.html":{"level":2,"children":[],"href":"../../release/release_0_2_5.html","text":"napari 0.2.5"},"../../release/release_0_2_6.html":{"level":2,"children":[],"href":"../../release/release_0_2_6.html","text":"napari 0.2.6"},"../../release/release_0_2_7.html":{"level":2,"children":[],"href":"../../release/release_0_2_7.html","text":"napari 0.2.7"},"../../release/release_0_2_8.html":{"level":2,"children":[],"href":"../../release/release_0_2_8.html","text":"napari 0.2.8"},"../../release/release_0_2_9.html":{"level":2,"children":[],"href":"../../release/release_0_2_9.html","text":"napari 0.2.9"},"../../release/release_0_2_10.html":{"level":2,"children":[],"href":"../../release/release_0_2_10.html","text":"napari 0.2.10"},"../../release/release_0_2_11.html":{"level":2,"children":[],"href":"../../release/release_0_2_11.html","text":"napari 0.2.11"},"../../release/release_0_2_12.html":{"level":2,"children":[],"href":"../../release/release_0_2_12.html","text":"napari 0.2.12"},"../../release/release_0_3_0.html":{"level":2,"children":[],"href":"../../release/release_0_3_0.html","text":"napari 0.3.0"},"../../release/release_0_3_1.html":{"level":2,"children":[],"href":"../../release/release_0_3_1.html","text":"napari 0.3.1"},"../../release/release_0_3_2.html":{"level":2,"children":[],"href":"../../release/release_0_3_2.html","text":"napari 0.3.2"},"../../release/release_0_3_3.html":{"level":2,"children":[],"href":"../../release/release_0_3_3.html","text":"napari 0.3.3"},"../../release/release_0_3_4.html":{"level":2,"children":[],"href":"../../release/release_0_3_4.html","text":"napari 0.3.4"},"../../release/release_0_3_5.html":{"level":2,"children":[],"href":"../../release/release_0_3_5.html","text":"napari 0.3.5"},"../../release/release_0_3_6.html":{"level":2,"children":[],"href":"../../release/release_0_3_6.html","text":"napari 0.3.6"},"../../release/release_0_3_7.html":{"level":2,"children":[],"href":"../../release/release_0_3_7.html","text":"napari 0.3.7"},"../../release/release_0_3_8.html":{"level":2,"children":[],"href":"../../release/release_0_3_8.html","text":"napari 0.3.8"},"../../release/release_0_4_0.html":{"level":2,"children":[],"href":"../../release/release_0_4_0.html","text":"napari 0.4.0"},"../../release/release_0_4_1.html":{"level":2,"children":[],"href":"../../release/release_0_4_1.html","text":"napari 0.4.1"},"../../release/release_0_4_2.html":{"level":2,"children":[],"href":"../../release/release_0_4_2.html","text":"napari 0.4.2"},"../../release/release_0_4_3.html":{"level":2,"children":[],"href":"../../release/release_0_4_3.html","text":"napari 0.4.3"},"../../release/release_0_4_4.html":{"level":2,"children":[],"href":"../../release/release_0_4_4.html","text":"napari 0.4.4"},"../../release/release_0_4_5.html":{"level":2,"children":[],"href":"../../release/release_0_4_5.html","text":"napari 0.4.5"},"../../release/release_0_4_6.html":{"level":2,"children":[],"href":"../../release/release_0_4_6.html","text":"napari 0.4.6"},"../../release/release_0_4_7.html":{"level":2,"children":[],"href":"../../release/release_0_4_7.html","text":"napari 0.4.7"},"../../release/release_0_4_8.html":{"level":2,"children":[],"href":"../../release/release_0_4_8.html","text":"napari 0.4.8"},"../../release/release_0_4_9.html":{"level":2,"children":[],"href":"../../release/release_0_4_9.html","text":"napari 0.4.9"},"../../release/release_0_4_10.html":{"level":2,"children":[],"href":"../../release/release_0_4_10.html","text":"napari 0.4.10"},"../../plugins/stable/index.html":{"level":1,"children":["../../plugins/stable/for_napari_developers.html","../../plugins/stable/for_plugin_developers.html","../../plugins/stable/hook_specifications.html","../../plugins/stable/find-and-install-plugin.html"],"href":"../../plugins/stable/index.html","text":"Plugins"},"../../plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"../../plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"../../plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"../../plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"../../plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"../../plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"../../plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"../../plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"../../tutorials/index.html":{"level":1,"children":["../../tutorials/fundamentals/index.html","../../tutorials/applications/index.html"],"href":"../../tutorials/index.html","text":"Tutorials"},"../../tutorials/applications/index.html":{"level":2,"children":["../../tutorials/applications/annotate_segmentation.html","../../tutorials/applications/annotate_points.html","../../tutorials/applications/dask.html","../../tutorials/applications/napari_imageJ.html","../../tutorials/applications/cell_tracking.html"],"href":"../../tutorials/applications/index.html","text":"Applications"},"../../tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"../../tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"../../tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"../../tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"../../tutorials/applications/dask.html":{"level":3,"children":[],"href":"../../tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"../../tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"../../tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"../../tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"../../tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"../../tutorials/fundamentals/index.html":{"level":2,"children":["../../tutorials/fundamentals/installation.html","../../tutorials/fundamentals/getting_started.html","../../tutorials/fundamentals/viewer.html","../../tutorials/fundamentals/image.html","../../tutorials/fundamentals/labels.html","../../tutorials/fundamentals/points.html","../../tutorials/fundamentals/shapes.html","../../tutorials/fundamentals/surface.html","../../tutorials/fundamentals/tracks.html","../../tutorials/fundamentals/vectors.html"],"href":"../../tutorials/fundamentals/index.html","text":"Fundamentals"},"../../tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"../../tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"../../tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"../../tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"../../tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/points.html","text":"points layer tutorial"},"../../tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"../../tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/image.html","text":"image layer tutorial"},"../../tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"../../tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"../../tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"../../community/index.html":{"level":1,"children":["../../community/mission_and_values.html","../../community/team.html","../../community/code_of_conduct.html","../../community/code_of_conduct_reporting.html","../../community/governance.html"],"href":"../../community/index.html","text":"Community"},"../../community/governance.html":{"level":2,"children":[],"href":"../../community/governance.html","text":"Governance Model"},"../../community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"../../community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"../../community/code_of_conduct.html":{"level":2,"children":[],"href":"../../community/code_of_conduct.html","text":"Code of Conduct"},"../../community/team.html":{"level":2,"children":[],"href":"../../community/team.html","text":"About the Project and Team"},"../../community/mission_and_values.html":{"level":2,"children":[],"href":"../../community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["../../community/index.html","../../tutorials/index.html","../../plugins/stable/index.html","../../release/index.html","index.html","../../roadmaps/index.html","../../guides/stable/index.html","../../developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"napari.layers.Labels","pageBodyHtml":"\n        <div class=\"section\" id=\"napari-layers-labels\">\n\n<dl class=\"py class\">\n<dt id=\"napari.layers.Labels\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">napari.layers.</span></code><code class=\"sig-name descname\"><span class=\"pre\">Labels</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_colors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rendering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'iso_categorical'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">multiscale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_slicing_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/layers/labels/labels.html#Labels\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.layers.image.image._ImageBase</span></code></p>\n<p>Labels (or segmentation) layer.</p>\n<p>An image-like layer where every pixel contains an integer ID\ncorresponding to the region it belongs to.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> or </em><em>list of array</em>) – Labels data as an array or multiscale. Must be integer type or bools.\nPlease note multiscale rendering is only supported in 2D. In 3D, only\nthe lowest resolution scale is displayed.</p></li>\n<li><p><strong>num_colors</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of unique colors to use in colormap.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em> or </em><em>DataFrame</em>) – Properties for each label. Each property should be an array of length\nN, where N is the number of labels, and the first property corresponds\nto background.</p></li>\n<li><p><strong>color</strong> (<em>dict of int to str</em><em> or </em><em>array</em>) – Custom label to color mapping. Values must be valid color names or RGBA\narrays.</p></li>\n<li><p><strong>seed</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Seed for colormap random generator.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>rendering</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – 3D Rendering mode used by vispy. Must be one {‘translucent’, ‘iso_categorical’}.\n‘translucent’ renders without lighting. ‘iso_categorical’ uses isosurface\nrendering to calculate lighting effects on labeled surfaces.\nThe default value is ‘iso_categorical’.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n<li><p><strong>multiscale</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. If not specified by\nthe user and if the data is a list of arrays that decrease in shape\nthen it will be taken to be multiscale. The first image in the list\nshould be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>experimental_slicing_plane</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>SlicingPlane</em>) – Properties defining plane rendering in 3D. Properties are defined in\ndata coordinates. Valid dictionary keys are\n{‘position’, ‘normal’, ‘thickness’, and ‘enabled’}.</p></li>\n<li><p><strong>experimental_clipping_planes</strong> (<em>list of dicts</em><em>, </em><em>list of ClippingPlane</em><em>, or </em><em>ClippingPlaneList</em>) – Each dict defines a clipping plane in 3D in data coordinates.\nValid dictionary keys are {‘position’, ‘normal’, and ‘enabled’}.\nValues on the negative side of the normal are discarded if the plane is enabled.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.data\">\n<code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>Integer label data as an array or multiscale. Can be N dimensional.\nEvery pixel contains an integer ID corresponding to the region it\nbelongs to. The label 0 is rendered as transparent. Please note\nmultiscale rendering is only supported in 2D. In 3D, only\nthe lowest resolution scale is displayed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array or list of array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.multiscale\">\n<code class=\"sig-name descname\"><span class=\"pre\">multiscale</span></code></dt>\n<dd><p>Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. The first image in the\nlist should be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">metadata</span></code></dt>\n<dd><p>Labels metadata.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.num_colors\">\n<code class=\"sig-name descname\"><span class=\"pre\">num_colors</span></code></dt>\n<dd><p>Number of unique colors to use in colormap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.properties\">\n<code class=\"sig-name descname\"><span class=\"pre\">properties</span></code></dt>\n<dd><p>Properties for each label. Each property should be an array of length\nN, where N is the number of labels, and the first property corresponds\nto background.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict {str: array (N,)}, DataFrame</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.color\">\n<code class=\"sig-name descname\"><span class=\"pre\">color</span></code></dt>\n<dd><p>Custom label to color mapping. Values must be valid color names or RGBA\narrays.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict of int to str or array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.seed\">\n<code class=\"sig-name descname\"><span class=\"pre\">seed</span></code></dt>\n<dd><p>Seed for colormap random generator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.opacity\">\n<code class=\"sig-name descname\"><span class=\"pre\">opacity</span></code></dt>\n<dd><p>Opacity of the labels, must be between 0 and 1.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.contiguous\">\n<code class=\"sig-name descname\"><span class=\"pre\">contiguous</span></code></dt>\n<dd><p>If <cite>True</cite>, the fill bucket changes only connected pixels of same label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.n_dimensional\">\n<code class=\"sig-name descname\"><span class=\"pre\">n_dimensional</span></code></dt>\n<dd><p>If <cite>True</cite>, paint and fill edit labels across all dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.contour\">\n<code class=\"sig-name descname\"><span class=\"pre\">contour</span></code></dt>\n<dd><p>If greater than 0, displays contours of labels instead of shaded regions\nwith a thickness equal to its value.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.brush_size\">\n<code class=\"sig-name descname\"><span class=\"pre\">brush_size</span></code></dt>\n<dd><p>Size of the paint brush in data coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.selected_label\">\n<code class=\"sig-name descname\"><span class=\"pre\">selected_label</span></code></dt>\n<dd><p>Index of selected label. Can be greater than the current maximum label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.mode\">\n<code class=\"sig-name descname\"><span class=\"pre\">mode</span></code></dt>\n<dd><p>Interactive mode. The normal, default mode is PAN_ZOOM, which\nallows for normal interactivity with the canvas.</p>\n<p>In PICK mode the cursor functions like a color picker, setting the\nclicked on label to be the current label. If the background is picked it\nwill select the background label <cite>0</cite>.</p>\n<p>In PAINT mode the cursor functions like a paint brush changing any\npixels it brushes over to the current label. If the background label\n<cite>0</cite> is selected than any pixels will be changed to background and this\ntool functions like an eraser. The size and shape of the cursor can be\nadjusted in the properties widget.</p>\n<p>In FILL mode the cursor functions like a fill bucket replacing pixels\nof the label clicked on with the current label. It can either replace\nall pixels of that label or just those that are contiguous with the\nclicked on pixel. If the background label <cite>0</cite> is selected than any\npixels will be changed to background and this tool functions like an\neraser.</p>\n<p>In ERASE mode the cursor functions similarly to PAINT mode, but to\npaint with background label, which effectively removes the label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.experimental_slicing_plane\">\n<code class=\"sig-name descname\"><span class=\"pre\">experimental_slicing_plane</span></code></dt>\n<dd><p>Properties defining plane rendering in 3D.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>SlicingPlane</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.layers.Labels.experimental_clipping_planes\">\n<code class=\"sig-name descname\"><span class=\"pre\">experimental_clipping_planes</span></code></dt>\n<dd><p>Clipping planes defined in data coordinates, used to clip the volume.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>ClippingPlaneList</p>\n</dd>\n</dl>\n</dd></dl>\n\n<p class=\"rubric\">Notes</p>\n<dl class=\"simple\">\n<dt>_data_raw<span class=\"classifier\">array (N, M)</span></dt><dd><p>2D labels data for the currently viewed slice.</p>\n</dd>\n<dt>_selected_color<span class=\"classifier\">4-tuple or None</span></dt><dd><p>RGBA tuple of the color of the selected label, or None if the\nbackground label <cite>0</cite> is selected.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<p class=\"rubric\">Attributes</p>\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.affine\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">affine</span></code></dt>\n<dd><p>Extra affine transform to go from physical to world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>napari.utils.transforms.Affine</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.attenuation\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">attenuation</span></code></dt>\n<dd><p>attenuation rate for attenuated_mip rendering.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.bind_key\">\n<code class=\"sig-name descname\"><span class=\"pre\">bind_key</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">key</span></em>, <em class=\"sig-param\"><span class=\"pre\">func=&lt;object</span> <span class=\"pre\">object&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">*</span></em>, <em class=\"sig-param\"><span class=\"pre\">overwrite=False</span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Bind a key combination to a keymap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>keymap</strong> (<em>dict of str: callable</em>) – Keymap to modify.</p></li>\n<li><p><strong>key</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><em>..</em>) – Key combination.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">...</span></code> acts as a wildcard if no key combinations can be matched\nin the keymap (this will overwrite all key combinations\nfurther down the lookup chain).</p></li>\n<li><p><strong>func</strong> (<em>callable</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, or </em><em>..</em>) – Callable to bind to the key combination.\nIf <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> is passed, unbind instead.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">...</span></code> acts as a blocker, effectively unbinding the key\ncombination for all keymaps further down the lookup chain.</p></li>\n<li><p><strong>overwrite</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>keyword-only</em><em>, </em><em>optional</em>) – Whether to overwrite the key combination if it already exists.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>unbound</strong> – Callable unbound by this operation, if any.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>callable or <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\">None</a></p>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>Key combinations are represented in the form <code class=\"docutils literal notranslate\"><span class=\"pre\">[modifier-]key</span></code>,\ne.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">a</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">Control-c</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">Control-Alt-Delete</span></code>.\nValid modifiers are Control, Alt, Shift, and Meta.</p>\n<p>Letters will always be read as upper-case.\nDue to the native implementation of the key system, Shift pressed in\ncertain key combinations may yield inconsistent or unexpected results.\nTherefore, it is not recommended to use Shift with non-letter keys. On OSX,\nControl is swapped with Meta such that pressing Command reads as Control.</p>\n<p>Special keys include Shift, Control, Alt, Meta, Up, Down, Left, Right,\nPageUp, PageDown, Insert, Delete, Home, End, Escape, Backspace, F1,\nF2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, Space, Enter, and Tab</p>\n<p>Functions take in only one argument: the parent that the function\nwas bound to.</p>\n<p>By default, all functions are assumed to work on key presses only,\nbut can be denoted to work on release too by separating the function\ninto two statements with the yield keyword:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nd\">@viewer</span><span class=\"o\">.</span><span class=\"n\">bind_key</span><span class=\"p\">(</span><span class=\"s1\">'h'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">):</span>\n    <span class=\"c1\"># on key press</span>\n    <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s1\">'hello world!'</span>\n\n    <span class=\"k\">yield</span>\n\n    <span class=\"c1\"># on key release</span>\n    <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s1\">'goodbye world :('</span>\n</pre></div>\n</div>\n<p>To create a keymap that will block others, <code class=\"docutils literal notranslate\"><span class=\"pre\">bind_key(...,</span> <span class=\"pre\">...)`</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.blending\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">blending</span></code></dt>\n<dd><p>Determines how RGB and alpha values get mixed.</p>\n<dl class=\"simple\">\n<dt>Blending.OPAQUE</dt><dd><p>Allows for only the top layer to be visible and corresponds to\ndepth_test=True, cull_face=False, blend=False.</p>\n</dd>\n<dt>Blending.TRANSLUCENT</dt><dd><p>Allows for multiple layers to be blended with different opacity\nand corresponds to depth_test=True, cull_face=False,\nblend=True, blend_func=(‘src_alpha’, ‘one_minus_src_alpha’).</p>\n</dd>\n<dt>Blending.ADDITIVE</dt><dd><p>Allows for multiple layers to be blended together with\ndifferent colors and opacity. Useful for creating overlays. It\ncorresponds to depth_test=False, cull_face=False, blend=True,\nblend_func=(‘src_alpha’, ‘one’).</p>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Blending mode</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id0\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">brush_size</span></code></dt>\n<dd><p>Size of the paint in world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id1\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">color</span></code></dt>\n<dd><p>custom color dict for label coloring</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.color_mode\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">color_mode</span></code></dt>\n<dd><p>Color mode to change how color is represented.</p>\n<p>AUTO (default) allows color to be set via a hash function with a seed.</p>\n<p>DIRECT allows color of each label to be set directly by a color dict.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.colormap\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">colormap</span></code></dt>\n<dd><p>colormap for luminance images.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\">napari.utils.Colormap</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.colormaps\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">colormaps</span></code></dt>\n<dd><p>names of available colormaps.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>tuple of str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id2\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">contiguous</span></code></dt>\n<dd><p>fill bucket changes only connected pixels of same label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id3\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">contour</span></code></dt>\n<dd><p>displays contours of labels instead of shaded regions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.contrast_limits\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">contrast_limits</span></code></dt>\n<dd><p>Limits to use for the colormap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>list of float</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.contrast_limits_range\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">contrast_limits_range</span></code></dt>\n<dd><p>The current valid range of the contrast limits.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.coordinates\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">coordinates</span></code></dt>\n<dd><p>Cursor position in data coordinates.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.create\">\n<em class=\"property\"><span class=\"pre\">classmethod</span> </em><code class=\"sig-name descname\"><span class=\"pre\">create</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">meta</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layer_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Create layer from <cite>data</cite> of type <cite>layer_type</cite>.</p>\n<p>Primarily intended for usage by reader plugin hooks and creating a\nlayer from an unwrapped layer data tuple.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>Any</em>) – Data in a format that is valid for the corresponding <cite>layer_type</cite>.</p></li>\n<li><p><strong>meta</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em>, </em><em>optional</em>) – Dict of keyword arguments that will be passed to the corresponding\nlayer constructor.  If any keys in <cite>meta</cite> are not valid for the\ncorresponding layer type, an exception will be raised.</p></li>\n<li><p><strong>layer_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Type of layer to add. Must be the (case insensitive) name of a\nLayer subclass.  If not provided, the layer is assumed to\nbe “image”, unless data.dtype is one of (np.int32, np.uint32,\nnp.int64, np.uint64), in which case it is assumed to be “labels”.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" title=\"(in Python v3.9)\"><strong>ValueError</strong></a> – If <code class=\"docutils literal notranslate\"><span class=\"pre\">layer_type</span></code> is not one of the recognized layer types.</p></li>\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#TypeError\" title=\"(in Python v3.9)\"><strong>TypeError</strong></a> – If any keyword arguments in <code class=\"docutils literal notranslate\"><span class=\"pre\">meta</span></code> are unexpected for the\n    corresponding <cite>add_*</cite> method for this layer_type.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<p>A typical use case might be to upack a tuple of layer data with a\nspecified layer_type.</p>\n<div class=\"doctest highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">((</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span> <span class=\"o\">*</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>    <span class=\"p\">{</span><span class=\"s1\">'face_color'</span><span class=\"p\">:</span> <span class=\"s1\">'blue'</span><span class=\"p\">},</span>\n<span class=\"gp\">... </span>    <span class=\"s1\">'points'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Layer</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Layer</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.cursor\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">cursor</span></code></dt>\n<dd><p>String identifying cursor displayed over canvas.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.cursor_size\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">cursor_size</span></code></dt>\n<dd><p>Size of cursor if custom. None yields default size.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>int | None</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id4\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">data</span></code></dt>\n<dd><p>Image data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.data_level\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">data_level</span></code></dt>\n<dd><p>Current level of multiscale, or 0 if image.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.displayed_coordinates\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">displayed_coordinates</span></code></dt>\n<dd><p>List of currently displayed coordinates.</p>\n<p>displayed_coordinates is deprecated and will be removed in version 0.4.9.\nIt should no longer be used as layers should will soon not know\nwhich dimensions are displayed. Instead you should use\n<a href=\"#id5\"><span class=\"problematic\" id=\"id6\">`</span></a>[layer.coordinates[d] for d in viewer.dims.displayed]</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.downsample_factors\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">downsample_factors</span></code></dt>\n<dd><p>Downsample factors for each level of the multiscale.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.editable\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">editable</span></code></dt>\n<dd><p>Whether the current layer data is editable from the viewer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.extent\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">extent</span></code></dt>\n<dd><p>Extent of layer in data and world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Extent</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.fill\">\n<code class=\"sig-name descname\"><span class=\"pre\">fill</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coord</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refresh</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/layers/labels/labels.html#Labels.fill\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Replace an existing label with a new label, either just at the\nconnected component if the <cite>contiguous</cite> flag is <cite>True</cite> or everywhere\nif it is <cite>False</cite>, working either just in the current slice if\nthe <cite>n_dimensional</cite> flag is <cite>False</cite> or on the entire data if it is\n<cite>True</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>coord</strong> (<em>sequence of float</em>) – Position of mouse cursor in image coordinates.</p></li>\n<li><p><strong>new_label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Value of the new label to be filled in.</p></li>\n<li><p><strong>refresh</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether to refresh view slice or not. Set to False to batch paint\ncalls.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.get_color\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_color</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">label</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/layers/labels/labels.html#Labels.get_color\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Return the color corresponding to a specific label.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.get_ray_intersections\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_ray_intersections</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">position</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">view_direction</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dims_displayed</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">world</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Get the start and end point for the ray extending\nfrom a point through the data bounding box.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>position</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.List\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">float</span></code></a>]) – the position of the point in nD coordinates. World vs. data\nis set by the world keyword argument.</p></li>\n<li><p><strong>view_direction</strong> (<em>np.ndarray</em>) – a unit vector giving the direction of the ray in nD coordinates.\nWorld vs. data is set by the world keyword argument.</p></li>\n<li><p><strong>dims_displayed</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.List\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">int</span></code></a>]) – a list of the dimensions currently being displayed in the viewer.</p></li>\n<li><p><strong>world</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – True if the provided coordinates are in world coordinates.\nDefault value is True.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Union\" title=\"(in Python v3.9)\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Union</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.9)\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Tuple</span></code></a>[<a class=\"reference external\" href=\"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray\" title=\"(in NumPy v1.21)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ndarray</span></code></a>, <a class=\"reference external\" href=\"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray\" title=\"(in NumPy v1.21)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ndarray</span></code></a>], <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.9)\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Tuple</span></code></a>[<code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>]]</p>\n</dd>\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p></p><ul class=\"simple\">\n<li><p><strong>start_point</strong> (<em>np.ndarray</em>) – The point on the axis-aligned data bounding box that the cursor click\nintersects with. This is the point closest to the camera.\nThe point is the full nD coordinates of the layer data.\nIf the click does not intersect the axis-aligned data bounding box,\nNone is returned.</p></li>\n<li><p><strong>end_point</strong> (<em>np.ndarray</em>) – The point on the axis-aligned data bounding box that the cursor click\nintersects with. This is the point farthest from the camera.\nThe point is the full nD coordinates of the layer data.\nIf the click does not intersect the axis-aligned data bounding box,\nNone is returned.</p></li>\n</ul>\n<p></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.get_status\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_status</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">position</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">view_direction</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dims_displayed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">world</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/layers/labels/labels.html#Labels.get_status\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Status message of the data at a coordinate position.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>position</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a>) – Position in either data or world coordinates.</p></li>\n<li><p><strong>view_direction</strong> (<em>Optional</em><em>[</em><em>np.ndarray</em><em>]</em>) – A unit vector giving the direction of the ray in nD world coordinates.\nThe default value is None.</p></li>\n<li><p><strong>dims_displayed</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em>]</em><em>]</em>) – A list of the dimensions currently being displayed in the viewer.\nThe default value is None.</p></li>\n<li><p><strong>world</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – If True the position is taken to be in world coordinates\nand converted into data coordinates. False by default.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>msg</strong> – String containing a message that can be used as a status update.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>string</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.get_value\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_value</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">position</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">view_direction</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">dims_displayed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">world</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Value of the data at a position.</p>\n<p>If the layer is not visible, return None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>position</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a>) – Position in either data or world coordinates.</p></li>\n<li><p><strong>view_direction</strong> (<em>Optional</em><em>[</em><em>np.ndarray</em><em>]</em>) – A unit vector giving the direction of the ray in nD world coordinates.\nThe default value is None.</p></li>\n<li><p><strong>dims_displayed</strong> (<em>Optional</em><em>[</em><em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em>]</em><em>]</em>) – A list of the dimensions currently being displayed in the viewer.\nThe default value is None.</p></li>\n<li><p><strong>world</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – If True the position is taken to be in world coordinates\nand converted into data coordinates. False by default.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>value</strong> – Value of the data. If the layer is not visible return None.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\">tuple</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\">None</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.help\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">help</span></code></dt>\n<dd><p>displayed in status bar bottom right.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.interactive\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">interactive</span></code></dt>\n<dd><p>Determine if canvas pan/zoom interactivity is enabled.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.interpolation\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">interpolation</span></code></dt>\n<dd><p>Return current interpolation mode.</p>\n<p>Selects a preset interpolation mode in vispy that determines how volume\nis displayed.  Makes use of the two Texture2D interpolation methods and\nthe available interpolation methods defined in\nvispy/gloo/glsl/misc/spatial_filters.frag</p>\n<p>Options include:\n‘bessel’, ‘bicubic’, ‘bilinear’, ‘blackman’, ‘catrom’, ‘gaussian’,\n‘hamming’, ‘hanning’, ‘hermite’, ‘kaiser’, ‘lanczos’, ‘mitchell’,\n‘nearest’, ‘spline16’, ‘spline36’</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>The current interpolation mode</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.iso_threshold\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">iso_threshold</span></code></dt>\n<dd><p>threshold for isosurface.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.level_shapes\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">level_shapes</span></code></dt>\n<dd><p>Shapes of each level of the multiscale or just of image.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.loaded\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">loaded</span></code></dt>\n<dd><p>Has the data for this layer been loaded yet.</p>\n<p>With asynchronous loading the layer might exist but its data\nfor the current slice has not been loaded.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id7\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">metadata</span></code></dt>\n<dd><p>Key/value map for user-stored data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">dict</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id8\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">mode</span></code></dt>\n<dd><p>Interactive mode. The normal, default mode is PAN_ZOOM, which\nallows for normal interactivity with the canvas.</p>\n<p>In PICK mode the cursor functions like a color picker, setting the\nclicked on label to be the current label. If the background is picked it\nwill select the background label <cite>0</cite>.</p>\n<p>In PAINT mode the cursor functions like a paint brush changing any\npixels it brushes over to the current label. If the background label\n<cite>0</cite> is selected than any pixels will be changed to background and this\ntool functions like an eraser. The size and shape of the cursor can be\nadjusted in the properties widget.</p>\n<p>In FILL mode the cursor functions like a fill bucket replacing pixels\nof the label clicked on with the current label. It can either replace\nall pixels of that label or just those that are contiguous with the\nclicked on pixel. If the background label <cite>0</cite> is selected than any\npixels will be changed to background and this tool functions like an\neraser.</p>\n<p>In ERASE mode the cursor functions similarly to PAINT mode, but to\npaint with background label, which effectively removes the label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>MODE</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id9\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">n_dimensional</span></code></dt>\n<dd><p>paint and fill edits labels across all dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.name\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">name</span></code></dt>\n<dd><p>Unique name of the layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.ndim\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">ndim</span></code></dt>\n<dd><p>Number of dimensions in the data.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id10\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">num_colors</span></code></dt>\n<dd><p>Number of unique colors to use in colormap.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id11\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">opacity</span></code></dt>\n<dd><p>Opacity value between 0.0 and 1.0.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.paint\">\n<code class=\"sig-name descname\"><span class=\"pre\">paint</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">coord</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_label</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">refresh</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/layers/labels/labels.html#Labels.paint\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Paint over existing labels with a new label, using the selected\nbrush shape and size, either only on the visible slice or in all\nn dimensions.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>coord</strong> (<em>sequence of int</em>) – Position of mouse cursor in image coordinates.</p></li>\n<li><p><strong>new_label</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Value of the new label to be filled in.</p></li>\n<li><p><strong>refresh</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether to refresh view slice or not. Set to False to batch paint\ncalls.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.position\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">position</span></code></dt>\n<dd><p>Cursor position in world slice coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\">tuple</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.preserve_labels\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">preserve_labels</span></code></dt>\n<dd><p>Defines if painting should preserve existing labels.</p>\n<p>Default to false to allow paint on existing labels. When\nset to true, existing labels will be preserved during painting.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id12\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">properties</span></code></dt>\n<dd><p>Properties for each label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>dict {str</p>\n</dd>\n<dt class=\"field-even\">Type</dt>\n<dd class=\"field-even\"><p>array (N,)}, DataFrame</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Dict\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray\" title=\"(in NumPy v1.21)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ndarray</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.refresh\">\n<code class=\"sig-name descname\"><span class=\"pre\">refresh</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">event</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Refresh all layer data based on current view slice.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.rendering\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">rendering</span></code></dt>\n<dd><p>Return current rendering mode.</p>\n<p>Selects a preset rendering mode in vispy that determines how\nvolume is displayed.  Options include:</p>\n<ul class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">translucent</span></code>: voxel colors are blended along the view ray until\nthe result is opaque.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">mip</span></code>: maximum intensity projection. Cast a ray and display the\nmaximum value that was encountered.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">additive</span></code>: voxel colors are added along the view ray until the\nresult is saturated.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">iso</span></code>: isosurface. Cast a ray until a certain threshold is\nencountered. At that location, lighning calculations are performed to\ngive the visual appearance of a surface.</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">attenuated_mip</span></code>: attenuated maximum intensity projection. Cast a\nray and attenuate values based on integral of encountered values,\ndisplay the maximum value that was encountered after attenuation.\nThis will make nearer objects appear more prominent.</p></li>\n</ul>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p>The current rendering mode</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.reset_contrast_limits\">\n<code class=\"sig-name descname\"><span class=\"pre\">reset_contrast_limits</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">mode</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Scale contrast limits to data range</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.reset_contrast_limits_range\">\n<code class=\"sig-name descname\"><span class=\"pre\">reset_contrast_limits_range</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span></dt>\n<dd><p>Scale contrast limits range to data type.</p>\n<p>Currently, this only does something if the data type is an unsigned\ninteger… otherwise it’s unclear what the full range should be.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.rotate\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">rotate</span></code></dt>\n<dd><p>Rotation matrix in world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.save\">\n<code class=\"sig-name descname\"><span class=\"pre\">save</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Save this layer to <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> with default (or specified) plugin.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – A filepath, directory, or URL to open.  Extensions may be used to\nspecify output format (provided a plugin is available for the\nrequested format).</p></li>\n<li><p><strong>plugin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – Name of the plugin to use for saving. If <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> then all plugins\ncorresponding to appropriate hook specification will be looped\nthrough to find the first one that can save the data.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>File paths of any files that were written.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list of str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.scale\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">scale</span></code></dt>\n<dd><p>Anisotropy factors to scale data into world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id13\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">seed</span></code></dt>\n<dd><p>Seed for colormap random generator.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\">float</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.selected\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">selected</span></code></dt>\n<dd><p>Whether this layer is selected or not.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"id14\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">selected_label</span></code></dt>\n<dd><p>Index of selected label.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\">int</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.shear\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">shear</span></code></dt>\n<dd><p>Shear matrix in world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.show_selected_label\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">show_selected_label</span></code></dt>\n<dd><p>Whether to filter displayed labels to only the selected label or not</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.thumbnail\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">thumbnail</span></code></dt>\n<dd><p>Integer array of thumbnail for the layer</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>array</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.translate\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">translate</span></code></dt>\n<dd><p>Factors to shift the layer by in units of world coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.translate_grid\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">translate_grid</span></code></dt>\n<dd><p>Factors to shift the layer by.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\">list</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.visible\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">visible</span></code></dt>\n<dd><p>Whether the visual is currently being displayed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.layers.Labels.world_to_data\">\n<code class=\"sig-name descname\"><span class=\"pre\">world_to_data</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">position</span></span></em><span class=\"sig-paren\">)</span></dt>\n<dd><p>Convert from world coordinates to data coordinates.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>position</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em>, </em><em>1D array</em>) – Position in world coordinates. If longer then the\nnumber of dimensions of the layer, the later\ndimensions will be used.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>Position in data coordinates.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\">tuple</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./api/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[]}},"__N_SSG":true}