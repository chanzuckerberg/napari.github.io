{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release Guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer Guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing Guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/perfmon.html","/guides/stable/rendering.html","/guides/stable/docker.html","/guides/stable/performance.html","/guides/stable/magicgui.html","/guides/stable/translations.html","/guides/stable/rendering-explanation.html","/guides/stable/connecting_events.html","/guides/stable/connecting_events.html#long-running-blocking-functions","/guides/stable/3D_interactivity.html"],"href":"/guides/stable/index.html","text":"Developer guides"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"/guides/stable/connecting_events.html":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html","text":"Hooking up your own events"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/translations.html":{"level":2,"children":[],"href":"/guides/stable/translations.html","text":"Translations"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"Napari Performance"},"/guides/stable/docker.html":{"level":2,"children":[],"href":"/guides/stable/docker.html","text":"Napari in Docker (WIP)"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous Rendering"},"/guides/stable/perfmon.html":{"level":2,"children":[],"href":"/guides/stable/perfmon.html","text":"Performance Monitoring"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/release/index.html":{"level":1,"children":["/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_11.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/for_napari_developers.html","/plugins/stable/for_plugin_developers.html","/plugins/stable/hook_specifications.html","/plugins/stable/find-and-install-plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"/plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"/plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"/plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"/tutorials/index.html":{"level":1,"children":["/tutorials/fundamentals/index.html","/tutorials/applications/index.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/applications/index.html":{"level":2,"children":["/tutorials/applications/annotate_segmentation.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/applications/napari_imageJ.html","/tutorials/applications/cell_tracking.html"],"href":"/tutorials/applications/index.html","text":"Applications"},"/tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"/tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"/tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"/tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"/tutorials/applications/dask.html":{"level":3,"children":[],"href":"/tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"/tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"/tutorials/fundamentals/index.html":{"level":2,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/fundamentals/index.html","text":"Fundamentals"},"/tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html"],"href":"/community/index.html","text":"Community"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance Model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the Project and Team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["/community/index.html","/tutorials/index.html","/plugins/stable/index.html","/release/index.html","/api/stable/index.html","/roadmaps/index.html","/guides/stable/index.html","/developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Source code for napari.utils.dask_utils","pageFrontMatter":{},"appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../../\"></div>\n        <div class=\"highlight\"><pre><span></span><span class=\"sd\">\"\"\"Dask cache utilities.</span>\n<span class=\"sd\">\"\"\"</span>\n<span class=\"kn\">import</span> <span class=\"nn\">warnings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contextlib</span> <span class=\"kn\">import</span> <span class=\"n\">contextmanager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">distutils.version</span> <span class=\"kn\">import</span> <span class=\"n\">LooseVersion</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">ContextManager</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">dask</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dask.array</span> <span class=\"k\">as</span> <span class=\"nn\">da</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dask.cache</span> <span class=\"kn\">import</span> <span class=\"n\">Cache</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">..utils.translations</span> <span class=\"kn\">import</span> <span class=\"n\">trans</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">create_dask_cache</span><span class=\"p\">(</span>\n    <span class=\"n\">nbytes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">mem_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Cache</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create a dask cache at utils.dask_cache if one doesn't already exist.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    nbytes : int, optional</span>\n<span class=\"sd\">        The desired size of the cache, in bytes.  If ``None``, the cache size</span>\n<span class=\"sd\">        will autodetermined as fraction of the total memory in the system,</span>\n<span class=\"sd\">        using ``mem_fraction``.  If ``nbytes`` is 0, cache object will be</span>\n<span class=\"sd\">        created, but not caching will occur. by default, cache size is</span>\n<span class=\"sd\">        autodetermined using ``mem_fraction``.</span>\n<span class=\"sd\">    mem_fraction : float, optional</span>\n<span class=\"sd\">        The fraction (from 0 to 1) of total memory to use for the dask cache.</span>\n<span class=\"sd\">        by default, 10% of total memory is used.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    dask_cache : dask.cache.Cache</span>\n<span class=\"sd\">        An instance of a Dask Cache</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"kn\">import</span> <span class=\"nn\">psutil</span>\n\n    <span class=\"kn\">from</span> <span class=\"nn\">..</span> <span class=\"kn\">import</span> <span class=\"n\">utils</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">nbytes</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">nbytes</span> <span class=\"o\">=</span> <span class=\"n\">psutil</span><span class=\"o\">.</span><span class=\"n\">virtual_memory</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">*</span> <span class=\"n\">mem_fraction</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span>\n        <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">utils</span><span class=\"p\">,</span> <span class=\"s1\">'dask_cache'</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">)</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span> <span class=\"o\">=</span> <span class=\"n\">Cache</span><span class=\"p\">(</span><span class=\"n\">nbytes</span><span class=\"p\">)</span>\n        <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span>\n\n\n<div class=\"viewcode-block\" id=\"resize_dask_cache\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.utils.html#napari.utils.resize_dask_cache\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">resize_dask_cache</span><span class=\"p\">(</span>\n    <span class=\"n\">nbytes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">mem_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Cache</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Create or resize the dask cache used for opportunistic caching.</span>\n\n<span class=\"sd\">    The cache object is an instance of a :class:`Cache`, (which</span>\n<span class=\"sd\">    wraps a :class:`cachey.Cache`), and is made available at</span>\n<span class=\"sd\">    :attr:`napari.utils.dask_cache`.</span>\n\n<span class=\"sd\">    See `Dask opportunistic caching</span>\n<span class=\"sd\">    &lt;https://docs.dask.org/en/latest/caching.html&gt;`_</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    nbytes : int, optional</span>\n<span class=\"sd\">        The desired size of the cache, in bytes.  If ``None``, the cache size</span>\n<span class=\"sd\">        will autodetermined as fraction of the total memory in the system,</span>\n<span class=\"sd\">        using ``mem_fraction``.  If ``nbytes`` is 0. The cache is turned off.</span>\n<span class=\"sd\">        by default, cache size is autodetermined using ``mem_fraction``.</span>\n<span class=\"sd\">    mem_fraction : float, optional</span>\n<span class=\"sd\">        The fraction (from 0 to 1) of total memory to use for the dask cache.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    dask_cache : dask.cache.Cache</span>\n<span class=\"sd\">        An instance of a Dask Cache</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; from napari.utils import resize_dask_cache</span>\n<span class=\"sd\">    &gt;&gt;&gt; cache = resize_dask_cache()  # use 50% of total memory by default</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; # dask.Cache wraps cachey.Cache</span>\n<span class=\"sd\">    &gt;&gt;&gt; assert isinstance(cache.cache, cachey.Cache)</span>\n\n<span class=\"sd\">    &gt;&gt;&gt; # useful attributes</span>\n<span class=\"sd\">    &gt;&gt;&gt; cache.cache.available_bytes  # full size of cache</span>\n<span class=\"sd\">    &gt;&gt;&gt; cache.cache.total_bytes   # currently used bytes</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"kn\">import</span> <span class=\"nn\">psutil</span>\n\n    <span class=\"kn\">from</span> <span class=\"nn\">..</span> <span class=\"kn\">import</span> <span class=\"n\">utils</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">nbytes</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">mem_fraction</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">nbytes</span> <span class=\"o\">=</span> <span class=\"n\">psutil</span><span class=\"o\">.</span><span class=\"n\">virtual_memory</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">*</span> <span class=\"n\">mem_fraction</span>\n\n    <span class=\"c1\"># if we don't have a cache already, create one.  If neither nbytes nor</span>\n    <span class=\"c1\"># mem_fraction was provided, it will use the default size as determined in</span>\n    <span class=\"c1\"># create_cache.</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">(</span>\n        <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"n\">utils</span><span class=\"p\">,</span> <span class=\"s1\">'dask_cache'</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span><span class=\"p\">,</span> <span class=\"n\">Cache</span><span class=\"p\">)</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">create_dask_cache</span><span class=\"p\">(</span><span class=\"n\">nbytes</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>  <span class=\"c1\"># we already have a cache</span>\n        <span class=\"c1\"># if the cache has already been registered, then calling</span>\n        <span class=\"c1\"># resize_dask_cache() without supplying either mem_fraction or nbytes</span>\n        <span class=\"c1\"># is a no-op:</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span>\n            <span class=\"n\">nbytes</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span>\n            <span class=\"ow\">and</span> <span class=\"n\">nbytes</span> <span class=\"o\">!=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">available_bytes</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">resize</span><span class=\"p\">(</span><span class=\"n\">nbytes</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dask_cache</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_is_dask_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Return True if data is a dask array or a list/tuple of dask arrays.\"\"\"</span>\n    <span class=\"k\">return</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"p\">(</span>\n        <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">tuple</span><span class=\"p\">))</span>\n        <span class=\"ow\">and</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">da</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">configure_dask</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">ContextManager</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]]:</span>\n    <span class=\"sd\">\"\"\"Spin up cache and return context manager that optimizes Dask indexing.</span>\n\n<span class=\"sd\">    This function determines whether data is a dask array or list of dask</span>\n<span class=\"sd\">    arrays and prepares some optimizations if so.</span>\n\n<span class=\"sd\">    When a delayed dask array is given to napari, there are couple things that</span>\n<span class=\"sd\">    need to be done to optimize performance.</span>\n\n<span class=\"sd\">    1. Opportunistic caching needs to be enabled, such that we don't recompute</span>\n<span class=\"sd\">       (or \"re-read\") data that has already been computed or read.</span>\n\n<span class=\"sd\">    2. Dask task fusion must be turned off to prevent napari from triggering</span>\n<span class=\"sd\">       new io on data that has already been read from disk. For example, with a</span>\n<span class=\"sd\">       4D timelapse of 3D stacks, napari may actually *re-read* the entire 3D</span>\n<span class=\"sd\">       tiff file every time the Z plane index is changed. Turning of Dask task</span>\n<span class=\"sd\">       fusion with ``optimization.fuse.active == False`` prevents this.</span>\n\n<span class=\"sd\">       .. note::</span>\n\n<span class=\"sd\">          Turning off task fusion requires Dask version 2.15.0 or later.</span>\n\n<span class=\"sd\">    For background and context, see `napari/napari#718</span>\n<span class=\"sd\">    &lt;https://github.com/napari/napari/issues/718&gt;`_, `napari/napari#1124</span>\n<span class=\"sd\">    &lt;https://github.com/napari/napari/pull/1124&gt;`_, and `dask/dask#6084</span>\n<span class=\"sd\">    &lt;https://github.com/dask/dask/pull/6084&gt;`_.</span>\n\n<span class=\"sd\">    For details on Dask task fusion, see the documentation on `Dask</span>\n<span class=\"sd\">    Optimization &lt;https://docs.dask.org/en/latest/optimize.html&gt;`_.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    data : Any</span>\n<span class=\"sd\">        data, as passed to a ``Layer.__init__`` method.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    ContextManager</span>\n<span class=\"sd\">        A context manager that can be used to optimize dask indexing</span>\n\n<span class=\"sd\">    Examples</span>\n<span class=\"sd\">    --------</span>\n<span class=\"sd\">    &gt;&gt;&gt; data = dask.array.ones((10,10,10))</span>\n<span class=\"sd\">    &gt;&gt;&gt; optimized_slicing = configure_dask(data)</span>\n<span class=\"sd\">    &gt;&gt;&gt; with optimized_slicing():</span>\n<span class=\"sd\">    ...    data[0, 2].compute()</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">if</span> <span class=\"n\">_is_dask_data</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">dask</span><span class=\"o\">.</span><span class=\"n\">__version__</span> <span class=\"o\">&lt;</span> <span class=\"n\">LooseVersion</span><span class=\"p\">(</span><span class=\"s1\">'2.15.0'</span><span class=\"p\">):</span>\n            <span class=\"n\">warnings</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span>\n                <span class=\"n\">trans</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"p\">(</span>\n                    <span class=\"s1\">'For best performance with Dask arrays in napari, please upgrade Dask to v2.15.0 or later. Current version is </span><span class=\"si\">{dask_version}</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n                    <span class=\"n\">deferred</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">dask_version</span><span class=\"o\">=</span><span class=\"n\">dask</span><span class=\"o\">.</span><span class=\"n\">__version__</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">dask_optimized_slicing</span><span class=\"p\">():</span>\n            <span class=\"k\">with</span> <span class=\"n\">dask</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span><span class=\"s2\">\"optimization.fuse.active\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">})</span> <span class=\"k\">as</span> <span class=\"n\">cfg</span><span class=\"p\">:</span>\n                <span class=\"k\">yield</span> <span class=\"n\">cfg</span>\n\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">dask_optimized_slicing</span><span class=\"p\">():</span>\n            <span class=\"k\">yield</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">contextmanager</span><span class=\"p\">(</span><span class=\"n\">dask_optimized_slicing</span><span class=\"p\">)</span>\n</pre></div>\n      ","pageHeaders":[]}},"__N_SSG":true}