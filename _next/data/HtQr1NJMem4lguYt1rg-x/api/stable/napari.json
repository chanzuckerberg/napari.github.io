{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"../../developers/index.html":{"level":1,"children":["../../developers/benchmarks.html","../../developers/contributing.html","../../developers/core_dev_guide.html","../../developers/profiling.html","../../developers/release.html","../../developers/testing.html","../../developers/docs.html"],"href":"../../developers/index.html","text":"Developer resources"},"../../developers/docs.html":{"level":2,"children":[],"href":"../../developers/docs.html","text":"Organization of Documentation for napari"},"../../developers/testing.html":{"level":2,"children":[],"href":"../../developers/testing.html","text":"Testing"},"../../developers/release.html":{"level":2,"children":[],"href":"../../developers/release.html","text":"Release Guide"},"../../developers/profiling.html":{"level":2,"children":[],"href":"../../developers/profiling.html","text":"Profiling"},"../../developers/core_dev_guide.html":{"level":2,"children":[],"href":"../../developers/core_dev_guide.html","text":"Core Developer Guide"},"../../developers/contributing.html":{"level":2,"children":[],"href":"../../developers/contributing.html","text":"Contributing Guide"},"../../developers/benchmarks.html":{"level":2,"children":[],"href":"../../developers/benchmarks.html","text":"Benchmarks"},"../../guides/stable/index.html":{"level":1,"children":["../../guides/stable/event_loop.html","../../guides/stable/threading.html","../../guides/stable/perfmon.html","../../guides/stable/rendering.html","../../guides/stable/docker.html","../../guides/stable/performance.html","../../guides/stable/magicgui.html","../../guides/stable/translations.html","../../guides/stable/rendering-explanation.html","../../guides/stable/connecting_events.html","../../guides/stable/connecting_events.html#long-running-blocking-functions","../../guides/stable/3D_interactivity.html"],"href":"../../guides/stable/index.html","text":"Developer guides"},"../../guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"../../guides/stable/3D_interactivity.html","text":"3D interactivity"},"../../guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"../../guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"../../guides/stable/connecting_events.html":{"level":2,"children":[],"href":"../../guides/stable/connecting_events.html","text":"Hooking up your own events"},"../../guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"../../guides/stable/rendering-explanation.html","text":"Rendering in napari"},"../../guides/stable/translations.html":{"level":2,"children":[],"href":"../../guides/stable/translations.html","text":"Translations"},"../../guides/stable/magicgui.html":{"level":2,"children":[],"href":"../../guides/stable/magicgui.html","text":"Using magicgui in napari"},"../../guides/stable/performance.html":{"level":2,"children":[],"href":"../../guides/stable/performance.html","text":"Napari Performance"},"../../guides/stable/docker.html":{"level":2,"children":[],"href":"../../guides/stable/docker.html","text":"Napari in Docker (WIP)"},"../../guides/stable/rendering.html":{"level":2,"children":[],"href":"../../guides/stable/rendering.html","text":"Asynchronous Rendering"},"../../guides/stable/perfmon.html":{"level":2,"children":[],"href":"../../guides/stable/perfmon.html","text":"Performance Monitoring"},"../../guides/stable/threading.html":{"level":2,"children":[],"href":"../../guides/stable/threading.html","text":"Multithreading in napari"},"../../guides/stable/event_loop.html":{"level":2,"children":[],"href":"../../guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"../../roadmaps/index.html":{"level":1,"children":["../../roadmaps/0_4.html","../../roadmaps/0_3_retrospective.html","../../roadmaps/0_3.html"],"href":"../../roadmaps/index.html","text":"Roadmaps"},"../../roadmaps/0_3.html":{"level":2,"children":[],"href":"../../roadmaps/0_3.html","text":"Roadmap 0.3"},"../../roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"../../roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"../../roadmaps/0_4.html":{"level":2,"children":[],"href":"../../roadmaps/0_4.html","text":"Roadmap 0.4"},"index.html":{"level":1,"children":["napari.layers.html","napari.view_layers.html","napari.types.html","napari.utils.html","napari.plugins.html","napari.components.html","napari.qt.threading.html","napari.utils.perf.html","#"],"href":"index.html","text":"API reference"},"#":{"level":2,"children":["napari.Viewer.html"],"href":"#","text":"napari"},"napari.Viewer.html":{"level":3,"children":[],"href":"napari.Viewer.html","text":"napari.Viewer"},"napari.utils.perf.html":{"level":2,"children":["napari.utils.perf.PerfEvent.html"],"href":"napari.utils.perf.html","text":"napari.utils.perf"},"napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"napari.qt.threading.html":{"level":2,"children":["napari.qt.threading.FunctionWorker.html","napari.qt.threading.GeneratorWorker.html","napari.qt.threading.GeneratorWorkerSignals.html","napari.qt.threading.WorkerBase.html","napari.qt.threading.WorkerBaseSignals.html"],"href":"napari.qt.threading.html","text":"napari.qt.threading"},"napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"napari.components.html":{"level":2,"children":["napari.components.Camera.html","napari.components.Dims.html","napari.components.LayerList.html","napari.components.ViewerModel.html"],"href":"napari.components.html","text":"napari.components"},"napari.components.ViewerModel.html":{"level":3,"children":[],"href":"napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"napari.components.LayerList.html":{"level":3,"children":[],"href":"napari.components.LayerList.html","text":"napari.components.LayerList"},"napari.components.Dims.html":{"level":3,"children":[],"href":"napari.components.Dims.html","text":"napari.components.Dims"},"napari.components.Camera.html":{"level":3,"children":[],"href":"napari.components.Camera.html","text":"napari.components.Camera"},"napari.plugins.html":{"level":2,"children":["napari.plugins.NapariPluginManager.html"],"href":"napari.plugins.html","text":"napari.plugins"},"napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"napari.utils.html":{"level":2,"children":["napari.utils.Colormap.html","napari.utils.nbscreenshot.html"],"href":"napari.utils.html","text":"napari.utils"},"napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"napari.utils.Colormap.html":{"level":3,"children":[],"href":"napari.utils.Colormap.html","text":"napari.utils.Colormap"},"napari.types.html":{"level":2,"children":["napari.types.ArrayBase.html","napari.types.Path.html","napari.types.SampleDict.html","napari.types.TracebackType.html","napari.types.TypedDict.html"],"href":"napari.types.html","text":"napari.types"},"napari.types.TypedDict.html":{"level":3,"children":[],"href":"napari.types.TypedDict.html","text":"napari.types.TypedDict"},"napari.types.TracebackType.html":{"level":3,"children":[],"href":"napari.types.TracebackType.html","text":"napari.types.TracebackType"},"napari.types.SampleDict.html":{"level":3,"children":[],"href":"napari.types.SampleDict.html","text":"napari.types.SampleDict"},"napari.types.Path.html":{"level":3,"children":[],"href":"napari.types.Path.html","text":"napari.types.Path"},"napari.types.ArrayBase.html":{"level":3,"children":[],"href":"napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"napari.view_layers.html":{"level":2,"children":["napari.view_layers.Viewer.html"],"href":"napari.view_layers.html","text":"napari.view_layers"},"napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"napari.layers.html":{"level":2,"children":["napari.layers.Image.html","napari.layers.Labels.html","napari.layers.Layer.html","napari.layers.Points.html","napari.layers.Shapes.html","napari.layers.Surface.html","napari.layers.Tracks.html","napari.layers.Vectors.html"],"href":"napari.layers.html","text":"napari.layers"},"napari.layers.Vectors.html":{"level":3,"children":[],"href":"napari.layers.Vectors.html","text":"napari.layers.Vectors"},"napari.layers.Tracks.html":{"level":3,"children":[],"href":"napari.layers.Tracks.html","text":"napari.layers.Tracks"},"napari.layers.Surface.html":{"level":3,"children":[],"href":"napari.layers.Surface.html","text":"napari.layers.Surface"},"napari.layers.Shapes.html":{"level":3,"children":[],"href":"napari.layers.Shapes.html","text":"napari.layers.Shapes"},"napari.layers.Points.html":{"level":3,"children":[],"href":"napari.layers.Points.html","text":"napari.layers.Points"},"napari.layers.Layer.html":{"level":3,"children":[],"href":"napari.layers.Layer.html","text":"napari.layers.Layer"},"napari.layers.Labels.html":{"level":3,"children":[],"href":"napari.layers.Labels.html","text":"napari.layers.Labels"},"napari.layers.Image.html":{"level":3,"children":[],"href":"napari.layers.Image.html","text":"napari.layers.Image"},"../../release/index.html":{"level":1,"children":["../../release/release_0_4_10.html","../../release/release_0_4_9.html","../../release/release_0_4_8.html","../../release/release_0_4_7.html","../../release/release_0_4_6.html","../../release/release_0_4_5.html","../../release/release_0_4_4.html","../../release/release_0_4_3.html","../../release/release_0_4_2.html","../../release/release_0_4_1.html","../../release/release_0_4_0.html","../../release/release_0_3_8.html","../../release/release_0_3_7.html","../../release/release_0_3_6.html","../../release/release_0_3_5.html","../../release/release_0_3_4.html","../../release/release_0_3_3.html","../../release/release_0_3_2.html","../../release/release_0_3_1.html","../../release/release_0_3_0.html","../../release/release_0_2_12.html","../../release/release_0_2_11.html","../../release/release_0_2_10.html","../../release/release_0_2_9.html","../../release/release_0_2_8.html","../../release/release_0_2_7.html","../../release/release_0_2_6.html","../../release/release_0_2_5.html","../../release/release_0_2_4.html","../../release/release_0_2_3.html","../../release/release_0_2_1.html","../../release/release_0_2_0.html","../../release/release_0_1_5.html","../../release/release_0_1_3.html","../../release/release_0_1_0.html","../../release/release_0_4_11.html"],"href":"../../release/index.html","text":"Release notes"},"../../release/release_0_4_11.html":{"level":2,"children":[],"href":"../../release/release_0_4_11.html","text":"napari 0.4.11"},"../../release/release_0_1_0.html":{"level":2,"children":[],"href":"../../release/release_0_1_0.html","text":"napari 0.1.0"},"../../release/release_0_1_3.html":{"level":2,"children":[],"href":"../../release/release_0_1_3.html","text":"napari 0.1.3"},"../../release/release_0_1_5.html":{"level":2,"children":[],"href":"../../release/release_0_1_5.html","text":"napari 0.1.5"},"../../release/release_0_2_0.html":{"level":2,"children":[],"href":"../../release/release_0_2_0.html","text":"napari 0.2.0"},"../../release/release_0_2_1.html":{"level":2,"children":[],"href":"../../release/release_0_2_1.html","text":"napari 0.2.1"},"../../release/release_0_2_3.html":{"level":2,"children":[],"href":"../../release/release_0_2_3.html","text":"napari 0.2.3"},"../../release/release_0_2_4.html":{"level":2,"children":[],"href":"../../release/release_0_2_4.html","text":"napari 0.2.4"},"../../release/release_0_2_5.html":{"level":2,"children":[],"href":"../../release/release_0_2_5.html","text":"napari 0.2.5"},"../../release/release_0_2_6.html":{"level":2,"children":[],"href":"../../release/release_0_2_6.html","text":"napari 0.2.6"},"../../release/release_0_2_7.html":{"level":2,"children":[],"href":"../../release/release_0_2_7.html","text":"napari 0.2.7"},"../../release/release_0_2_8.html":{"level":2,"children":[],"href":"../../release/release_0_2_8.html","text":"napari 0.2.8"},"../../release/release_0_2_9.html":{"level":2,"children":[],"href":"../../release/release_0_2_9.html","text":"napari 0.2.9"},"../../release/release_0_2_10.html":{"level":2,"children":[],"href":"../../release/release_0_2_10.html","text":"napari 0.2.10"},"../../release/release_0_2_11.html":{"level":2,"children":[],"href":"../../release/release_0_2_11.html","text":"napari 0.2.11"},"../../release/release_0_2_12.html":{"level":2,"children":[],"href":"../../release/release_0_2_12.html","text":"napari 0.2.12"},"../../release/release_0_3_0.html":{"level":2,"children":[],"href":"../../release/release_0_3_0.html","text":"napari 0.3.0"},"../../release/release_0_3_1.html":{"level":2,"children":[],"href":"../../release/release_0_3_1.html","text":"napari 0.3.1"},"../../release/release_0_3_2.html":{"level":2,"children":[],"href":"../../release/release_0_3_2.html","text":"napari 0.3.2"},"../../release/release_0_3_3.html":{"level":2,"children":[],"href":"../../release/release_0_3_3.html","text":"napari 0.3.3"},"../../release/release_0_3_4.html":{"level":2,"children":[],"href":"../../release/release_0_3_4.html","text":"napari 0.3.4"},"../../release/release_0_3_5.html":{"level":2,"children":[],"href":"../../release/release_0_3_5.html","text":"napari 0.3.5"},"../../release/release_0_3_6.html":{"level":2,"children":[],"href":"../../release/release_0_3_6.html","text":"napari 0.3.6"},"../../release/release_0_3_7.html":{"level":2,"children":[],"href":"../../release/release_0_3_7.html","text":"napari 0.3.7"},"../../release/release_0_3_8.html":{"level":2,"children":[],"href":"../../release/release_0_3_8.html","text":"napari 0.3.8"},"../../release/release_0_4_0.html":{"level":2,"children":[],"href":"../../release/release_0_4_0.html","text":"napari 0.4.0"},"../../release/release_0_4_1.html":{"level":2,"children":[],"href":"../../release/release_0_4_1.html","text":"napari 0.4.1"},"../../release/release_0_4_2.html":{"level":2,"children":[],"href":"../../release/release_0_4_2.html","text":"napari 0.4.2"},"../../release/release_0_4_3.html":{"level":2,"children":[],"href":"../../release/release_0_4_3.html","text":"napari 0.4.3"},"../../release/release_0_4_4.html":{"level":2,"children":[],"href":"../../release/release_0_4_4.html","text":"napari 0.4.4"},"../../release/release_0_4_5.html":{"level":2,"children":[],"href":"../../release/release_0_4_5.html","text":"napari 0.4.5"},"../../release/release_0_4_6.html":{"level":2,"children":[],"href":"../../release/release_0_4_6.html","text":"napari 0.4.6"},"../../release/release_0_4_7.html":{"level":2,"children":[],"href":"../../release/release_0_4_7.html","text":"napari 0.4.7"},"../../release/release_0_4_8.html":{"level":2,"children":[],"href":"../../release/release_0_4_8.html","text":"napari 0.4.8"},"../../release/release_0_4_9.html":{"level":2,"children":[],"href":"../../release/release_0_4_9.html","text":"napari 0.4.9"},"../../release/release_0_4_10.html":{"level":2,"children":[],"href":"../../release/release_0_4_10.html","text":"napari 0.4.10"},"../../plugins/stable/index.html":{"level":1,"children":["../../plugins/stable/for_napari_developers.html","../../plugins/stable/for_plugin_developers.html","../../plugins/stable/hook_specifications.html","../../plugins/stable/find-and-install-plugin.html"],"href":"../../plugins/stable/index.html","text":"Plugins"},"../../plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"../../plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"../../plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"../../plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"../../plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"../../plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"../../plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"../../plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"../../tutorials/index.html":{"level":1,"children":["../../tutorials/fundamentals/index.html","../../tutorials/applications/index.html"],"href":"../../tutorials/index.html","text":"Tutorials"},"../../tutorials/applications/index.html":{"level":2,"children":["../../tutorials/applications/annotate_segmentation.html","../../tutorials/applications/annotate_points.html","../../tutorials/applications/dask.html","../../tutorials/applications/napari_imageJ.html","../../tutorials/applications/cell_tracking.html"],"href":"../../tutorials/applications/index.html","text":"Applications"},"../../tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"../../tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"../../tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"../../tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"../../tutorials/applications/dask.html":{"level":3,"children":[],"href":"../../tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"../../tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"../../tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"../../tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"../../tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"../../tutorials/fundamentals/index.html":{"level":2,"children":["../../tutorials/fundamentals/installation.html","../../tutorials/fundamentals/getting_started.html","../../tutorials/fundamentals/viewer.html","../../tutorials/fundamentals/image.html","../../tutorials/fundamentals/labels.html","../../tutorials/fundamentals/points.html","../../tutorials/fundamentals/shapes.html","../../tutorials/fundamentals/surface.html","../../tutorials/fundamentals/tracks.html","../../tutorials/fundamentals/vectors.html"],"href":"../../tutorials/fundamentals/index.html","text":"Fundamentals"},"../../tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"../../tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"../../tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"../../tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"../../tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/points.html","text":"points layer tutorial"},"../../tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"../../tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/image.html","text":"image layer tutorial"},"../../tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"../../tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"../../tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"../../tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"../../community/index.html":{"level":1,"children":["../../community/mission_and_values.html","../../community/team.html","../../community/code_of_conduct.html","../../community/code_of_conduct_reporting.html","../../community/governance.html"],"href":"../../community/index.html","text":"Community"},"../../community/governance.html":{"level":2,"children":[],"href":"../../community/governance.html","text":"Governance Model"},"../../community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"../../community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"../../community/code_of_conduct.html":{"level":2,"children":[],"href":"../../community/code_of_conduct.html","text":"Code of Conduct"},"../../community/team.html":{"level":2,"children":[],"href":"../../community/team.html","text":"About the Project and Team"},"../../community/mission_and_values.html":{"level":2,"children":[],"href":"../../community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["../../community/index.html","../../tutorials/index.html","../../plugins/stable/index.html","../../release/index.html","index.html","../../roadmaps/index.html","../../guides/stable/index.html","../../developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"napari","pageBodyHtml":"\n        <div class=\"section\" id=\"module-napari\">\n<span id=\"napari\"></span>\n<p class=\"rubric\">Classes</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\">\n<col style=\"width: 90%\">\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">Viewer</span></code></a></p></td>\n<td><p>Napari ndarray viewer.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Functions</p>\n<dl class=\"py function\">\n<dt id=\"napari.current_viewer\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">current_viewer</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/viewer.html#current_viewer\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Return the currently active napari viewer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Viewer</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.gui_qt\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">gui_qt</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">startup_logo</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gui_exceptions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/_qt/qt_event_loop.html#gui_qt\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Start a Qt event loop in which to run the application.</p>\n<p>NOTE: This context manager is deprecated!. Prefer using <a class=\"reference internal\" href=\"#napari.run\" title=\"napari.run\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">napari.run()</span></code></a>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>startup_logo</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Show a splash screen with the napari logo during startup.</p></li>\n<li><p><strong>gui_exceptions</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Whether to show uncaught exceptions in the GUI, by default they will be\nshown in the console that launched the event loop.</p></li>\n<li><p><strong>force</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Force the application event_loop to start, even if there are no top\nlevel widgets to show.</p></li>\n</ul>\n</dd>\n</dl>\n<p class=\"rubric\">Notes</p>\n<p>This context manager is not needed if running napari within an interactive\nIPython session. In this case, use the <code class=\"docutils literal notranslate\"><span class=\"pre\">%gui</span> <span class=\"pre\">qt</span></code> magic command, or start\nIPython with the Qt GUI event loop enabled by default by using\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ipython</span> <span class=\"pre\">--gui=qt</span></code>.</p>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.run\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">run</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">force</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gui_exceptions</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">max_loop_level</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">_func_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'run'</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/_qt/qt_event_loop.html#run\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Start the Qt Event Loop</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>force</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Force the application event_loop to start, even if there are no top\nlevel widgets to show.</p></li>\n<li><p><strong>gui_exceptions</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Whether to show uncaught exceptions in the GUI. By default they will be\nshown in the console that launched the event loop.</p></li>\n<li><p><strong>max_loop_level</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em>, </em><em>optional</em>) – The maximum allowable “loop level” for the execution thread.  Every\ntime <cite>QApplication.exec_()</cite> is called, Qt enters the event loop,\nincrements app.thread().loopLevel(), and waits until exit() is called.\nThis function will prevent calling <cite>exec_()</cite> if the application already\nhas at least <code class=\"docutils literal notranslate\"><span class=\"pre\">max_loop_level</span></code> event loops running.  By default, 1.</p></li>\n<li><p><strong>_func_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – name of calling function, by default ‘run’.  This is only here to\nprovide functions like <cite>gui_qt</cite> a way to inject their name into the\nwarning message.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#RuntimeError\" title=\"(in Python v3.9)\"><strong>RuntimeError</strong></a> – (To avoid confusion) if no widgets would be shown upon starting the\n    event loop.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.save_layers\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">save_layers</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layers</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/io.html#save_layers\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Write list of layers or individual layer to a path using writer plugins.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code> is not provided and only one layer is passed, then we\ndirectly call <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_manager.hook.napari_write_&lt;layer&gt;()</span></code> which\nwill loop through implementations and stop when the first one returns a\nnon-None result. The order in which implementations are called can be\nchanged with the hook <code class=\"docutils literal notranslate\"><span class=\"pre\">bring_to_front</span></code> method, for instance:\n<code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_manager.hook.napari_write_points.bring_to_front</span></code></p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code> is not provided and multiple layers are passed, then\nwe call <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_manager.hook.napari_get_writer()</span></code> which loops through\nplugins to find the first one that knows how to handle the combination of\nlayers and is able to write the file. If no plugins offer\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari_get_writer</span></code> for that combination of layers then the builtin\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari_get_writer</span></code> implementation will create a folder and call\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari_write_&lt;layer&gt;</span></code> for each layer using the <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.name</span></code> variable\nto modify the path such that the layers are written to unique files in the\nfolder.</p>\n<p>If <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code> is provided and a single layer is passed, then\nwe call the <code class=\"docutils literal notranslate\"><span class=\"pre\">napari_write_&lt;layer_type&gt;</span></code> for that plugin, and if it\nfails we error.</p>\n<p>If a <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code> is provided and multiple layers are passed, then\nwe call we call <code class=\"docutils literal notranslate\"><span class=\"pre\">napari_get_writer</span></code> for that plugin, and if it\ndoesn’t return a WriterFunction we error, otherwise we call it and if\nthat fails if it we error.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – A filepath, directory, or URL to open.</p></li>\n<li><p><strong>layers</strong> (<em>List</em><em>[</em><a class=\"reference internal\" href=\"napari.layers.Layer.html#napari.layers.Layer\" title=\"napari.layers.Layer\"><em>layers.Layer</em></a><em>]</em>) – List of layers to be saved. If only a single layer is passed then\nwe use the hook specification corresponding to its layer type,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari_write_&lt;layer_type&gt;</span></code>. If multiple layers are passed then we\nuse the <code class=\"docutils literal notranslate\"><span class=\"pre\">napari_get_writer</span></code> hook specification.</p></li>\n<li><p><strong>plugin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – Name of the plugin to use for saving. If None then all plugins\ncorresponding to appropriate hook specification will be looped\nthrough to find the first one that can save the data.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>File paths of any files that were written.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>list of str</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.sys_info\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">sys_info</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">as_html</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/utils/info.html#sys_info\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Gathers relevant module versions for troubleshooting purposes.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>as_html</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – if True, info will be returned as HTML, suitable for a QTextEdit widget</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_image\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_image</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">channel_axis</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rgb</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gamma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">interpolation</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'nearest'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rendering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'mip'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">iso_threshold</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">attenuation</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.05</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">multiscale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_slicing_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_image\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add an image layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> or </em><em>list of array</em>) – Image data. Can be N &gt;= 2 dimensional. If the last dimension has length\n3 or 4 can be interpreted as RGB or RGBA if rgb is <cite>True</cite>. If a\nlist and arrays are decreasing in shape then the data is treated as\na multiscale image. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>channel_axis</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em>, </em><em>optional</em>) – Axis to expand image along.  If provided, each channel in the data\nwill be added as an individual image layer.  In channel_axis mode,\nall other parameters MAY be provided as lists, and the Nth value\nwill be applied to the Nth channel in the data.  If a single value\nis provided, it will be broadcast to all Layers.</p></li>\n<li><p><strong>rgb</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Whether the image is rgb RGB or RGBA. If not specified by user and\nthe last dimension of the data has length 3 or 4 it will be set as\n<cite>True</cite>. If <cite>False</cite> the image is interpreted as a luminance image.\nIf a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Colormaps to use for luminance images. If a string must be the name\nof a supported colormap from vispy or matplotlib. If a tuple the\nfirst value must be a string to assign as a name to a colormap and\nthe second item must be a Colormap. If a dict the key must be a\nstring to assign as a name to a colormap and the value must be a\nColormap. If a list then must be same length as the axis that is\nbeing expanded as channels, and each colormap is applied to each\nnew image layer.</p></li>\n<li><p><strong>contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em> (</em><em>2</em><em>,</em><em>)</em>) – Color limits to be used for determining the colormap bounds for\nluminance images. If not passed is calculated as the min and max of\nthe image. If list of lists then must be same length as the axis\nthat is being expanded and then each colormap is applied to each\nimage.</p></li>\n<li><p><strong>gamma</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Gamma correction for determining colormap linearity. Defaults to 1.\nIf a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>interpolation</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Interpolation mode used by vispy. Must be one of our supported\nmodes. If a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>rendering</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Rendering mode used by vispy. Must be one of our supported\nmodes. If a list then must be same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>iso_threshold</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Threshold for isosurface. If a list then must be same length as the\naxis that is being expanded as channels.</p></li>\n<li><p><strong>attenuation</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Attenuation rate for attenuated maximum intensity projection. If a\nlist then must be same length as the axis that is being expanded as\nchannels.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><em>list of str</em>) – Name of the layer.  If a list then must be same length as the axis\nthat is being expanded as channels.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>list of dict</em>) – Layer metadata. If a list then must be a list of dicts with the\nsame length as the axis that is being expanded as channels.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Scale factors for the layer. If a list then must be a list of\ntuples of float with the same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Translation values for the layer. If a list then must be a list of\ntuples of float with the same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, </em><em>n-D array</em><em> or </em><em>list.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed. If a list then must have same length as\nthe axis that is being expanded as channels.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>list.</em>) – A vector of shear values for an upper triangular n-D shear matrix.\nIf a list then must have same length as the axis that is being\nexpanded as channels.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a\nnapari <cite>Affine</cite> transform object. Applied as an extra transform on\ntop of the provided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.  If a list then\nmust be same length as the axis that is being expanded as channels.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}. If a list then\nmust be same length as the axis that is being expanded as channels.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em> or </em><em>list of bool</em>) – Whether the layer visual is currently being displayed.\nIf a list then must be same length as the axis that is\nbeing expanded as channels.</p></li>\n<li><p><strong>multiscale</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. If not specified by\nthe user and if the data is a list of arrays that decrease in shape\nthen it will be taken to be multiscale. The first image in the list\nshould be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>experimental_slicing_plane</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>SlicingPlane</em>) – Properties defining plane rendering in 3D. Properties are defined in\ndata coordinates. Valid dictionary keys are\n{‘position’, ‘normal’, ‘thickness’, and ‘enabled’}.</p></li>\n<li><p><strong>experimental_clipping_planes</strong> (<em>list of dicts</em><em>, </em><em>list of ClippingPlane</em><em>, or </em><em>ClippingPlaneList</em>) – Each dict defines a clipping plane in 3D in data coordinates.\nValid dictionary keys are {‘position’, ‘normal’, and ‘enabled’}.\nValues on the negative side of the normal are discarded if the plane is enabled.</p></li>\n<li><p><strong>title</strong> (<em>string</em><em>, </em><em>optional</em>) – The title of the viewer window. by default ‘napari’.</p></li>\n<li><p><strong>ndisplay</strong> (<em>{2</em><em>, </em><em>3}</em><em>, </em><em>optional</em>) – Number of displayed dimensions. by default 2.</p></li>\n<li><p><strong>order</strong> (<em>tuple of int</em><em>, </em><em>optional</em>) – Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p></li>\n<li><p><strong>axis_labels</strong> (<em>list of str</em><em>, </em><em>optional</em>) – Dimension names. by default they are labeled with sequential numbers</p></li>\n<li><p><strong>show</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Whether to show the viewer after instantiation. by default True.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_labels\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_labels</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">num_colors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">50</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">seed</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.5</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rendering</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'iso_categorical'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">multiscale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_slicing_plane</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_labels\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a labels layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> or </em><em>list of array</em>) – Labels data as an array or multiscale. Must be integer type or bools.\nPlease note multiscale rendering is only supported in 2D. In 3D, only\nthe lowest resolution scale is displayed.</p></li>\n<li><p><strong>num_colors</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of unique colors to use in colormap.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em> or </em><em>DataFrame</em>) – Properties for each label. Each property should be an array of length\nN, where N is the number of labels, and the first property corresponds\nto background.</p></li>\n<li><p><strong>color</strong> (<em>dict of int to str</em><em> or </em><em>array</em>) – Custom label to color mapping. Values must be valid color names or RGBA\narrays.</p></li>\n<li><p><strong>seed</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Seed for colormap random generator.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>rendering</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – 3D Rendering mode used by vispy. Must be one {‘translucent’, ‘iso_categorical’}.\n‘translucent’ renders without lighting. ‘iso_categorical’ uses isosurface\nrendering to calculate lighting effects on labeled surfaces.\nThe default value is ‘iso_categorical’.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the layer visual is currently being displayed.</p></li>\n<li><p><strong>multiscale</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – Whether the data is a multiscale image or not. Multiscale data is\nrepresented by a list of array like image data. If not specified by\nthe user and if the data is a list of arrays that decrease in shape\nthen it will be taken to be multiscale. The first image in the list\nshould be the largest. Please note multiscale rendering is only\nsupported in 2D. In 3D, only the lowest resolution scale is\ndisplayed.</p></li>\n<li><p><strong>experimental_slicing_plane</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a><em> or </em><em>SlicingPlane</em>) – Properties defining plane rendering in 3D. Properties are defined in\ndata coordinates. Valid dictionary keys are\n{‘position’, ‘normal’, ‘thickness’, and ‘enabled’}.</p></li>\n<li><p><strong>experimental_clipping_planes</strong> (<em>list of dicts</em><em>, </em><em>list of ClippingPlane</em><em>, or </em><em>ClippingPlaneList</em>) – </p><p>Each dict defines a clipping plane in 3D in data coordinates.\nValid dictionary keys are {‘position’, ‘normal’, and ‘enabled’}.\nValues on the negative side of the normal are discarded if the plane is enabled.\ntitle : string, optional</p>\n<blockquote>\n<div><p>The title of the viewer window. by default ‘napari’.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>ndisplay<span class=\"classifier\">{2, 3}, optional</span></dt><dd><p>Number of displayed dimensions. by default 2.</p>\n</dd>\n<dt>order<span class=\"classifier\">tuple of int, optional</span></dt><dd><p>Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p>\n</dd>\n<dt>axis_labels<span class=\"classifier\">list of str, optional</span></dt><dd><p>Dimension names. by default they are labeled with sequential numbers</p>\n</dd>\n<dt>show<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to show the viewer after instantiation. by default True.</p>\n</dd>\n</dl>\n<p></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_path\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_path</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">stack</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">layer_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_path\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a path layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em> or </em><em>list of str</em>) – A filepath, directory, or URL (or a list of any) to open.</p></li>\n<li><p><strong>stack</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – If a list of strings is passed and <code class=\"docutils literal notranslate\"><span class=\"pre\">stack</span></code> is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, then the\nentire list will be passed to plugins.  It is then up to individual\nplugins to know how to handle a list of paths.  If <code class=\"docutils literal notranslate\"><span class=\"pre\">stack</span></code> is\n<code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, then the <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> list is broken up and passed to plugin\nreaders one by one.  by default False.</p></li>\n<li><p><strong>plugin</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – Name of a plugin to use.  If provided, will force <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> to be\nread with the specified <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.  If the requested plugin cannot\nread <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code>, an exception will be raised.</p></li>\n<li><p><strong>layer_type</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>optional</em>) – If provided, will force data read from <code class=\"docutils literal notranslate\"><span class=\"pre\">path</span></code> to be passed to the\ncorresponding <code class=\"docutils literal notranslate\"><span class=\"pre\">add_&lt;layer_type&gt;</span></code> method (along with any\nadditional) <code class=\"docutils literal notranslate\"><span class=\"pre\">kwargs</span></code> provided to this function.  This <em>may</em>\nresult in exceptions if the data returned from the path is not\ncompatible with the layer_type.</p></li>\n<li><p><strong>**kwargs</strong> – All other keyword arguments will be passed on to the respective\n<code class=\"docutils literal notranslate\"><span class=\"pre\">add_layer</span></code> method.</p></li>\n<li><p><strong>title</strong> (<em>string</em><em>, </em><em>optional</em>) – The title of the viewer window. by default ‘napari’.</p></li>\n<li><p><strong>ndisplay</strong> (<em>{2</em><em>, </em><em>3}</em><em>, </em><em>optional</em>) – Number of displayed dimensions. by default 2.</p></li>\n<li><p><strong>order</strong> (<em>tuple of int</em><em>, </em><em>optional</em>) – Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p></li>\n<li><p><strong>axis_labels</strong> (<em>list of str</em><em>, </em><em>optional</em>) – Dimension names. by default they are labeled with sequential numbers</p></li>\n<li><p><strong>show</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a><em>, </em><em>optional</em>) – Whether to show the viewer after instantiation. by default True.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_points\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_points</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndim</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">symbol</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'o'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">size</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">10</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'black'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'white'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">n_dimensional</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">False</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_choices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_points\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a points layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> (</em><em>N</em><em>, </em><em>D</em><em>)</em>) – Coordinates for N points in D dimensions.</p></li>\n<li><p><strong>ndim</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of dimensions for shapes. When data is not None, ndim must be D.\nAn empty points layer can be instantiated with arbitrary ndim.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each point. Each property should be an array of length N,\nwhere N is the number of points.</p></li>\n<li><p><strong>property_choices</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em>) – possible values for each property.</p></li>\n<li><p><strong>text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Text to be displayed with the points. If text is set to a key in properties,\nthe value of that property will be displayed. Multiple properties can be\ncomposed using f-string-like syntax (e.g., ‘{property_1}, {float_property:.2f}).\nA dictionary can be provided with keyword arguments to set the text values\nand display properties. See TextManager.__init__() for the valid keyword arguments.\nFor example usage, see /napari/examples/add_points_with_text.py.</p></li>\n<li><p><strong>symbol</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Symbol to be used for the point markers. Must be one of the\nfollowing: arrow, clobber, cross, diamond, disc, hbar, ring,\nsquare, star, tailed_arrow, triangle_down, triangle_up, vbar, x.</p></li>\n<li><p><strong>size</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>array</em>) – Size of the point marker. If given as a scalar, all points are made\nthe same size. If given as an array, size must be the same\nbroadcastable to the same shape as the data.</p></li>\n<li><p><strong>edge_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Width of the symbol edge in pixels.</p></li>\n<li><p><strong>edge_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Color of the point marker border. Numeric color values should be RGB(A).</p></li>\n<li><p><strong>edge_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>edge_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set edge_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>edge_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>face_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Color of the point marker body. Numeric color values should be RGB(A).</p></li>\n<li><p><strong>face_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to face_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>face_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set face_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>face_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>n_dimensional</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – If True, renders points not just in central plane but also in all\nn-dimensions according to specified point marker size.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – </p><p>Whether the layer visual is currently being displayed.\ntitle : string, optional</p>\n<blockquote>\n<div><p>The title of the viewer window. by default ‘napari’.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>ndisplay<span class=\"classifier\">{2, 3}, optional</span></dt><dd><p>Number of displayed dimensions. by default 2.</p>\n</dd>\n<dt>order<span class=\"classifier\">tuple of int, optional</span></dt><dd><p>Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p>\n</dd>\n<dt>axis_labels<span class=\"classifier\">list of str, optional</span></dt><dd><p>Dimension names. by default they are labeled with sequential numbers</p>\n</dd>\n<dt>show<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to show the viewer after instantiation. by default True.</p>\n</dd>\n</dl>\n<p></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_shapes\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_shapes</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndim</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_choices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">text</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shape_type</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'rectangle'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'#777777'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'white'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">face_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">z_index</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_shapes\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a shapes layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em> or </em><em>array</em>) – List of shape data, where each element is an (N, D) array of the\nN vertices of a shape in D dimensions. Can be an 3-dimensional\narray if each shape has the same number of vertices.</p></li>\n<li><p><strong>ndim</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a>) – Number of dimensions for shapes. When data is not None, ndim must be D.\nAn empty shapes layer can be instantiated with arbitrary ndim.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each shape. Each property should be an array of length N,\nwhere N is the number of shapes.</p></li>\n<li><p><strong>property_choices</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em>) – possible values for each property.</p></li>\n<li><p><strong>text</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Text to be displayed with the shapes. If text is set to a key in properties,\nthe value of that property will be displayed. Multiple properties can be\ncomposed using f-string-like syntax (e.g., ‘{property_1}, {float_property:.2f}).\nA dictionary can be provided with keyword arguments to set the text values\nand display properties. See TextManager.__init__() for the valid keyword arguments.\nFor example usage, see /napari/examples/add_shapes_with_text.py.</p></li>\n<li><p><strong>shape_type</strong> (<em>string</em><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – String of shape shape_type, must be one of “{‘line’, ‘rectangle’,\n‘ellipse’, ‘path’, ‘polygon’}”. If a list is supplied it must be\nthe same length as the length of <cite>data</cite> and each element will be\napplied to each shape otherwise the same value will be used for all\nshapes.</p></li>\n<li><p><strong>edge_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Thickness of lines and edges. If a list is supplied it must be the\nsame length as the length of <cite>data</cite> and each element will be\napplied to each shape otherwise the same value will be used for all\nshapes.</p></li>\n<li><p><strong>edge_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em>) – If string can be any color name recognized by vispy or hex value if\nstarting with <cite>#</cite>. If array-like must be 1-dimensional array with 3\nor 4 elements. If a list is supplied it must be the same length as\nthe length of <cite>data</cite> and each element will be applied to each shape\notherwise the same value will be used for all shapes.</p></li>\n<li><p><strong>edge_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>edge_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set edge_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>edge_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>face_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>array-like</em>) – If string can be any color name recognized by vispy or hex value if\nstarting with <cite>#</cite>. If array-like must be 1-dimensional array with 3\nor 4 elements. If a list is supplied it must be the same length as\nthe length of <cite>data</cite> and each element will be applied to each shape\notherwise the same value will be used for all shapes.</p></li>\n<li><p><strong>face_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to face_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>face_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set face_color if a continuous attribute is used to set face_color.</p></li>\n<li><p><strong>face_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>z_index</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.9)\"><em>int</em></a><em> or </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Specifier of z order priority. Shapes with higher z order are\ndisplayed ontop of others. If a list is supplied it must be the\nsame length as the length of <cite>data</cite> and each element will be\napplied to each shape otherwise the same value will be used for all\nshapes.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – </p><p>Whether the layer visual is currently being displayed.\ntitle : string, optional</p>\n<blockquote>\n<div><p>The title of the viewer window. by default ‘napari’.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>ndisplay<span class=\"classifier\">{2, 3}, optional</span></dt><dd><p>Number of displayed dimensions. by default 2.</p>\n</dd>\n<dt>order<span class=\"classifier\">tuple of int, optional</span></dt><dd><p>Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p>\n</dd>\n<dt>axis_labels<span class=\"classifier\">list of str, optional</span></dt><dd><p>Dimension names. by default they are labeled with sequential numbers</p>\n</dd>\n<dt>show<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to show the viewer after instantiation. by default True.</p>\n</dd>\n</dl>\n<p></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_surface\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_surface</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'gray'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">gamma</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shading</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'flat'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_surface\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a surface layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>2-tuple</em><em> or </em><em>3-tuple of array</em>) – The first element of the tuple is an (N, D) array of vertices of\nmesh triangles. The second is an (M, 3) array of int of indices\nof the mesh triangles. The optional third element is the\n(K0, …, KL, N) array of values used to color vertices where the\nadditional L dimensions are used to color the same mesh with\ndifferent values. If not provided, it defaults to ones.</p></li>\n<li><p><strong>colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#tuple\" title=\"(in Python v3.9)\"><em>tuple</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Colormap to use for luminance images. If a string must be the name\nof a supported colormap from vispy or matplotlib. If a tuple the\nfirst value must be a string to assign as a name to a colormap and\nthe second item must be a Colormap. If a dict the key must be a\nstring to assign as a name to a colormap and the value must be a\nColormap.</p></li>\n<li><p><strong>contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a><em> (</em><em>2</em><em>,</em><em>)</em>) – Color limits to be used for determining the colormap bounds for\nluminance images. If not passed is calculated as the min and max of\nthe image.</p></li>\n<li><p><strong>gamma</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Gamma correction for determining colormap linearity. Defaults to 1.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>shading</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><em>Shading</em>) – </p><p>One of a list of preset shading modes that determine the lighting model\nusing when rendering the surface in 3D.</p>\n<blockquote>\n<div><ul>\n<li><dl class=\"simple\">\n<dt>Shading.NONE</dt><dd><p>Corresponds to shading=’none’.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>Shading.FLAT</dt><dd><p>Corresponds to shading=’flat’.</p>\n</dd>\n</dl>\n</li>\n<li><dl class=\"simple\">\n<dt>Shading.SMOOTH</dt><dd><p>Corresponds to shading=’smooth’.</p>\n</dd>\n</dl>\n</li>\n</ul>\n</div></blockquote>\n<p></p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – </p><p>Whether the layer visual is currently being displayed.\ntitle : string, optional</p>\n<blockquote>\n<div><p>The title of the viewer window. by default ‘napari’.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>ndisplay<span class=\"classifier\">{2, 3}, optional</span></dt><dd><p>Number of displayed dimensions. by default 2.</p>\n</dd>\n<dt>order<span class=\"classifier\">tuple of int, optional</span></dt><dd><p>Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p>\n</dd>\n<dt>axis_labels<span class=\"classifier\">list of str, optional</span></dt><dd><p>Dimension names. by default they are labeled with sequential numbers</p>\n</dd>\n<dt>show<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to show the viewer after instantiation. by default True.</p>\n</dd>\n</dl>\n<p></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_tracks\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_tracks</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">graph</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tail_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tail_length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">30</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">head_length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'additive'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'turbo'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">color_by</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'track_id'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">colormaps_dict</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_tracks\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a tracks layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>array</em><em> (</em><em>N</em><em>, </em><em>D+1</em><em>)</em>) – Coordinates for N points in D+1 dimensions. ID,T,(Z),Y,X. The first\naxis is the integer ID of the track. D is either 3 or 4 for planar\nor volumetric timeseries respectively.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each point. Each property should be an array of length N,\nwhere N is the number of points.</p></li>\n<li><p><strong>graph</strong> (<em>dict {int: list}</em>) – Graph representing associations between tracks. Dictionary defines the\nmapping between a track ID and the parents of the track. This can be\none (the track has one parent, and the parent has &gt;=1 child) in the\ncase of track splitting, or more than one (the track has multiple\nparents, but only one child) in the case of track merging.\nSee examples/tracks_3d_with_graph.py</p></li>\n<li><p><strong>color_by</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Track property (from property keys) by which to color vertices.</p></li>\n<li><p><strong>tail_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Width of the track tails in pixels.</p></li>\n<li><p><strong>tail_length</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Length of the positive (backward in time) tails in units of time.</p></li>\n<li><p><strong>head_length</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Length of the positive (forward in time) tails in units of time.</p></li>\n<li><p><strong>colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Default colormap to use to set vertex colors. Specialized colormaps,\nrelating to specified properties can be passed to the layer via\ncolormaps_dict.</p></li>\n<li><p><strong>colormaps_dict</strong> (<em>dict {str: napari.utils.Colormap}</em>) – Optional dictionary mapping each property to a colormap for that\nproperty. This allows each property to be assigned a specific colormap,\nrather than having a global colormap for everything.</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – </p><p>Whether the layer visual is currently being displayed.\ntitle : string, optional</p>\n<blockquote>\n<div><p>The title of the viewer window. by default ‘napari’.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>ndisplay<span class=\"classifier\">{2, 3}, optional</span></dt><dd><p>Number of displayed dimensions. by default 2.</p>\n</dd>\n<dt>order<span class=\"classifier\">tuple of int, optional</span></dt><dd><p>Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p>\n</dd>\n<dt>axis_labels<span class=\"classifier\">list of str, optional</span></dt><dd><p>Dimension names. by default they are labeled with sequential numbers</p>\n</dd>\n<dt>show<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to show the viewer after instantiation. by default True.</p>\n</dd>\n</dl>\n<p></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py function\">\n<dt id=\"napari.view_vectors\">\n<code class=\"sig-prename descclassname\"><span class=\"pre\">napari.</span></code><code class=\"sig-name descname\"><span class=\"pre\">view_vectors</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">properties</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">property_choices</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_width</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'red'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_color_cycle</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_colormap</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'viridis'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">edge_contrast_limits</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">length</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">1</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">metadata</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">scale</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">translate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">rotate</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">shear</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">affine</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">opacity</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">0.7</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blending</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'translucent'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">visible</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">experimental_clipping_planes</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">title</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">'napari'</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ndisplay</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">2</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">order</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">axis_labels</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">()</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">show</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/view_layers.html#view_vectors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a></dt>\n<dd><p>Create a viewer and add a vectors layer.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>(</em><em>N</em><em>, </em><em>2</em><em>, </em><em>D</em><em>) or </em><em>(</em><em>N1</em><em>, </em><em>N2</em><em>, </em><em>..</em><em>, </em><em>ND</em><em>, </em><em>D</em><em>) </em><em>array</em>) – An (N, 2, D) array is interpreted as “coordinate-like” data and a\nlist of N vectors with start point and projections of the vector in\nD dimensions. An (N1, N2, …, ND, D) array is interpreted as\n“image-like” data where there is a length D vector of the\nprojections at each pixel.</p></li>\n<li><p><strong>properties</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em><em>, </em><em>DataFrame</em>) – Properties for each vector. Each property should be an array of length N,\nwhere N is the number of vectors.</p></li>\n<li><p><strong>property_choices</strong> (<em>dict {str: array</em><em> (</em><em>N</em><em>,</em><em>)</em><em>}</em>) – possible values for each property.</p></li>\n<li><p><strong>edge_width</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Width for all vectors in pixels.</p></li>\n<li><p><strong>length</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Multiplicative factor on projections for length of all vectors.</p></li>\n<li><p><strong>edge_color</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Color of all of the vectors.</p></li>\n<li><p><strong>edge_color_cycle</strong> (<em>np.ndarray</em><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.9)\"><em>list</em></a>) – Cycle of colors (provided as string name, RGB, or RGBA) to map to edge_color if a\ncategorical attribute is used color the vectors.</p></li>\n<li><p><strong>edge_colormap</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a><em>, </em><a class=\"reference internal\" href=\"napari.utils.Colormap.html#napari.utils.Colormap\" title=\"napari.utils.Colormap\"><em>napari.utils.Colormap</em></a>) – Colormap to set vector color if a continuous attribute is used to set edge_color.</p></li>\n<li><p><strong>edge_contrast_limits</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.9)\"><em>None</em></a><em>, </em><em>(</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>)</em>) – clims for mapping the property to a color map. These are the min and max value\nof the specified property that are mapped to 0 and 1, respectively.\nThe default value is None. If set the none, the clims will be set to\n(property.min(), property.max())</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – Name of the layer.</p></li>\n<li><p><strong>metadata</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.9)\"><em>dict</em></a>) – Layer metadata.</p></li>\n<li><p><strong>scale</strong> (<em>tuple of float</em>) – Scale factors for the layer.</p></li>\n<li><p><strong>translate</strong> (<em>tuple of float</em>) – Translation values for the layer.</p></li>\n<li><p><strong>rotate</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a><em>, </em><em>3-tuple of float</em><em>, or </em><em>n-D array.</em>) – If a float convert into a 2D rotation matrix using that value as an\nangle. If 3-tuple convert into a 3D rotation matrix, using a yaw,\npitch, roll convention. Otherwise assume an nD rotation. Angles are\nassumed to be in degrees. They can be converted from radians with\nnp.degrees if needed.</p></li>\n<li><p><strong>shear</strong> (<em>1-D array</em><em> or </em><em>n-D array</em>) – Either a vector of upper triangular values, or an nD shear matrix with\nones along the main diagonal.</p></li>\n<li><p><strong>affine</strong> (<em>n-D array</em><em> or </em><em>napari.utils.transforms.Affine</em>) – (N+1, N+1) affine transformation matrix in homogeneous coordinates.\nThe first (N, N) entries correspond to a linear transform and\nthe final column is a length N translation vector and a 1 or a napari\n<cite>Affine</cite> transform object. Applied as an extra transform on top of the\nprovided scale, rotate, and shear values.</p></li>\n<li><p><strong>opacity</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#float\" title=\"(in Python v3.9)\"><em>float</em></a>) – Opacity of the layer visual, between 0.0 and 1.0.</p></li>\n<li><p><strong>blending</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.9)\"><em>str</em></a>) – One of a list of preset blending modes that determines how RGB and\nalpha values of the layer visual get mixed. Allowed values are\n{‘opaque’, ‘translucent’, and ‘additive’}.</p></li>\n<li><p><strong>visible</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.9)\"><em>bool</em></a>) – </p><p>Whether the layer visual is currently being displayed.\ntitle : string, optional</p>\n<blockquote>\n<div><p>The title of the viewer window. by default ‘napari’.</p>\n</div></blockquote>\n<dl class=\"simple\">\n<dt>ndisplay<span class=\"classifier\">{2, 3}, optional</span></dt><dd><p>Number of displayed dimensions. by default 2.</p>\n</dd>\n<dt>order<span class=\"classifier\">tuple of int, optional</span></dt><dd><p>Order in which dimensions are displayed where the last two or last\nthree dimensions correspond to row x column or plane x row x column if\nndisplay is 2 or 3. by default None</p>\n</dd>\n<dt>axis_labels<span class=\"classifier\">list of str, optional</span></dt><dd><p>Dimension names. by default they are labeled with sequential numbers</p>\n</dd>\n<dt>show<span class=\"classifier\">bool, optional</span></dt><dd><p>Whether to show the viewer after instantiation. by default True.</p>\n</dd>\n</dl>\n<p></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>viewer</strong> – The newly-created viewer.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer\" title=\"napari.Viewer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari.Viewer</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./api/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[]}},"__N_SSG":true}