{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/release/index.html":{"level":1,"children":["/release/release_0_4_12.html","/release/release_0_4_11.html","/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_4_12.html":{"level":2,"children":[],"href":"/release/release_0_4_12.html","text":"napari 0.4.12"},"/glossary.html":{"level":1,"children":[],"href":"/glossary.html","text":"Glossary"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html","/developers/translations.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/translations.html":{"level":2,"children":[],"href":"/developers/translations.html","text":"Translations"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html","/api/stable/napari.utils.progress.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.progress.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.progress.html","text":"napari.utils.progress"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html","/api/stable/napari.types.partial.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.partial.html":{"level":3,"children":[],"href":"/api/stable/napari.types.partial.html","text":"napari.types.partial"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html","/community/working_groups.html","/community/meeting_schedule.html"],"href":"/community/index.html","text":"Community"},"/community/meeting_schedule.html":{"level":2,"children":[],"href":"/community/meeting_schedule.html","text":"Meeting schedule"},"/community/working_groups.html":{"level":2,"children":[],"href":"/community/working_groups.html","text":"Working groups"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the project and team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/best_practices.html","/plugins/stable/npe2_migration_guide.html","/plugins/stable/guides.html","/plugins/stable/first_plugin.html","/plugins/stable/test_deploy.html","/plugins/stable/npe1.html","/plugins/stable/find_and_install_plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find_and_install_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find_and_install_plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/npe1.html":{"level":2,"children":[],"href":"/plugins/stable/npe1.html","text":"1st Gen Plugin Guide (Deprecated)"},"/plugins/stable/test_deploy.html":{"level":2,"children":[],"href":"/plugins/stable/test_deploy.html","text":"Test and Deploy"},"/plugins/stable/first_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/first_plugin.html","text":"Your First Plugin"},"/plugins/stable/guides.html":{"level":2,"children":[],"href":"/plugins/stable/guides.html","text":"Contribution Guides"},"/plugins/stable/npe2_migration_guide.html":{"level":2,"children":[],"href":"/plugins/stable/npe2_migration_guide.html","text":"npe2 migration guide"},"/plugins/stable/best_practices.html":{"level":2,"children":[],"href":"/plugins/stable/best_practices.html","text":"Best practices"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/magicgui.html","/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/rendering-explanation.html","/guides/stable/rendering.html","/guides/stable/performance.html","/guides/stable/3D_interactivity.html","/guides/stable/events_reference.html","/guides/stable/contexts_expressions.html"],"href":"/guides/stable/index.html","text":"In-depth explanations"},"/guides/stable/contexts_expressions.html":{"level":2,"children":[],"href":"/guides/stable/contexts_expressions.html","text":"Contexts and Expressions in napari"},"/guides/stable/events_reference.html":{"level":2,"children":[],"href":"/guides/stable/events_reference.html","text":"Events reference"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"napari performance"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous rendering"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An introduction to the event loop in napari"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/howtos/index.html":{"level":1,"children":["/howtos/connecting_events.html","/howtos/napari_imageJ.html","/howtos/docker.html","/howtos/perfmon.html"],"href":"/howtos/index.html","text":"How-to guides"},"/howtos/perfmon.html":{"level":2,"children":[],"href":"/howtos/perfmon.html","text":"Performance monitoring"},"/howtos/docker.html":{"level":2,"children":[],"href":"/howtos/docker.html","text":"Napari in Docker"},"/howtos/napari_imageJ.html":{"level":2,"children":[],"href":"/howtos/napari_imageJ.html","text":"napari + ImageJ how-to guide"},"/howtos/connecting_events.html":{"level":2,"children":[],"href":"/howtos/connecting_events.html","text":"Hooking up your own events"},"/tutorials/index.html":{"level":1,"children":["/tutorials/segmentation/index.html","/tutorials/tracking/index.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/further-resources/napari-workshops.html","/tutorials/tracking/cell_tracking.html","/tutorials/segmentation/annotate_segmentation.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/segmentation/annotate_segmentation.html":{"level":2,"children":[],"href":"/tutorials/segmentation/annotate_segmentation.html","text":"Annotating segmentation with text and bounding boxes"},"/tutorials/tracking/cell_tracking.html":{"level":2,"children":[],"href":"/tutorials/tracking/cell_tracking.html","text":"Single cell tracking with napari"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/dask.html":{"level":2,"children":[],"href":"/tutorials/applications/dask.html","text":"Using Dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":2,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"Annotating videos with napari"},"/tutorials/tracking/index.html":{"level":2,"children":[],"href":"/tutorials/tracking/index.html","text":"Tracking"},"/tutorials/segmentation/index.html":{"level":2,"children":[],"href":"/tutorials/segmentation/index.html","text":"Segmentation"},"/tutorials/start_index.html":{"level":1,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/start_index.html","text":"Getting Started"},"/tutorials/fundamentals/vectors.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"Getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"How to install napari on your machine"}},"rootGlobalHeaders":["/tutorials/start_index.html","/tutorials/index.html","/howtos/index.html","/guides/stable/index.html","/plugins/stable/index.html","/community/index.html","/api/stable/index.html","/developers/index.html","/glossary.html","/release/index.html","/roadmaps/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Best practices","pageFrontMatter":{},"previewImage":"","previewDescription":"There are a number of good and bad practices that may not be immediately obvious\nwhen developing a plugin.  This page covers some known practices that could\naffect the ability to install or use you...","appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"best-practices\">\n<span id=\"id1\"></span>\n<p>There are a number of good and bad practices that may not be immediately obvious\nwhen developing a plugin.  This page covers some known practices that could\naffect the ability to install or use your plugin effectively.</p>\n<div class=\"section\" id=\"don-t-include-pyside2-or-pyqt5-in-your-plugin-s-dependencies\">\n<h2>Don’t include <code class=\"docutils literal notranslate\"><span class=\"pre\">PySide2</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">PyQt5</span></code> in your plugin’s dependencies.<a class=\"headerlink\" href=\"#don-t-include-pyside2-or-pyqt5-in-your-plugin-s-dependencies\" title=\"Permalink to this headline\">¶</a></h2>\n<p><em>This is important!</em></p>\n<p>Napari supports <em>both</em> PyQt and PySide backends for Qt.  It is up to the\nend-user to choose which one they want. If they installed napari with <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span> <span class=\"pre\">install</span> <span class=\"pre\">napari[all]</span></code>, then the <code class=\"docutils literal notranslate\"><span class=\"pre\">[all]</span></code> extra will (currently) install <code class=\"docutils literal notranslate\"><span class=\"pre\">PyQt5</span></code>\nfor them from pypi.  If they installed via <code class=\"docutils literal notranslate\"><span class=\"pre\">conda</span> <span class=\"pre\">install</span> <span class=\"pre\">napari</span></code>, then they’ll\nhave <code class=\"docutils literal notranslate\"><span class=\"pre\">PyQt5</span></code>, but via anaconda cloud instead of pypi. Lastly, they may have\ninstalled napari with PySide2.</p>\n<p>Here’s what can go wrong if you <em>also</em> declare one of these backends in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">install_requires</span></code> section of your plugin metadata:</p>\n<ul>\n<li><p>If they installed via <code class=\"docutils literal notranslate\"><span class=\"pre\">conda</span> <span class=\"pre\">install</span> <span class=\"pre\">napari</span></code> and then they install your plugin\nvia <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> (or via the builtin plugin installer, which currently uses <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code>),\nthen there <em>will</em> be a binary incompatibility between their conda <code class=\"docutils literal notranslate\"><span class=\"pre\">pyqt</span></code>\ninstallation, and the new pip “<code class=\"docutils literal notranslate\"><span class=\"pre\">PyQt5</span></code>” installation. <em>This will very likely\nlead to a broken environment, forcing the user to re-create their entire\nenvironment and re-install napari</em>. This is an unfortunate consequence of\n<a class=\"reference external\" href=\"https://github.com/ContinuumIO/anaconda-issues/issues/1554\" target=\"_blank\" rel=\"noreferrer\">package naming\ndecisions</a>, and\nit’s not something napari can fix.</p></li>\n<li><p>Alternatively, they may end up with <em>both</em> PyQt and PySide in their\nenvironment, and while that’s not always guaranteed to break things, it can\nlead to unexpected and difficult to debug problems.</p></li>\n<li><p><strong>Don’t import from PyQt5 or PySide2 in your plugin: use <code class=\"docutils literal notranslate\"><span class=\"pre\">qtpy</span></code>.</strong></p>\n<p>If you use <code class=\"docutils literal notranslate\"><span class=\"pre\">from</span> <span class=\"pre\">PyQt5</span> <span class=\"pre\">import</span> <span class=\"pre\">QtCore</span></code> (or similar) in your plugin, but the\nend-user has chosen to use <code class=\"docutils literal notranslate\"><span class=\"pre\">PySide2</span></code> for their Qt backend — or vice versa —\nthen your plugin will fail to import.  Instead use <code class=\"docutils literal notranslate\"><span class=\"pre\">from</span> <span class=\"pre\">qtpy</span> <span class=\"pre\">import</span>&nbsp;&nbsp; <span class=\"pre\">QtCore</span></code>.  <code class=\"docutils literal notranslate\"><span class=\"pre\">qtpy</span></code> is a <a class=\"reference external\" href=\"https://github.com/spyder-ide/qtpy\" target=\"_blank\" rel=\"noreferrer\">Qt compatibility\nlayer</a> that will import from whatever\nbackend is installed in the environment.</p>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"try-not-to-depend-on-packages-that-require-c-compilation-but-do-not-offer-wheels\">\n<h2>Try not to depend on packages that require C compilation, but do not offer “wheels”<a class=\"headerlink\" href=\"#try-not-to-depend-on-packages-that-require-c-compilation-but-do-not-offer-wheels\" title=\"Permalink to this headline\">¶</a></h2>\n<div class=\"admonition tip\">\n<p class=\"admonition-title\">Tip</p>\n<p>This requires some awareness of how your dependencies are built and distributed…</p>\n<p>Some python packages write a portion of their code in lower level languages like\nC or C++ and compile that code into “C Extensions” that can be called by python\nat runtime.  This can <em>greatly</em> improve performance, but it means that the\npackage must be compiled for <em>each</em> platform (i.e. Windows, Mac, Linux) that the\npackage wants to support.  Some packages do this compilation step ahead of time,\nby distributing “<a class=\"reference external\" href=\"https://realpython.com/python-wheels/\" target=\"_blank\" rel=\"noreferrer\">wheels</a>” on\n<a class=\"reference external\" href=\"https://pypi.org/\" target=\"_blank\" rel=\"noreferrer\">PyPI</a>… or by providing pre-compiled packages via <code class=\"docutils literal notranslate\"><span class=\"pre\">conda</span></code>.\nOther packages simply distribute the source code (as an “sdist”) and expect the\nend-user to compile it on their own computer.  Compiling C code requires\nsoftware that is not always installed on every computer. (If you’ve ever tried\nto <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span> <span class=\"pre\">install</span></code> a package and had it fail with a big wall of red text saying\nsomething about <code class=\"docutils literal notranslate\"><span class=\"pre\">gcc</span></code>, then you’ve run into a package that doesn’t distribute\nwheels, and you didn’t have the software required to compile it).</p>\n</div>\n<p>As a plugin developer, if you depend on a package that uses C extensions but\ndoesn’t distribute a pre-compiled wheel, then it’s very likely that your users\nwill run into difficulties installing your plugin:</p>\n<ul>\n<li><p><em>What is a “wheel”?</em></p>\n<p>Briefly, a wheel is a <em>built distribution</em>, containing code that is\npre-compiled for a specific operating system.</p>\n<p>For more detail, see <a class=\"reference external\" href=\"https://realpython.com/python-wheels/\" target=\"_blank\" rel=\"noreferrer\">What Are Python Wheels and Why Should You\nCare?</a></p>\n</li>\n<li><p><em>How do I know if my dependency offers a wheel</em></p>\n<p>There are many ways, but a sure-fire way to know is to go to the respective\npackage on PyPI, and click on the “Download Files” link.  If the package\noffers wheels, you’ll see one or more files ending in <code class=\"docutils literal notranslate\"><span class=\"pre\">.whl</span></code>.  For example,\n<a class=\"reference external\" href=\"https://pypi.org/project/napari/#files\" target=\"_blank\" rel=\"noreferrer\">napari offers a wheel</a>.  If a package\n<em>doesn’t</em> offer a wheel, it may still be ok if it’s just a pure python package\nthat doesn’t have any C extensions…</p>\n</li>\n<li><p><em>How do I know if one of my dependencies uses C Extensions?</em></p>\n<p>There’s no one right way, but more often than not, if a package uses C\nextensions, the <code class=\"docutils literal notranslate\"><span class=\"pre\">setup()</span></code> function in their <code class=\"docutils literal notranslate\"><span class=\"pre\">setup.py</span></code> file will use the\n<a class=\"reference external\" href=\"https://docs.python.org/3/distutils/setupscript.html#describing-extension-modules\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ext_modules</span></code>\nargument</a>.\n(for example, <a class=\"reference external\" href=\"https://github.com/pytorch/pytorch/blob/master/setup.py#L914\" target=\"_blank\" rel=\"noreferrer\">see here in\npytorch</a>)</p>\n</li>\n</ul>\n<div class=\"admonition-what-about-conda admonition\">\n<p class=\"admonition-title\">What about conda?</p>\n<p><strong>conda</strong> also distributes &amp; installs pre-compiled packages, though they aren’t\nwheels.  While this is definitely a fine way to install binary dependencies in a\nreliable way, the built-in napari plugin installer doesn’t currently work with\nconda.  If your dependency is only available on conda, but does not offer\nwheels,you <em>may</em> guide your users in using conda to install your package or one\nof your dependencies.  Just know that it may not work with the built-in plugin\ninstaller.</p>\n</div>\n</div>\n<div class=\"section\" id=\"don-t-import-heavy-dependencies-at-the-top-of-your-module\">\n<h2>Don’t import heavy dependencies at the top of your module<a class=\"headerlink\" href=\"#don-t-import-heavy-dependencies-at-the-top-of-your-module\" title=\"Permalink to this headline\">¶</a></h2>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>This point will be less relevant when we move to the second generation\n<a class=\"reference external\" href=\"https://github.com/napari/napari/issues/3115\" target=\"_blank\" rel=\"noreferrer\">manifest-based plugin\ndeclaration</a>, but it’s still a\ngood idea to delay importing your plugin-specific dependencies and modules until\n<em>after</em> your hookspec has been called.  This helps napari stay quick and\nresponsive at startup.</p>\n</div>\n<p>Consider the following example plugin:</p>\n<div class=\"highlight-ini notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">[options.entry_points]</span><span class=\"w\"></span>\n<span class=\"na\">napari.plugin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"na\">plugin-name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">mypackage.napari_plugin</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>In this example, <code class=\"docutils literal notranslate\"><span class=\"pre\">my_heavy_dependency_like_tensorflow</span></code> will be imported\n<em>immediately</em> when napari is launched, and we search the entry_point\n<code class=\"docutils literal notranslate\"><span class=\"pre\">mypackage.napari_plugin</span></code> for decorated hook specifications.</p>\n<div class=\"highlight-py notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># mypackage/napari_plugin.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">napari_plugin_engine</span> <span class=\"kn\">import</span> <span class=\"n\">napari_hook_specification</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qtpy.QtWidgets</span> <span class=\"kn\">import</span> <span class=\"n\">QWidget</span>\n<span class=\"kn\">from</span> <span class=\"nn\">my_heavy_dependency_like_tensorflow</span> <span class=\"kn\">import</span> <span class=\"n\">something_amazing</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyWidget</span><span class=\"p\">(</span><span class=\"n\">QWidget</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">do_something_amazing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">something_amazing</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@napari_hook_specification</span>\n<span class=\"k\">def</span> <span class=\"nf\">napari_experimental_provide_dock_widget</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">MyWidget</span>\n</pre></div>\n</div>\n<p>This can deterioate the end-user experience, and make napari feel slugish. Best\npractice is to delay heavy imports until right before they are used.  The\nfollowing slight modification will help napari load much faster:</p>\n<div class=\"highlight-py notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># mypackage/napari_plugin.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">napari_plugin_engine</span> <span class=\"kn\">import</span> <span class=\"n\">napari_hook_specification</span>\n<span class=\"kn\">from</span> <span class=\"nn\">qtpy.QtWidgets</span> <span class=\"kn\">import</span> <span class=\"n\">QWidget</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyWidget</span><span class=\"p\">(</span><span class=\"n\">QWidget</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">do_something_amazing</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># import has been moved here, will happen only after the user</span>\n        <span class=\"c1\"># has opened and used this widget.</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">my_heavy_dependency_like_tensorflow</span> <span class=\"kn\">import</span> <span class=\"n\">something_amazing</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">something_amazing</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>(again, the second gen napari plugin engine will help improve this situation,\nbut it’s still a good idea!)</p>\n</div>\n<div class=\"section\" id=\"don-t-leave-resources-open\">\n<h2>Don’t leave resources open<a class=\"headerlink\" href=\"#don-t-leave-resources-open\" title=\"Permalink to this headline\">¶</a></h2>\n<p>It’s always good practice to clean up resources like open file handles and\ndatabases.  As a napari plugin it’s particularly important to do this (and\nespecially for Windows users).  If someone tries to use the built-in plugin\nmanager to <em>uninstall</em> your plugin, open file handles and resources may cause\nthe process to fail or even leave your plugin in an “installed-but-unuseable”\nstate.</p>\n<p>Don’t do this:</p>\n<div class=\"highlight-py notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># my_plugin/module.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"n\">data_file</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"some_data_in_my_plugin.json\"</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">data_file</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Instead, make sure to close your resource after grabbing the data (ideally by\nusing a context manager, but manually otherwise):</p>\n<div class=\"highlight-py notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"some_data_in_my_plugin.json\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">data_file</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">data_file</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"write-extensive-tests-for-your-plugin\">\n<h2>Write extensive tests for your plugin!<a class=\"headerlink\" href=\"#write-extensive-tests-for-your-plugin\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Programmer and author Bruce Eckel famously wrote:</p>\n<blockquote>\n<div><p>“If it’s not tested, it’s broken”</p>\n</div></blockquote>\n<p>It’s true.  High test coverage is one way to show your users that you are\ndedicated to the stability of your plugin. Aim for 100%!</p>\n<p>Of course, simply having 100% coverage doesn’t mean your code is bug-free, so\nmake sure that you test all of the various ways that your code might be called.</p>\n<p>See our <a class=\"reference internal\" href=\"test_deploy.html#plugin-testing-tips\"><span class=\"std std-ref\">Tips for testing napari plugins</span></a>.</p>\n<div class=\"section\" id=\"how-to-check-test-coverage\">\n<h3>How to check test coverage?<a class=\"headerlink\" href=\"#how-to-check-test-coverage\" title=\"Permalink to this headline\">¶</a></h3>\n<p>The <a class=\"reference external\" href=\"https://github.com/napari/cookiecutter-napari-plugin\" target=\"_blank\" rel=\"noreferrer\">cookiecutter\ntemplate</a> is already set\nup to report test coverage, but you can test locally as well, using\n<a class=\"reference external\" href=\"https://github.com/pytest-dev/pytest-cov\" target=\"_blank\" rel=\"noreferrer\">pytest-cov</a></p>\n<ol class=\"simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span> <span class=\"pre\">install</span> <span class=\"pre\">pytest-cov</span></code></p></li>\n<li><p>Run your tests with <code class=\"docutils literal notranslate\"><span class=\"pre\">pytest</span> <span class=\"pre\">--cov=&lt;your_package&gt;</span> <span class=\"pre\">--cov-report=html</span></code></p></li>\n<li><p>Open the resulting report in your browser: <code class=\"docutils literal notranslate\"><span class=\"pre\">open</span> <span class=\"pre\">htmlcov/index.html</span></code></p></li>\n<li><p>The report will show line-by-line what is being tested, and what is being\nmissed. Continue writing tests until everything is covered! If you have\nlines that you <em>know</em> never need to be tested (like debugging code) you can\n<a class=\"reference external\" href=\"https://coverage.readthedocs.io/en/coverage-4.3.3/excluding.html#excluding-code-from-coverage-py\" target=\"_blank\" rel=\"noreferrer\">exempt specific\nlines</a>\nfrom coverage with the comment <code class=\"docutils literal notranslate\"><span class=\"pre\">#</span> <span class=\"pre\">pragma:</span> <span class=\"pre\">no</span> <span class=\"pre\">cover</span></code></p></li>\n<li><p>In the cookiecutter, coverage tests from github actions will be uploaded to\n<a class=\"reference external\" href=\"http://codecov.io\" target=\"_blank\" rel=\"noreferrer\">codecov.io</a></p></li>\n</ol>\n</div>\n</div>\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./plugins/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[{"href":"#don-t-include-pyside2-or-pyqt5-in-your-plugin-s-dependencies","text":"Don’t include PySide2 or PyQt5 in your plugin’s dependencies."},{"href":"#try-not-to-depend-on-packages-that-require-c-compilation-but-do-not-offer-wheels","text":"Try not to depend on packages that require C compilation, but do not offer “wheels”"},{"href":"#don-t-import-heavy-dependencies-at-the-top-of-your-module","text":"Don’t import heavy dependencies at the top of your module"},{"href":"#don-t-leave-resources-open","text":"Don’t leave resources open"},{"href":"#write-extensive-tests-for-your-plugin","text":"Write extensive tests for your plugin!"}],"ipynbSource":"","mdSource":"/_sources/plugins/stable/best_practices.md"}},"__N_SSG":true}