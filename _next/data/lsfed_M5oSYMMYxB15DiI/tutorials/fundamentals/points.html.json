{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release Guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer Guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing Guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/perfmon.html","/guides/stable/rendering.html","/guides/stable/docker.html","/guides/stable/performance.html","/guides/stable/magicgui.html","/guides/stable/translations.html","/guides/stable/rendering-explanation.html","/guides/stable/connecting_events.html","/guides/stable/connecting_events.html#long-running-blocking-functions","/guides/stable/3D_interactivity.html"],"href":"/guides/stable/index.html","text":"Developer guides"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"/guides/stable/connecting_events.html":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html","text":"Hooking up your own events"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/translations.html":{"level":2,"children":[],"href":"/guides/stable/translations.html","text":"Translations"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"Napari Performance"},"/guides/stable/docker.html":{"level":2,"children":[],"href":"/guides/stable/docker.html","text":"Napari in Docker (WIP)"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous Rendering"},"/guides/stable/perfmon.html":{"level":2,"children":[],"href":"/guides/stable/perfmon.html","text":"Performance Monitoring"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/release/index.html":{"level":1,"children":["/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_11.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/for_napari_developers.html","/plugins/stable/for_plugin_developers.html","/plugins/stable/hook_specifications.html","/plugins/stable/find-and-install-plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"/plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"/plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"/plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"/tutorials/index.html":{"level":1,"children":["/tutorials/fundamentals/index.html","/tutorials/applications/index.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/applications/index.html":{"level":2,"children":["/tutorials/applications/annotate_segmentation.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/applications/napari_imageJ.html","/tutorials/applications/cell_tracking.html"],"href":"/tutorials/applications/index.html","text":"Applications"},"/tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"/tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"/tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"/tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"/tutorials/applications/dask.html":{"level":3,"children":[],"href":"/tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"/tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"/tutorials/fundamentals/index.html":{"level":2,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/fundamentals/index.html","text":"Fundamentals"},"/tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html"],"href":"/community/index.html","text":"Community"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance Model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the Project and Team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["/community/index.html","/tutorials/index.html","/plugins/stable/index.html","/release/index.html","/api/stable/index.html","/roadmaps/index.html","/guides/stable/index.html","/developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"points layer tutorial","pageFrontMatter":{},"appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"points-layer-tutorial\">\n\n<p>Welcome to the tutorial on the <strong>napari</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code> layer!</p>\n<p>This tutorial assumes you have already installed <strong>napari</strong>, know how to launch\nthe viewer, and are familiar with its layout. For help with installation see our\n<a class=\"reference internal\" href=\"installation.html\"><span class=\"doc std std-doc\">installation</span></a> tutorial. For help getting started with the\nviewer see our <a class=\"reference internal\" href=\"getting_started.html\"><span class=\"doc std std-doc\">getting started</span></a> tutorial. For help\nunderstanding the organisation of the viewer, including things like the layers\nlist, the layer properties widgets, the layer control panels, and the dimension\nsliders see our <a class=\"reference internal\" href=\"viewer.html\"><span class=\"doc std std-doc\">napari viewer</span></a> tutorial.</p>\n<p>This tutorial will teach you about the <strong>napari</strong> <code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code> layer, including\ndisplays spots over an image that have been found in an automated fashion, or\nmanually annotating an image with points. At the end of the tutorial you should\nunderstand how to add a points layer and edit it from the GUI and from the\nconsole.</p>\n<p>The points layer allows you to display an NxD array of N points in D\ncoordinates. You can adjust the size, face color, and edge color of all the\npoints independently. You can also adjust the opactiy, edge width, and symbol\nrepresenting all the points simultaneously.</p>\n<p>Each data point can have annotations associated with it using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Points.properties</span></code> dictionary. These properties can be used to set the face and\nedge colors of the points. For example, when displaying points of different\nclasses/types, one could automatically set color the individual points by their\nrespective class/type. For more details on point properties, see the “setting\npoint edge and face color with properties” below or the <a class=\"reference internal\" href=\"../applications/annotate_points.html\"><span class=\"doc std std-doc\">point annotation\ntutorial</span></a>.</p>\n<div class=\"section\" id=\"a-simple-example\">\n<h2>a simple example</h2>\n<p>You can create a new viewer and add a set of points in one go using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">napari.view_points</span></code> method, or if you already have an existing viewer, you can\nadd points to it using <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.add_points</span></code>. The api of both methods is the same.\nIn these examples we’ll mainly use <code class=\"docutils literal notranslate\"><span class=\"pre\">add_points</span></code> to overlay points onto on an\nexisting image.</p>\n<p>In this example of we will overlay some points on the image of an astronaut:</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">import</span> <span class=\"nn\">napari</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skimage</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n\n<span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">astronaut</span><span class=\"p\">(),</span> <span class=\"n\">rgb</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">]])</span>\n\n<span class=\"n\">points_layer</span> <span class=\"o\">=</span> <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">add_points</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari.utils</span> <span class=\"kn\">import</span> <span class=\"n\">nbscreenshot</span>\n\n<span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"arguments-of-view-points-and-add-points\">\n<h2>arguments of view_points and add_points</h2>\n<p><a class=\"reference internal\" href=\"../../api/stable/napari.view_layers.html#napari.view_layers.view_points\" title=\"napari.view_layers.view_points\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">view_points()</span></code></a> and <a class=\"reference internal\" href=\"../../api/stable/napari.Viewer.html#napari.Viewer.add_points\" title=\"napari.Viewer.add_points\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">add_points()</span></code></a>\naccept the same layer-creation parameters.</p>\n<div class=\"cell tag_hide-cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_points</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"points-data\">\n<h2>points data</h2>\n<p>The input data to the points layer must be an NxD numpy array containing the\ncoordinates of N points in D dimensions. The ordering of these dimensions is the\nsame as the ordering of the dimensions for image layers. This array is always\naccessible through the <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.data</span></code> property and will grow or shrink as new\npoints are either added or deleted.</p>\n</div>\n<div class=\"section\" id=\"using-the-points-properties-dictionary\">\n<h2>using the points properties dictionary</h2>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code> layer can contain properties that annotate each point.\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Points.properties</span></code> stores the properties in a dictionary where each key is the\nname of the property and the values are numpy arrays with a value for each point\n(i.e., length N for N points in <code class=\"docutils literal notranslate\"><span class=\"pre\">Points.data</span></code>). As we will see below, we can use\nthe values in a property to set the display properties of the points (e.g., face\ncolor or edge color). To see the points properties in action, please see the\n<a class=\"reference internal\" href=\"../applications/annotate_points.html\"><span class=\"doc std std-doc\">point annotation tutorial</span></a>.</p>\n</div>\n<div class=\"section\" id=\"creating-a-new-points-layer\">\n<h2>creating a new points layer</h2>\n<p>As you can add new points to a points layer using the add points tool, it is\npossible to create a brand new empty points layers by clicking the new points\nlayer button above the layers list. The shape of the points layer is defined by\nthe points inside it, and so as you add new points the shape will adjust as\nneeded. The dimension of the new points layer will default to the largest\ndimension of any layer currently in the viewer, or to 2 if no other layers are\npresent in the viewer.</p>\n</div>\n<div class=\"section\" id=\"non-editable-mode\">\n<h2>non-editable mode</h2>\n<p>If you want to disable editing of the points layer you can set the <code class=\"docutils literal notranslate\"><span class=\"pre\">editable</span></code>\nproperty of the layer to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>.</p>\n<p>As note in the section on 3D rendering, when using 3D rendering the points layer\nis not editable.</p>\n</div>\n<div class=\"section\" id=\"d-rendering-of-points\">\n<h2>3D rendering of points</h2>\n<p>All our layers can be rendered in both 2D and 3D mode, and one of our viewer\nbuttons can toggle between each mode. The number of dimensions sliders will be 2\nor 3 less than the total number of dimensions of the layer. See for example\nthese points overlaid on an image in both 2D and 3D:</p>\n<p><img alt=\"image: smFISH with points overlaid\" src=\"../../_images/smFISH.gif\"></p>\n<p>Note though that when entering 3D rendering mode the point add, delete, and\nselect tools are all disabled. Those options are only supported when viewing a\nlayer using 2D rendering.</p>\n</div>\n<div class=\"section\" id=\"pan-and-zoom-mode\">\n<h2>pan and zoom mode</h2>\n<p>The default mode of the points layer is to support panning and zooming, as in\nthe image layer. This mode is represented by the magnifying glass in the layers\ncontrol panel, and while it is selected editing the layer is not possible.\nContinue reading to learn how to use some of the editing modes. You can always\nreturn to pan and zoom mode by pressing the <code class=\"docutils literal notranslate\"><span class=\"pre\">Z</span></code> key when the points layer is\nselected.</p>\n</div>\n<div class=\"section\" id=\"adding-deleting-and-selecting-points\">\n<h2>adding, deleting, and selecting points</h2>\n<p>New points can be added using the point adding tool. This tool can be selected\nfrom layer controls panel. Points can then be added by clicking in the canvas.\nIf you have a multidimensional points layer then the coordinates of the new\npoint will keep track of the currently viewed slice that you added the point\ntoo. You can quickly select the add points tool by pressing the <code class=\"docutils literal notranslate\"><span class=\"pre\">P</span></code> key when the\npoints layer is selected. The point adding tool also supports panning and\nzooming.</p>\n<p>You can select a point by selecting the select points tool and then clicking on\nthat point. You can select multiple points by continuing to shift click on\nadditional points, or by dragging a bounding box around the points you want to\nselect. You can quickly select the select points tool by pressing the <code class=\"docutils literal notranslate\"><span class=\"pre\">S</span></code> key\nwhen the points layer is selected.</p>\n<p>You can select all the points in the currently viewed slice by clicking the <code class=\"docutils literal notranslate\"><span class=\"pre\">A</span></code>\nkey if you are in select mode.</p>\n<p>Once selected you can delete the selected points by clicking on the delete\nbutton in the layer controls panel or pressing the delete key.</p>\n<p>When using the point selection tool the pan and zoom functionality of the viewer\ncanvas is disabled and you are able to select points the layer. You can\ntemporarily re-enable pan and zoom by pressing and holding the spacebar. This\nfeature can be useful if you want to move around the points layer as you create\nyour selection.</p>\n</div>\n<div class=\"section\" id=\"changing-points-size\">\n<h2>changing points size</h2>\n<p>Each point can have a different size. You can pass a list or 1-dimensional array\nof points through the size keyword argument to initialize the layer with points\nof different sizes. These sizes are then accessible through the <code class=\"docutils literal notranslate\"><span class=\"pre\">sizes</span></code>\nproperty. If you pass a single size then all points will get initialized with\nthat size. Points can be pseduo-visualized as n-dimensionsal if the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">n-dimensional</span></code> property is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or the <code class=\"docutils literal notranslate\"><span class=\"pre\">n-dimensional</span></code> checkbox is\nchecked. In this setting when viewing different slices of the layer points will\nappear in the neighbouring slices to the ones in which they are located with a\nsize scaled by the distance from their center to that slice. This feature can be\nespecially useful when visualizing 2D slices of points that are located in a 3D\nvolume.</p>\n<p>Points can also be resized within the GUI by first selecting them and then\nadjusting the point size slider. If no points are selected, then adjusting the\nslider value will only serve to initialize the size for new points that are\nabout to be added. The value of the size of the next point to be added can be\nfound in the <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.size</span></code> property. Note this property is different from\n<code class=\"docutils literal notranslate\"><span class=\"pre\">layer.sizes</span></code> which contains the current sizes of all the points.</p>\n</div>\n<div class=\"section\" id=\"changing-points-edge-and-face-color\">\n<h2>changing points edge and face color</h2>\n<p>Individual points can each have different edge and face colors. You can\ninitially set these colors by providing a list of colors to the <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_color</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">face_color</span></code> keyword arguments respectively, or you can edit them from the GUI.\nThe colors of each of the points are available as lists under the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">layer.edge_colors</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.face_colors</span></code> properties. Similar to the <code class=\"docutils literal notranslate\"><span class=\"pre\">sizes</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">size</span></code> properties these properties are different from the <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.edge_color</span></code>\nand <code class=\"docutils literal notranslate\"><span class=\"pre\">layer.face_color</span></code> properties that will determine the color of the next\npoint to be added or any currently selected points.</p>\n<p>To change the point color properties from the GUI you must first select the\npoints whose properties you want to change, otherwise you will just be\ninitializing the property for the next point you add.</p>\n</div>\n<div class=\"section\" id=\"setting-point-edge-and-face-color-with-properties\">\n<h2>setting point edge and face color with properties</h2>\n<p>Point edge and face colors can be set as a function of a property in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Points.properties</span></code>. There are two ways that the values in properties can be\nmapped to colors: (1) color cycles and (2) colormaps.</p>\n<p>Color cycles are sets of colors that are mapped to categorical properties. The\ncolors are repeated if the number of unique property values is greater than the\nnumber of colors in the color cycle.</p>\n<p>Colormaps are a continuum of colors that are mapped to a continuous property\nvalue. The available colormaps are listed below (colormaps are from\n<a class=\"reference external\" href=\"http://vispy.org/color.html#vispy.color.Colormap\">vispy</a>). For some guidance on\nchoosing colormaps, see the <a class=\"reference external\" href=\"https://matplotlib.org/3.2.0/tutorials/colors/colormaps.html\">matplotlib colormap\ndocs</a>.</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">colormaps</span><span class=\"o\">.</span><span class=\"n\">AVAILABLE_COLORMAPS</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"setting-edge-or-face-color-with-a-color-cycle\">\n<h3>setting edge or face color with a color cycle</h3>\n<p>Here we will set the edge color of the markers with a color cycle on a property.\nTo do the same for a face color, substitute <code class=\"docutils literal notranslate\"><span class=\"pre\">face_color</span></code> for <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_color</span></code> in the\nexample snippet below.</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">astronaut</span><span class=\"p\">(),</span> <span class=\"n\">rgb</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">]])</span>\n<span class=\"n\">point_properties</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'good_point'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]),</span>\n    <span class=\"s1\">'confidence'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.99</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">]),</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">points_layer</span> <span class=\"o\">=</span> <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">add_points</span><span class=\"p\">(</span>\n    <span class=\"n\">points</span><span class=\"p\">,</span>\n    <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">point_properties</span><span class=\"p\">,</span>\n    <span class=\"n\">edge_color</span><span class=\"o\">=</span><span class=\"s1\">'good_point'</span><span class=\"p\">,</span>\n    <span class=\"n\">edge_color_cycle</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'magenta'</span><span class=\"p\">,</span> <span class=\"s1\">'green'</span><span class=\"p\">],</span>\n    <span class=\"n\">edge_width</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>In the example above, the properties (<code class=\"docutils literal notranslate\"><span class=\"pre\">point_properties</span></code>) were provided as a\ndictionary with two properties: <code class=\"docutils literal notranslate\"><span class=\"pre\">good_point</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">confidence</span></code>. The values of\neach property are stored in a numpy ndarray with length 3 since there were three\ncoordinates provided in <code class=\"docutils literal notranslate\"><span class=\"pre\">points</span></code>. We set the edge color as a function of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">good_point</span></code> property by providing the keyword argument\n<code class=\"docutils literal notranslate\"><span class=\"pre\">edge_color='good_point'</span></code> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.add_points()</span></code> method. We set the color\ncycle via the <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_color_cycle</span></code> keyword argument (<code class=\"docutils literal notranslate\"><span class=\"pre\">edge_color_cycle=['magenta',</span> <span class=\"pre\">'green']</span></code>). The color cycle can be provided as a list of colors (a list of\nstrings or a (M x 4) array of M RGBA colors).</p>\n</div>\n<div class=\"section\" id=\"setting-edge-or-face-color-with-a-colormap\">\n<h3>setting edge or face color with a colormap</h3>\n<p>Here we will set the face color of the markers with a color cycle on a property.\nTo do the same for a face color, substitute <code class=\"docutils literal notranslate\"><span class=\"pre\">edge_color</span></code> for <code class=\"docutils literal notranslate\"><span class=\"pre\">face_color</span></code> in the\nexample snippet below.</p>\n<div class=\"cell docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">viewer</span> <span class=\"o\">=</span> <span class=\"n\">napari</span><span class=\"o\">.</span><span class=\"n\">view_image</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">astronaut</span><span class=\"p\">(),</span> <span class=\"n\">rgb</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">]])</span>\n<span class=\"n\">point_properties</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'good_point'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">]),</span>\n    <span class=\"s1\">'confidence'</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.99</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">]),</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">points_layer</span> <span class=\"o\">=</span> <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">add_points</span><span class=\"p\">(</span>\n    <span class=\"n\">points</span><span class=\"p\">,</span>\n    <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">point_properties</span><span class=\"p\">,</span>\n    <span class=\"n\">face_color</span><span class=\"o\">=</span><span class=\"s1\">'confidence'</span><span class=\"p\">,</span>\n    <span class=\"n\">face_colormap</span><span class=\"o\">=</span><span class=\"s1\">'viridis'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"cell tag_hide-input docutils container\">\n<div class=\"cell_input docutils container\">\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">nbscreenshot</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>\n</div>\n<p>In the example above, the properties (<code class=\"docutils literal notranslate\"><span class=\"pre\">point_properties</span></code>) were provided as a\ndictionary with two properties: <code class=\"docutils literal notranslate\"><span class=\"pre\">good_point</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">confidence</span></code>. The values of\neach property are stored in a numpy ndarray with length 3 since there were three\ncoordinates provided in <code class=\"docutils literal notranslate\"><span class=\"pre\">points</span></code>. We set the face color as a function of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">confidence</span></code> property by providing the keyword argument\n<code class=\"docutils literal notranslate\"><span class=\"pre\">face_color='confidence'</span></code> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.add_points()</span></code> method. We set the\ncolormap to viridis using the <code class=\"docutils literal notranslate\"><span class=\"pre\">face_colormap</span></code> keyword argument\n(<code class=\"docutils literal notranslate\"><span class=\"pre\">face_colormap='viridis'</span></code>).</p>\n</div>\n</div>\n<div class=\"section\" id=\"changing-the-points-symbol\">\n<h2>changing the points symbol</h2>\n<p>The symbol for the points layer is a global property for the layer. All points\nmust have the same symbol. You can set the symbol on the loading of the layer\nusing the <code class=\"docutils literal notranslate\"><span class=\"pre\">symbol</span></code> keyword argument, or you can change it from the the GUI using\nthe symbol dropdown menu. Since the symbol property applies to all the points\nyou don’t need to have any points selected for it to have an effect.</p>\n</div>\n<div class=\"section\" id=\"copying-and-pasting-points\">\n<h2>copying and pasting points</h2>\n<p>It is possible to copy and paste any selected points using the <code class=\"docutils literal notranslate\"><span class=\"pre\">ctrl-C</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ctrl-V</span></code> keybindings, respectively. If you have a multidimensional <code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code>\nlayer you can copy points from one slice to another by pasting them into the new\nslice. The coordinates of the points in the visible dimensions will be in the\nsame place on the new slice as in the old slice, but the rest of the coordinates\nwill be updated with the new slice values.</p>\n</div>\n<div class=\"section\" id=\"layer-visibility\">\n<h2>layer visibility</h2>\n<p>All our layers support a visibility toggle that allows you to set the <code class=\"docutils literal notranslate\"><span class=\"pre\">visible</span></code>\nproperty of each layer. This property is located inside the layer widget in the\nlayers list and is represented by an eye icon.</p>\n</div>\n<div class=\"section\" id=\"layer-opacity\">\n<h2>layer opacity</h2>\n<p>All our layers support an opacity slider and <code class=\"docutils literal notranslate\"><span class=\"pre\">opacity</span></code> property that allow you\nto adjust the layer opacity between 0, fully invisible, and 1, fully visible.\nThe opacity value applies globally to all the points in the layer, and so you\ndon’t need to have any points selected for it to have an effect.</p>\n</div>\n<div class=\"section\" id=\"blending-layers\">\n<h2>blending layers</h2>\n<p>All our layers support three blending modes <code class=\"docutils literal notranslate\"><span class=\"pre\">translucent</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">additive</span></code>, and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">opaque</span></code> that determine how the visuals for this layer get mixed with the\nvisuals from the other layers.</p>\n<p>An <code class=\"docutils literal notranslate\"><span class=\"pre\">opaque</span></code> layer renders all the other layers below it invisible and will fade\nto black as you decrease its opacity.</p>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">translucent</span></code> setting will cause the layer to blend with the layers below it\nif you decrease its opacity but will fully block those layers if its opacity is</p>\n<ol class=\"simple\">\n<li><p>This is a reasonable default, useful for many applications.</p></li>\n</ol>\n<p>The final blending mode <code class=\"docutils literal notranslate\"><span class=\"pre\">additive</span></code> will cause the layer to blend with the layers\nbelow even when it has full opacity. This mode is especially useful for\nvisualizing multiple layers at the same time.</p>\n</div>\n<div class=\"section\" id=\"naming-layers\">\n<h2>naming layers</h2>\n<p>All our layers support a <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> property that can be set inside a text box\ninside the layer widget in the layers list. The name of each layer is forced\ninto being unique so that you can use the name to index into <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer.layers</span></code> to\nretrieve the layer object.</p>\n</div>\n<div class=\"section\" id=\"scaling-layers\">\n<h2>scaling layers</h2>\n<p>All our layers support a <code class=\"docutils literal notranslate\"><span class=\"pre\">scale</span></code> property and keyword argument that will rescale\nthe layer multiplicatively according to the scale values (one for each\ndimension). This property can be particularly useful for viewing anisotropic\ndata where the size of the voxel in the z dimension might be different then the\nsize in the x and y dimensions.</p>\n</div>\n<div class=\"section\" id=\"translating-layers\">\n<h2>translating layers</h2>\n<p>All our layers support a <code class=\"docutils literal notranslate\"><span class=\"pre\">translate</span></code> property and keyword argument that you can\nuse to offset a layer relative to the other layers, which could be useful if you\nare trying to overlay two layers for image registration purposes.</p>\n</div>\n<div class=\"section\" id=\"layer-metadata\">\n<h2>layer metadata</h2>\n<p>All our layers also support a <code class=\"docutils literal notranslate\"><span class=\"pre\">metadata</span></code> property and keyword argument that you\ncan use to store an arbitrary metadata dictionary on the layer.</p>\n</div>\n<div class=\"section\" id=\"putting-it-all-together\">\n<h2>putting it all together</h2>\n<p>Here you can see an example of adding, selecting, deleting points and change\ntheir properties:</p>\n<p><img alt=\"image: editing points\" src=\"../../_images/editing_points.gif\"></p>\n</div>\n<div class=\"section\" id=\"next-steps\">\n<h2>next steps</h2>\n<p>Hopefully, this tutorial has given you a detailed understanding of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Points</span></code>\nlayer, including how to create one and control its properties. To learn more\nabout some of the other layer types that <strong>napari</strong> supports checkout some more\nof our tutorials listed below. The <a class=\"reference internal\" href=\"shapes.html\"><span class=\"doc std std-doc\">shapes layer</span></a> tutorial is a great\none to try next as it describes more complex shapes and interactivity.</p>\n</div>\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./tutorials/fundamentals\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[{"href":"#a-simple-example","text":"a simple example"},{"href":"#arguments-of-view-points-and-add-points","text":"arguments of view_points and add_points"},{"href":"#points-data","text":"points data"},{"href":"#using-the-points-properties-dictionary","text":"using the points properties dictionary"},{"href":"#creating-a-new-points-layer","text":"creating a new points layer"},{"href":"#non-editable-mode","text":"non-editable mode"},{"href":"#d-rendering-of-points","text":"3D rendering of points"},{"href":"#pan-and-zoom-mode","text":"pan and zoom mode"},{"href":"#adding-deleting-and-selecting-points","text":"adding, deleting, and selecting points"},{"href":"#changing-points-size","text":"changing points size"},{"href":"#changing-points-edge-and-face-color","text":"changing points edge and face color"},{"href":"#setting-point-edge-and-face-color-with-properties","text":"setting point edge and face color with properties"},{"href":"#changing-the-points-symbol","text":"changing the points symbol"},{"href":"#copying-and-pasting-points","text":"copying and pasting points"},{"href":"#layer-visibility","text":"layer visibility"},{"href":"#layer-opacity","text":"layer opacity"},{"href":"#blending-layers","text":"blending layers"},{"href":"#naming-layers","text":"naming layers"},{"href":"#scaling-layers","text":"scaling layers"},{"href":"#translating-layers","text":"translating layers"},{"href":"#layer-metadata","text":"layer metadata"},{"href":"#putting-it-all-together","text":"putting it all together"},{"href":"#next-steps","text":"next steps"}]}},"__N_SSG":true}