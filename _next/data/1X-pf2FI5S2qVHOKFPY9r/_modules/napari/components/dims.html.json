{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release Guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer Guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing Guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/perfmon.html","/guides/stable/rendering.html","/guides/stable/docker.html","/guides/stable/performance.html","/guides/stable/magicgui.html","/guides/stable/translations.html","/guides/stable/rendering-explanation.html","/guides/stable/connecting_events.html","/guides/stable/connecting_events.html#long-running-blocking-functions","/guides/stable/3D_interactivity.html"],"href":"/guides/stable/index.html","text":"Developer guides"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/connecting_events.html#long-running-blocking-functions":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html#long-running-blocking-functions","text":"Long-running, blocking functions"},"/guides/stable/connecting_events.html":{"level":2,"children":[],"href":"/guides/stable/connecting_events.html","text":"Hooking up your own events"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/translations.html":{"level":2,"children":[],"href":"/guides/stable/translations.html","text":"Translations"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"Napari Performance"},"/guides/stable/docker.html":{"level":2,"children":[],"href":"/guides/stable/docker.html","text":"Napari in Docker (WIP)"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous Rendering"},"/guides/stable/perfmon.html":{"level":2,"children":[],"href":"/guides/stable/perfmon.html","text":"Performance Monitoring"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An Introduction to the Event Loop in napari"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/release/index.html":{"level":1,"children":["/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html","/release/release_0_4_11.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/for_napari_developers.html","/plugins/stable/for_plugin_developers.html","/plugins/stable/hook_specifications.html","/plugins/stable/find-and-install-plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find-and-install-plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find-and-install-plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/hook_specifications.html":{"level":2,"children":[],"href":"/plugins/stable/hook_specifications.html","text":"napari hook specification reference"},"/plugins/stable/for_plugin_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_plugin_developers.html","text":"creating a napari plugin"},"/plugins/stable/for_napari_developers.html":{"level":2,"children":[],"href":"/plugins/stable/for_napari_developers.html","text":"napari plugin architecture"},"/tutorials/index.html":{"level":1,"children":["/tutorials/fundamentals/index.html","/tutorials/applications/index.html","/tutorials/further-resources/napari-workshops.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/index.html":{"level":2,"children":["/tutorials/applications/annotate_segmentation.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/applications/napari_imageJ.html","/tutorials/applications/cell_tracking.html"],"href":"/tutorials/applications/index.html","text":"Applications"},"/tutorials/applications/cell_tracking.html":{"level":3,"children":[],"href":"/tutorials/applications/cell_tracking.html","text":"single cell tracking with napari"},"/tutorials/applications/napari_imageJ.html":{"level":3,"children":[],"href":"/tutorials/applications/napari_imageJ.html","text":"Napari + ImageJ How-to-Guide"},"/tutorials/applications/dask.html":{"level":3,"children":[],"href":"/tutorials/applications/dask.html","text":"using dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"annotating videos with napari"},"/tutorials/applications/annotate_segmentation.html":{"level":3,"children":[],"href":"/tutorials/applications/annotate_segmentation.html","text":"annotating segmentation with text and bounding boxes"},"/tutorials/fundamentals/index.html":{"level":2,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/fundamentals/index.html","text":"Fundamentals"},"/tutorials/fundamentals/vectors.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":3,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"napari installation tutorial"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html"],"href":"/community/index.html","text":"Community"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance Model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct Reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the Project and Team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"}},"rootGlobalHeaders":["/community/index.html","/tutorials/index.html","/plugins/stable/index.html","/release/index.html","/api/stable/index.html","/roadmaps/index.html","/guides/stable/index.html","/developers/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Source code for napari.components.dims","pageFrontMatter":{},"appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../../\"></div>\n        <div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Sequence</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">root_validator</span><span class=\"p\">,</span> <span class=\"n\">validator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing_extensions</span> <span class=\"kn\">import</span> <span class=\"n\">Literal</span>  <span class=\"c1\"># Added to typing in 3.8</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">..utils.events</span> <span class=\"kn\">import</span> <span class=\"n\">EventedModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">..utils.translations</span> <span class=\"kn\">import</span> <span class=\"n\">trans</span>\n\n\n<div class=\"viewcode-block\" id=\"Dims\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.components.Dims.html#napari.components.Dims\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Dims</span><span class=\"p\">(</span><span class=\"n\">EventedModel</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Dimensions object modeling slicing and displaying.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    ndim : int</span>\n<span class=\"sd\">        Number of dimensions.</span>\n<span class=\"sd\">    ndisplay : int</span>\n<span class=\"sd\">        Number of displayed dimensions.</span>\n<span class=\"sd\">    last_used : int</span>\n<span class=\"sd\">        Dimension which was last used.</span>\n<span class=\"sd\">    range : tuple of 3-tuple of float</span>\n<span class=\"sd\">        List of tuples (min, max, step), one for each dimension. In a world</span>\n<span class=\"sd\">        coordinates space.</span>\n<span class=\"sd\">    current_step : tuple of int</span>\n<span class=\"sd\">        Tuple the slider position for each dims slider, in slider coordinates.</span>\n<span class=\"sd\">    order : tuple of int</span>\n<span class=\"sd\">        Tuple of ordering the dimensions, where the last dimensions are rendered.</span>\n<span class=\"sd\">    axis_labels : tuple of str</span>\n<span class=\"sd\">        Tuple of labels for each dimension.</span>\n\n<span class=\"sd\">    Attributes</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    ndim : int</span>\n<span class=\"sd\">        Number of dimensions.</span>\n<span class=\"sd\">    ndisplay : int</span>\n<span class=\"sd\">        Number of displayed dimensions.</span>\n<span class=\"sd\">    last_used : int</span>\n<span class=\"sd\">        Dimension which was last used.</span>\n<span class=\"sd\">    range : tuple of 3-tuple of float</span>\n<span class=\"sd\">        List of tuples (min, max, step), one for each dimension. In a world</span>\n<span class=\"sd\">        coordinates space.</span>\n<span class=\"sd\">    current_step : tuple of int</span>\n<span class=\"sd\">        Tuple the slider position for each dims slider, in slider coordinates.</span>\n<span class=\"sd\">    order : tuple of int</span>\n<span class=\"sd\">        Tuple of ordering the dimensions, where the last dimensions are rendered.</span>\n<span class=\"sd\">    axis_labels : tuple of str</span>\n<span class=\"sd\">        Tuple of labels for each dimension.</span>\n<span class=\"sd\">    nsteps : tuple of int</span>\n<span class=\"sd\">        Number of steps available to each slider. These are calculated from</span>\n<span class=\"sd\">        the ``range``.</span>\n<span class=\"sd\">    point : tuple of float</span>\n<span class=\"sd\">        List of floats setting the current value of the range slider when in</span>\n<span class=\"sd\">        POINT mode, one for each dimension. In a world coordinates space. These</span>\n<span class=\"sd\">        are calculated from the ``current_step`` and ``range``.</span>\n<span class=\"sd\">    displayed : tuple of int</span>\n<span class=\"sd\">        List of dimensions that are displayed. These are calculated from the</span>\n<span class=\"sd\">        ``order`` and ``ndisplay``.</span>\n<span class=\"sd\">    not_displayed : tuple of int</span>\n<span class=\"sd\">        List of dimensions that are not displayed. These are calculated from the</span>\n<span class=\"sd\">        ``order`` and ``ndisplay``.</span>\n<span class=\"sd\">    displayed_order : tuple of int</span>\n<span class=\"sd\">        Order of only displayed dimensions. These are calculated from the</span>\n<span class=\"sd\">        ``displayed`` dimensions.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"c1\"># fields</span>\n    <span class=\"n\">ndim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">ndisplay</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">last_used</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">range</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n    <span class=\"n\">current_step</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n    <span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n    <span class=\"n\">axis_labels</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>\n\n    <span class=\"c1\"># private vars</span>\n    <span class=\"n\">_scroll_progress</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n    <span class=\"c1\"># validators</span>\n    <span class=\"nd\">@validator</span><span class=\"p\">(</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">,</span> <span class=\"n\">pre</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_string_to_list</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">v</span>\n\n    <span class=\"nd\">@root_validator</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_check_dims</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Check the consitency of dimensionaity for all attributes</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        values : dict</span>\n<span class=\"sd\">            Values dictionary to update dims model with.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">ndim</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'ndim'</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># Check the range tuple has same number of elements as ndim</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),)</span> <span class=\"o\">*</span> <span class=\"p\">(</span>\n                <span class=\"n\">ndim</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">])</span>\n            <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'range'</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"n\">ndim</span><span class=\"p\">:]</span>\n\n        <span class=\"c1\"># Check the current step tuple has same number of elements as ndim</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,)</span> <span class=\"o\">*</span> <span class=\"p\">(</span>\n                <span class=\"n\">ndim</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">])</span>\n            <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">]</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'current_step'</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"n\">ndim</span><span class=\"p\">:]</span>\n\n        <span class=\"c1\"># Check the order tuple has same number of elements as ndim</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span>\n                <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ndim</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">]))</span>\n            <span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">o</span> <span class=\"o\">+</span> <span class=\"n\">ndim</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">])</span> <span class=\"k\">for</span> <span class=\"n\">o</span> <span class=\"ow\">in</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">])</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">reorder_after_dim_reduction</span><span class=\"p\">(</span>\n                <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"n\">ndim</span><span class=\"p\">:]</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Check the order is a permutation of 0, ..., ndim - 1</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">])</span> <span class=\"o\">==</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ndim</span><span class=\"p\">)):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span>\n                <span class=\"n\">trans</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"p\">(</span>\n                    <span class=\"s2\">\"Invalid ordering </span><span class=\"si\">{order}</span><span class=\"s2\"> for </span><span class=\"si\">{ndim}</span><span class=\"s2\"> dimensions\"</span><span class=\"p\">,</span>\n                    <span class=\"n\">deferred</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'order'</span><span class=\"p\">],</span>\n                    <span class=\"n\">ndim</span><span class=\"o\">=</span><span class=\"n\">ndim</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Check the axis labels tuple has same number of elements as ndim</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Append new \"default\" labels to existing ones</span>\n            <span class=\"k\">if</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span>\n                <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">])))</span>\n            <span class=\"p\">):</span>\n                <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ndim</span><span class=\"p\">)))</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n                    <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">ndim</span> <span class=\"o\">-</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">]))))</span>\n                    <span class=\"o\">+</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">]</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">])</span> <span class=\"o\">&gt;</span> <span class=\"n\">ndim</span><span class=\"p\">:</span>\n            <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">values</span><span class=\"p\">[</span><span class=\"s1\">'axis_labels'</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"n\">ndim</span><span class=\"p\">:]</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">values</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">nsteps</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\"Tuple of int: Number of slider steps for each dimension.\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span>\n            <span class=\"nb\">int</span><span class=\"p\">((</span><span class=\"n\">max_val</span> <span class=\"o\">-</span> <span class=\"n\">min_val</span><span class=\"p\">)</span> <span class=\"o\">//</span> <span class=\"n\">step_size</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n            <span class=\"k\">for</span> <span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">,</span> <span class=\"n\">step_size</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\"Tuple of float: Value of each dimension.\"\"\"</span>\n        <span class=\"c1\"># The point value is computed from the range and current_step</span>\n        <span class=\"n\">point</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span>\n            <span class=\"n\">min_val</span> <span class=\"o\">+</span> <span class=\"n\">step_size</span> <span class=\"o\">*</span> <span class=\"n\">value</span>\n            <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">,</span> <span class=\"n\">step_size</span><span class=\"p\">),</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">point</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">displayed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\"Tuple: Dimensions that are displayed.\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndisplay</span> <span class=\"p\">:]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">not_displayed</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\"Tuple: Dimensions that are not displayed.\"\"\"</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span><span class=\"p\">[:</span> <span class=\"o\">-</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndisplay</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">displayed_order</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]:</span>\n        <span class=\"sd\">\"\"\"Tuple: Order of only displayed dimensions.\"\"\"</span>\n        <span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">displayed</span><span class=\"p\">)</span>\n        <span class=\"n\">order</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">)))</span>\n        <span class=\"k\">return</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Dims.set_range\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.components.Dims.html#napari.components.Dims.set_range\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">_range</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]):</span>\n        <span class=\"sd\">\"\"\"Sets the range (min, max, step) for a given dimension.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        axis : int</span>\n<span class=\"sd\">            Dimension index.</span>\n<span class=\"sd\">        _range : tuple</span>\n<span class=\"sd\">            Range specified as (min, max, step).</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">assert_axis_in_bounds</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">_range</span><span class=\"p\">:</span>\n            <span class=\"n\">full_range</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"p\">)</span>\n            <span class=\"n\">full_range</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">_range</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span> <span class=\"o\">=</span> <span class=\"n\">full_range</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span> <span class=\"o\">=</span> <span class=\"n\">axis</span></div>\n\n<div class=\"viewcode-block\" id=\"Dims.set_point\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.components.Dims.html#napari.components.Dims.set_point\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_point</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]):</span>\n        <span class=\"sd\">\"\"\"Sets point to slice dimension in world coordinates.</span>\n\n<span class=\"sd\">        The desired point gets transformed into an integer step</span>\n<span class=\"sd\">        of the slider and stored in the current_step.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        axis : int</span>\n<span class=\"sd\">            Dimension index.</span>\n<span class=\"sd\">        value : int or float</span>\n<span class=\"sd\">            Value of the point.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">assert_axis_in_bounds</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">)</span>\n        <span class=\"p\">(</span><span class=\"n\">min_val</span><span class=\"p\">,</span> <span class=\"n\">max_val</span><span class=\"p\">,</span> <span class=\"n\">step_size</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span>\n        <span class=\"n\">raw_step</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">value</span> <span class=\"o\">-</span> <span class=\"n\">min_val</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">step_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_current_step</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"n\">raw_step</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Dims.set_current_step\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.components.Dims.html#napari.components.Dims.set_current_step\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_current_step</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Sets the slider step at which to slice this dimension.</span>\n\n<span class=\"sd\">        The position of the slider in world coordinates gets</span>\n<span class=\"sd\">        calculated from the current_step of the slider.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        axis : int</span>\n<span class=\"sd\">            Dimension index.</span>\n<span class=\"sd\">        value : int or float</span>\n<span class=\"sd\">            Value of the point.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">assert_axis_in_bounds</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">)</span>\n        <span class=\"n\">step</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nsteps</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">step</span><span class=\"p\">:</span>\n            <span class=\"n\">full_current_step</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span><span class=\"p\">)</span>\n            <span class=\"n\">full_current_step</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">step</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span> <span class=\"o\">=</span> <span class=\"n\">full_current_step</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span> <span class=\"o\">=</span> <span class=\"n\">axis</span></div>\n\n<div class=\"viewcode-block\" id=\"Dims.set_axis_label\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.components.Dims.html#napari.components.Dims.set_axis_label\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_axis_label</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Sets a new axis label for the given axis.</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        axis : int</span>\n<span class=\"sd\">            Dimension index</span>\n<span class=\"sd\">        label : str</span>\n<span class=\"sd\">            Given label</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"n\">assert_axis_in_bounds</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axis_labels</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">):</span>\n            <span class=\"n\">full_axis_labels</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axis_labels</span><span class=\"p\">)</span>\n            <span class=\"n\">full_axis_labels</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">axis_labels</span> <span class=\"o\">=</span> <span class=\"n\">full_axis_labels</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span> <span class=\"o\">=</span> <span class=\"n\">axis</span></div>\n\n<div class=\"viewcode-block\" id=\"Dims.reset\"><a class=\"viewcode-back\" href=\"../../../api/stable/napari.components.Dims.html#napari.components.Dims.reset\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">reset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Reset dims values to initial states.\"\"\"</span>\n        <span class=\"c1\"># Don't reset axis labels</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">range</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),)</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,)</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">ndim</span><span class=\"p\">))</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_increment_dims_right</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Increment dimensions to the right along given axis, or last used axis if None</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        axis : int, optional</span>\n<span class=\"sd\">            Axis along which to increment dims, by default None</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">if</span> <span class=\"n\">axis</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_current_step</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_increment_dims_left</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Increment dimensions to the left along given axis, or last used axis if None</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        axis : int, optional</span>\n<span class=\"sd\">            Axis along which to increment dims, by default None</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"k\">if</span> <span class=\"n\">axis</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">axis</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">set_current_step</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">current_step</span><span class=\"p\">[</span><span class=\"n\">axis</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_focus_up</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Shift focused dimension slider to be the next slider above.\"\"\"</span>\n        <span class=\"n\">sliders</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">d</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">not_displayed</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nsteps</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sliders</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">sliders</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sliders</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span> <span class=\"o\">=</span> <span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_focus_down</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Shift focused dimension slider to be the next slider bellow.\"\"\"</span>\n        <span class=\"n\">sliders</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">d</span> <span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">not_displayed</span> <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nsteps</span><span class=\"p\">[</span><span class=\"n\">d</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sliders</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">sliders</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sliders</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_used</span> <span class=\"o\">=</span> <span class=\"n\">sliders</span><span class=\"p\">[</span><span class=\"n\">index</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_roll</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Roll order of dimensions for display.\"\"\"</span>\n        <span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span><span class=\"p\">)</span>\n        <span class=\"n\">nsteps</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">nsteps</span><span class=\"p\">)</span>\n        <span class=\"n\">order</span><span class=\"p\">[</span><span class=\"n\">nsteps</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">[</span><span class=\"n\">nsteps</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_transpose</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Transpose displayed dimensions.\"\"\"</span>\n        <span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span><span class=\"p\">)</span>\n        <span class=\"n\">order</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">order</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">order</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">order</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">order</span> <span class=\"o\">=</span> <span class=\"n\">order</span></div>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">reorder_after_dim_reduction</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Ensure current dimension order is preserved after dims are dropped.</span>\n\n<span class=\"sd\">    Parameters</span>\n<span class=\"sd\">    ----------</span>\n<span class=\"sd\">    order : tuple</span>\n<span class=\"sd\">        The data to reorder.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    arr : tuple</span>\n<span class=\"sd\">        The original array with the unneeded dimension</span>\n<span class=\"sd\">        thrown away.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">order</span><span class=\"p\">)</span>\n    <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">argsort</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)]</span> <span class=\"o\">=</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">())</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">assert_axis_in_bounds</span><span class=\"p\">(</span><span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">ndim</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Assert a given value is inside the existing axes of the image.</span>\n\n<span class=\"sd\">    Returns</span>\n<span class=\"sd\">    -------</span>\n<span class=\"sd\">    axis : int</span>\n<span class=\"sd\">        The axis which was checked for validity.</span>\n<span class=\"sd\">    ndim : int</span>\n<span class=\"sd\">        The dimensionality of the layer.</span>\n\n<span class=\"sd\">    Raises</span>\n<span class=\"sd\">    ------</span>\n<span class=\"sd\">    ValueError</span>\n<span class=\"sd\">        The given axis index is out of bounds.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">if</span> <span class=\"n\">axis</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">ndim</span><span class=\"p\">,</span> <span class=\"n\">ndim</span><span class=\"p\">):</span>\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">trans</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"p\">(</span>\n            <span class=\"s1\">'Axis </span><span class=\"si\">{axis}</span><span class=\"s1\"> not defined for dimensionality </span><span class=\"si\">{ndim}</span><span class=\"s1\">. Must be in [</span><span class=\"si\">{ndim_lower}</span><span class=\"s1\">, </span><span class=\"si\">{ndim}</span><span class=\"s1\">).'</span><span class=\"p\">,</span>\n            <span class=\"n\">deferred</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">axis</span><span class=\"o\">=</span><span class=\"n\">axis</span><span class=\"p\">,</span>\n            <span class=\"n\">ndim</span><span class=\"o\">=</span><span class=\"n\">ndim</span><span class=\"p\">,</span>\n            <span class=\"n\">ndim_lower</span><span class=\"o\">=-</span><span class=\"n\">ndim</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">axis</span> <span class=\"o\">%</span> <span class=\"n\">ndim</span>\n</pre></div>\n      ","pageHeaders":[]}},"__N_SSG":true}