{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/release/index.html":{"level":1,"children":["/release/release_0_4_12.html","/release/release_0_4_11.html","/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_4_12.html":{"level":2,"children":[],"href":"/release/release_0_4_12.html","text":"napari 0.4.12"},"/glossary.html":{"level":1,"children":[],"href":"/glossary.html","text":"Glossary"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html","/developers/translations.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/translations.html":{"level":2,"children":[],"href":"/developers/translations.html","text":"Translations"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html","/api/stable/napari.utils.progress.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.progress.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.progress.html","text":"napari.utils.progress"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html","/api/stable/napari.types.partial.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.partial.html":{"level":3,"children":[],"href":"/api/stable/napari.types.partial.html","text":"napari.types.partial"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html","/community/working_groups.html","/community/meeting_schedule.html"],"href":"/community/index.html","text":"Community"},"/community/meeting_schedule.html":{"level":2,"children":[],"href":"/community/meeting_schedule.html","text":"Meeting schedule"},"/community/working_groups.html":{"level":2,"children":[],"href":"/community/working_groups.html","text":"Working groups"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the project and team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/best_practices.html","/plugins/stable/npe2_migration_guide.html","/plugins/stable/guides.html","/plugins/stable/first_plugin.html","/plugins/stable/test_deploy.html","/plugins/stable/npe1.html","/plugins/stable/find_and_install_plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find_and_install_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find_and_install_plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/npe1.html":{"level":2,"children":[],"href":"/plugins/stable/npe1.html","text":"1st Gen Plugin Guide (Deprecated)"},"/plugins/stable/test_deploy.html":{"level":2,"children":[],"href":"/plugins/stable/test_deploy.html","text":"Test and Deploy"},"/plugins/stable/first_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/first_plugin.html","text":"Your First Plugin"},"/plugins/stable/guides.html":{"level":2,"children":[],"href":"/plugins/stable/guides.html","text":"Contribution Guides"},"/plugins/stable/npe2_migration_guide.html":{"level":2,"children":[],"href":"/plugins/stable/npe2_migration_guide.html","text":"npe2 migration guide"},"/plugins/stable/best_practices.html":{"level":2,"children":[],"href":"/plugins/stable/best_practices.html","text":"Best practices"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/magicgui.html","/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/rendering-explanation.html","/guides/stable/rendering.html","/guides/stable/performance.html","/guides/stable/3D_interactivity.html","/guides/stable/events_reference.html","/guides/stable/contexts_expressions.html"],"href":"/guides/stable/index.html","text":"In-depth explanations"},"/guides/stable/contexts_expressions.html":{"level":2,"children":[],"href":"/guides/stable/contexts_expressions.html","text":"Contexts and Expressions in napari"},"/guides/stable/events_reference.html":{"level":2,"children":[],"href":"/guides/stable/events_reference.html","text":"Events reference"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"napari performance"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous rendering"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An introduction to the event loop in napari"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/howtos/index.html":{"level":1,"children":["/howtos/connecting_events.html","/howtos/napari_imageJ.html","/howtos/docker.html","/howtos/perfmon.html"],"href":"/howtos/index.html","text":"How-to guides"},"/howtos/perfmon.html":{"level":2,"children":[],"href":"/howtos/perfmon.html","text":"Performance monitoring"},"/howtos/docker.html":{"level":2,"children":[],"href":"/howtos/docker.html","text":"Napari in Docker"},"/howtos/napari_imageJ.html":{"level":2,"children":[],"href":"/howtos/napari_imageJ.html","text":"napari + ImageJ how-to guide"},"/howtos/connecting_events.html":{"level":2,"children":[],"href":"/howtos/connecting_events.html","text":"Hooking up your own events"},"/tutorials/index.html":{"level":1,"children":["/tutorials/segmentation/index.html","/tutorials/tracking/index.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/further-resources/napari-workshops.html","/tutorials/tracking/cell_tracking.html","/tutorials/segmentation/annotate_segmentation.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/segmentation/annotate_segmentation.html":{"level":2,"children":[],"href":"/tutorials/segmentation/annotate_segmentation.html","text":"Annotating segmentation with text and bounding boxes"},"/tutorials/tracking/cell_tracking.html":{"level":2,"children":[],"href":"/tutorials/tracking/cell_tracking.html","text":"Single cell tracking with napari"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/dask.html":{"level":2,"children":[],"href":"/tutorials/applications/dask.html","text":"Using Dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":2,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"Annotating videos with napari"},"/tutorials/tracking/index.html":{"level":2,"children":[],"href":"/tutorials/tracking/index.html","text":"Tracking"},"/tutorials/segmentation/index.html":{"level":2,"children":[],"href":"/tutorials/segmentation/index.html","text":"Segmentation"},"/tutorials/start_index.html":{"level":1,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/start_index.html","text":"Getting Started"},"/tutorials/fundamentals/vectors.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"Getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"How to install napari on your machine"}},"rootGlobalHeaders":["/tutorials/start_index.html","/tutorials/index.html","/howtos/index.html","/guides/stable/index.html","/plugins/stable/index.html","/community/index.html","/api/stable/index.html","/developers/index.html","/glossary.html","/release/index.html","/roadmaps/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"Contexts and Expressions in napari","pageFrontMatter":{},"previewImage":"../../_images/context_type_hint.png","previewDescription":"Note","appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"contexts-and-expressions-in-napari\">\n<span id=\"context-expressions\"></span>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>This page is mostly aimed at developers who are interested in contributing to\nor understanding the inner workings of napari.  While the concept of expressions\n<em>will</em> be relevant for plugin developers writing plugin manifests, it won’t be\nnecessary for plugin devs or end-users to understand the implementation details\ndescribed on this page.</p>\n</div>\n<p>In napari, we’d like to be able to capture the <em>concept</em> of some condition being\n<code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>, <em>prior</em> to actually having the context required to evaluate\nit.  For example, a plugin (or napari itself) might want to stipulate that a\ngiven function should only be enabled when “the active layer has at least 3\ndimensions”.</p>\n<p>At runtime, in Python code, this might be captured by the expression:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">selection</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">ndim</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span>\n</pre></div>\n</div>\n<p>However, if you don’t have access to an actual <code class=\"docutils literal notranslate\"><span class=\"pre\">viewer</span></code> instance, that\ndoesn’t work.</p>\n<p><em>Contexts</em> and <em>Expressions</em> are two concepts being introduced along with the\nsecond-generation napari plugin engine (npe2) that capture the abstract idea of\n“some condition” (an <code class=\"docutils literal notranslate\"><span class=\"pre\">Expression</span></code>) that can be evaluated at some later time,\nwith a concrete set of keys and values (the <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code>).</p>\n<div class=\"section\" id=\"python-expressions\">\n<h2>Python expressions<a class=\"headerlink\" href=\"#python-expressions\" title=\"Permalink to this headline\">¶</a></h2>\n<p>In Python, <strong>expressions</strong> are simple combinations of <strong>values</strong> and\n<strong>operations</strong> that can be reduced to a single value. For example, <code class=\"docutils literal notranslate\"><span class=\"pre\">1</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">5</span></code> is an\nexpression that always reduces to the value <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> when evaluated.  <code class=\"docutils literal notranslate\"><span class=\"pre\">x</span> <span class=\"pre\">&gt;</span> <span class=\"pre\">5</span> <span class=\"pre\">and</span> <span class=\"pre\">y</span> <span class=\"pre\">==</span> <span class=\"pre\">'hello'</span></code> is also an expression that reduces to a boolean value; however, in\norder to evaluate that expression, we need to be able to fill in the values for\nthe variable <strong>names</strong> “<code class=\"docutils literal notranslate\"><span class=\"pre\">x</span></code>” and “<code class=\"docutils literal notranslate\"><span class=\"pre\">y</span></code>”. Those values are provided by some\n<strong>context</strong> (or “namespace”), which maps the variable names to their values.</p>\n<p>The value of an <code class=\"docutils literal notranslate\"><span class=\"pre\">expression</span></code> depends on the context in which it is evaluated.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"s2\">\"x &gt; 5 and y == 'hello'\"</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">context_a</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">}</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">context_b</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"s1\">'howdie!'</span><span class=\"p\">}</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">context_a</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"kc\">True</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"p\">,</span> <span class=\"n\">context_b</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"napari-expressions\">\n<h2>Napari expressions<a class=\"headerlink\" href=\"#napari-expressions\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Napari introduces <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr</span></code> objects that represent an\nexpression “without a context”, to be evaluated later.</p>\n<div class=\"admonition tip\">\n<p class=\"admonition-title\">Tip</p>\n<p>napari’s <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr</span></code> class subclasses from\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/ast.html#ast.AST\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ast.AST</span></code></a> and shares many\nsimilarities with the <code class=\"docutils literal notranslate\"><span class=\"pre\">body</span></code> of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/ast.html#ast.Expr\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ast.Expr</span></code></a>. However, for\nthe sake of evaluation safety, napari’s <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr</span></code> only supports a subset of\noperations, omitting things like function calls, generators, comprehensions, and\ncollections. It’s not important to fully understand ASTs to use napari\nexpressions, but for a good introduction to Python’s abstract syntax tree (AST)\nmodule, see <a class=\"reference external\" href=\"https://greentreesnakes.readthedocs.io\" target=\"_blank\" rel=\"noreferrer\">https://greentreesnakes.readthedocs.io</a>.</p>\n</div>\n<p>A string expression can be converted to a napari <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr</span></code> object with the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">parse_expression</span></code> function:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">napari.utils.context</span> <span class=\"kn\">import</span> <span class=\"n\">parse_expression</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">expr</span> <span class=\"o\">=</span> <span class=\"n\">parse_expression</span><span class=\"p\">(</span><span class=\"s2\">\"x &gt; 5 and y == 'hello'\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">expr</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span>\n<span class=\"n\">BoolOp</span><span class=\"p\">(</span>\n  <span class=\"n\">op</span><span class=\"o\">=</span><span class=\"n\">And</span><span class=\"p\">(),</span>\n  <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">Compare</span><span class=\"p\">(</span>\n      <span class=\"n\">left</span><span class=\"o\">=</span><span class=\"n\">Name</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'x'</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"o\">=</span><span class=\"n\">Load</span><span class=\"p\">()),</span>\n      <span class=\"n\">ops</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Gt</span><span class=\"p\">()],</span>\n      <span class=\"n\">comparators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Constant</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)]</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">Compare</span><span class=\"p\">(</span>\n      <span class=\"n\">left</span><span class=\"o\">=</span><span class=\"n\">Name</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'y'</span><span class=\"p\">,</span> <span class=\"n\">ctx</span><span class=\"o\">=</span><span class=\"n\">Load</span><span class=\"p\">()),</span>\n      <span class=\"n\">ops</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Eq</span><span class=\"p\">()],</span>\n      <span class=\"n\">comparators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Constant</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'hello'</span><span class=\"p\">)]</span>\n    <span class=\"p\">)</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The expression object can be evaluated by passing a context (a Mapping) to\nits <code class=\"docutils literal notranslate\"><span class=\"pre\">eval</span></code> method:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">({</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">})</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"kc\">True</span>\n</pre></div>\n</div>\n<p>and it can also be combined with other expressions and/or constants using\n<strong>operators</strong>:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">new_expr</span> <span class=\"o\">=</span> <span class=\"n\">expr</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"mi\">7</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># always False</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">new_expr</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">({</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"s1\">'hello'</span><span class=\"p\">})</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"n\">operators</span> <span class=\"n\">are</span> <span class=\"n\">supported</span><span class=\"p\">:</span>\n\n</pre></div>\n</div>\n<table class=\"colwidths-auto docutils align-default\">\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Operator</p></th>\n<th class=\"head\"><p>Symbol</p></th>\n<th class=\"head\"><p>Example</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p>Equality</p></td>\n<td><p>==</p></td>\n<td><p>“active_layer_type == image”</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p>Inequality</p></td>\n<td><p>!=</p></td>\n<td><p>“active_layer_type != labels”</p></td>\n</tr>\n<tr class=\"row-even\"><td><p>Or</p></td>\n<td><p>|</p></td>\n<td><p>“active_layer_is_rgb | all_layers_same_shape”</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p>And</p></td>\n<td><p>&amp;</p></td>\n<td><p>“active_layer_is_rgb &amp; all_layers_same_shape”</p></td>\n</tr>\n<tr class=\"row-even\"><td><p>Not</p></td>\n<td><p>~</p></td>\n<td><p>~active_layer_is_rgb</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p>Greater than</p></td>\n<td><p>&gt; &gt;=</p></td>\n<td><p>“unselected_linked_layers &gt;= 1”</p></td>\n</tr>\n<tr class=\"row-even\"><td><p>Less than</p></td>\n<td><p>&lt; &lt;=</p></td>\n<td><p>“layers_selection_count &lt; 2”</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p>Math</p></td>\n<td><p>+ - * /</p></td>\n<td><p>“layers_selection_count + unselected_linked_layers”</p></td>\n</tr>\n</tbody>\n</table>\n<div class=\"section\" id=\"napari-context-keys\">\n<h3>napari context keys<a class=\"headerlink\" href=\"#napari-context-keys\" title=\"Permalink to this headline\">¶</a></h3>\n<p>To capture napari-specific conditions, napari will declare special\n<strong>names</strong> that can be used in a napari expression.  Taking the example above, a\nplugin might only want to provide a function if “the active layer has at least 3\ndimensions”. For this, napari recognizes the name <code class=\"docutils literal notranslate\"><span class=\"pre\">\"active_layer_ndim\"</span></code> used\nin an expression. In a plugin manifest, the plugin can provide a <em>when clause</em>\nto enable/disable a given command:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">command</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">myplugin.my_command</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">when</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">active_layer_ndim &gt;= 3</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>Some example context key names (currently) include:</p>\n<table class=\"colwidths-auto docutils align-default\">\n<thead>\n<tr class=\"row-odd\"><th class=\"head\"><p>Name</p></th>\n<th class=\"head\"><p>Description</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"row-even\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">layers_selection_count</span></code></p></td>\n<td><p>Number of layers currently selected</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">all_layers_linked</span></code></p></td>\n<td><p>True when all selected layers are linked</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">active_layer_is_rgb</span></code></p></td>\n<td><p>True when the active layer is RGB</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">active_layer_type</span></code></p></td>\n<td><p>Lowercase name of active layer type, or None if no layer is active.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">only_images_selected</span></code></p></td>\n<td><p>True when there is at least one selected layer and all selected layers are images</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"docutils literal notranslate\"><span class=\"pre\">active_layer_ndim</span></code></p></td>\n<td><p>Number of dimensions in the active layer, or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if nothing is active</p></td>\n</tr>\n</tbody>\n</table>\n<p>…  many more</p>\n</div>\n<div class=\"section\" id=\"contextkey-objects\">\n<h3><code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> objects<a class=\"headerlink\" href=\"#contextkey-objects\" title=\"Permalink to this headline\">¶</a></h3>\n<p>To track the special <strong>name</strong> strings that can be used in expressions, napari\nhas the <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> class.  Instances of <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> subclass from\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/ast.html#ast.Name\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ast.Name</span></code></a> and represent\na variable name in an expression. Additionally, they have a <code class=\"docutils literal notranslate\"><span class=\"pre\">description</span></code> that\ncan be used in documentation, a <code class=\"docutils literal notranslate\"><span class=\"pre\">default_value</span></code>, and a <code class=\"docutils literal notranslate\"><span class=\"pre\">getter</span></code> function that\ncan be called to retrieve the current value (the parameters passed to the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">getter</span></code> will depend on the context key… see <a class=\"reference external\" href=\"#updating-contexts\" target=\"_blank\" rel=\"noreferrer\">Updating\nContexts</a> below for more).</p>\n<p>In order to keep related keys together, <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> instances will usually be\ndeclared as class attributes on a <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code> class:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># all of the getters here receive an instance of viewer.layers.selection</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LayerListContextKeys</span><span class=\"p\">(</span><span class=\"n\">ContextNamespace</span><span class=\"p\">):</span>\n    <span class=\"n\">layers_selection_count</span> <span class=\"o\">=</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span>\n        <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Number of layers currently selected\"</span><span class=\"p\">,</span>\n        <span class=\"n\">getter</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">sel</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sel</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">active_layer_is_rgb</span> <span class=\"o\">=</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span>\n        <span class=\"n\">default_value</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"True when the active layer is RGB\"</span><span class=\"p\">,</span>\n        <span class=\"n\">getter</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">sel</span><span class=\"p\">:</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">sel</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">,</span> <span class=\"s2\">\"rgb\"</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">active_layer_ndim</span> <span class=\"o\">=</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Number of dimensions in the active layer, or `None` if nothing is active\"</span><span class=\"p\">,</span>\n        <span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">active</span> <span class=\"ow\">and</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"s2\">\"ndim\"</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The members of a <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code> are static <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr</span></code> objects.\nSimilar to a python <code class=\"docutils literal notranslate\"><span class=\"pre\">Enum</span></code>, you can see all of its members using the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">__members__</span></code> attribute on the class:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">]:</span> <span class=\"n\">LayerListContextKeys</span><span class=\"o\">.</span><span class=\"n\">__members__</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">]:</span>\n<span class=\"n\">mappingproxy</span><span class=\"p\">({</span>\n    <span class=\"s1\">'layers_selection_count'</span><span class=\"p\">:</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'layers_selection_count'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'active_layer_is_rgb'</span><span class=\"p\">:</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'active_layer_is_rgb'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'active_layer_ndim'</span><span class=\"p\">:</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'active_layer_ndim'</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n</pre></div>\n</div>\n<p>A nice aspect of <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKeys</span></code> is that they can be used in expressions:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">]:</span> <span class=\"n\">expr</span> <span class=\"o\">=</span> <span class=\"n\">LayerListContextKeys</span><span class=\"o\">.</span><span class=\"n\">active_layer_ndim</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">3</span> \n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">]:</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">({</span><span class=\"s1\">'active_layer_ndim'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">]:</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n<p>But unlike a simple string, they can also provide type hinting, linting\ncapabilities, and IDE autocompletion (for napari developers).</p>\n<p><img alt=\"context_types\" src=\"../../_images/context_type_hint.png\"></p>\n<p>A record of all registered context keys can be retrieved with the class method\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey.info()</span></code></p>\n</div>\n</div>\n<div class=\"section\" id=\"contexts\">\n<h2>Contexts<a class=\"headerlink\" href=\"#contexts\" title=\"Permalink to this headline\">¶</a></h2>\n<p>Now that we’ve seen how expression names are declared, let’s discuss the\n“context” in which these expressions are evaluated.</p>\n<p>As mentioned, a context is ultimately just a mapping between variable names and\ntheir values. When evaluating a napari expression with <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr.eval</span></code>, you can\nindeed just pass a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> as that mapping.</p>\n<p>Important objects in napari, such as the <code class=\"docutils literal notranslate\"><span class=\"pre\">Viewer</span></code> and the <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerList</span></code> will be\nassociated with a <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code> object that tracks the value of various context\nkeys.  It is the job of these various objects (i.e. the <code class=\"docutils literal notranslate\"><span class=\"pre\">Viewer</span></code> and the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">LayerList</span></code>) to update the values in their <code class=\"docutils literal notranslate\"><span class=\"pre\">Contexts</span></code> when they change.\nContinuing with the example above, if the user clicks on a 4-dimensional layer,\nthe <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerList</span></code> would set the context key <code class=\"docutils literal notranslate\"><span class=\"pre\">active_layer_ndim</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">4</span></code>. napari\nwould then be able to enable/disable various commands and menus that required a\nspecific number of dimensions in the active layer.</p>\n<div class=\"section\" id=\"the-context-class\">\n<h3>The <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code> class<a class=\"headerlink\" href=\"#the-context-class\" title=\"Permalink to this headline\">¶</a></h3>\n<p>The napari <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code> class is a subclass of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/collections.html#collections.ChainMap\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">collections.ChainMap</span></code></a>\nthat also emits events when a key has been modified. <code class=\"docutils literal notranslate\"><span class=\"pre\">ChainMap</span></code> is useful here\nas it allows us to have “sub-contexts” that are children of some parent context.\nChild contexts can access all of the keys of the parent (but not vice-versa).\nFor example because a <code class=\"docutils literal notranslate\"><span class=\"pre\">Viewer</span></code> has a <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerList</span></code>, all of the keys in the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">Viewer</span></code> context are available to the <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerList</span></code> context.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">from</span> <span class=\"nn\">napari.utils.context</span> <span class=\"kn\">import</span> <span class=\"n\">get_context</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">get_context</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">ctx</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">Context</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span>\n    <span class=\"s1\">'layers_selection_count'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'all_layers_linked'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'unselected_linked_layers'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_layer_is_rgb'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_layer_type'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'only_images_selected'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'only_labels_selected'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_layer_ndim'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_layer_shape'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'active_layer_dtype'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'all_layers_same_shape'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n    <span class=\"p\">},</span> \n    <span class=\"p\">{},</span>  <span class=\"c1\"># the viewer context ... (no keys yet)</span>\n    <span class=\"n\">SettingsAwareContext</span><span class=\"p\">({})</span>\n<span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>The “root” context is a special <code class=\"docutils literal notranslate\"><span class=\"pre\">SettingsAwareContext</span></code> that can access keys in\nthe global <code class=\"docutils literal notranslate\"><span class=\"pre\">settings</span></code>.  Because contexts are <code class=\"docutils literal notranslate\"><span class=\"pre\">ChainMaps</span></code>, they can all access\nthe settings:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">'settings.appearance.theme'</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"s1\">'dark'</span>\n</pre></div>\n</div>\n<p>When we evaluate an expression, we can provide it one of these context objects:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">expr</span> <span class=\"o\">=</span> <span class=\"n\">LayerListContextKeys</span><span class=\"o\">.</span><span class=\"n\">layers_selection_count</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">expr</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"updating-contexts\">\n<h3>Updating Contexts<a class=\"headerlink\" href=\"#updating-contexts\" title=\"Permalink to this headline\">¶</a></h3>\n<p>You may be wondering exactly how objects such as <code class=\"docutils literal notranslate\"><span class=\"pre\">Viewer</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerList</span></code> update\nthe keys in their contexts. The aforementioned\n<a class=\"reference external\" href=\"#contextkey-objects\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code></a> comes into play here again.  A\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code> can be instantiated, and bound to a specific <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code>\ninstance.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">get_context</span><span class=\"p\">(</span><span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">llck</span> <span class=\"o\">=</span> <span class=\"n\">LayerListContextKeys</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Attributes of an instantiated <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code> now act as getters (and\nsetters!) of their respective <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> in the associated <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code>.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">llck</span><span class=\"o\">.</span><span class=\"n\">layers_selection_count</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">'layers_selection_count'</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"mi\">0</span>\n</pre></div>\n</div>\n<p>Finally, the <code class=\"docutils literal notranslate\"><span class=\"pre\">update</span></code> method can be used to trigger an update of all of the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKeys</span></code> in a given <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code> whenever a specific event occurs,\n(the value is updated by passing the <code class=\"docutils literal notranslate\"><span class=\"pre\">event.source</span></code> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">getter</span></code> function\nthat was declared in the <a class=\"reference external\" href=\"#contextkey-objects\" target=\"_blank\" rel=\"noreferrer\"><code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> constructor</a>)</p>\n<p>The following example works because <em>all</em> of the <code class=\"docutils literal notranslate\"><span class=\"pre\">getter</span></code> methods declared\nin <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerListContextKeys</span></code> take an instance of <code class=\"docutils literal notranslate\"><span class=\"pre\">layers.selection</span></code>:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">layers</span><span class=\"o\">.</span><span class=\"n\">selection</span><span class=\"o\">.</span><span class=\"n\">events</span><span class=\"o\">.</span><span class=\"n\">changed</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">llck</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">)</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">add_points</span><span class=\"p\">()</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"o\">&lt;</span><span class=\"n\">Points</span> <span class=\"n\">layer</span> <span class=\"s1\">'Points'</span> <span class=\"n\">at</span> <span class=\"mh\">0x13c62b1f0</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">llck</span><span class=\"o\">.</span><span class=\"n\">layers_selection_count</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">In</span> <span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">]:</span> <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">'layers_selection_count'</span><span class=\"p\">]</span>\n<span class=\"n\">Out</span><span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">]:</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"summary-a-rough-full-picture\">\n<h2>Summary: A (rough) full picture<a class=\"headerlink\" href=\"#summary-a-rough-full-picture\" title=\"Permalink to this headline\">¶</a></h2>\n<ol>\n<li><p>napari creates special context “names” using <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextKey</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ContextNamespace</span></code></p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">LayerListContextKeys</span><span class=\"p\">(</span><span class=\"n\">ContextNamespace</span><span class=\"p\">):</span>\n    <span class=\"n\">active_layer_type</span> <span class=\"o\">=</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"Lowercase name of active layer type, or None of none active.\"</span><span class=\"p\">,</span>\n        <span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">active</span> <span class=\"ow\">and</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"o\">.</span><span class=\"n\">_type_string</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">active_layer_is_rgb</span> <span class=\"o\">=</span> <span class=\"n\">ContextKey</span><span class=\"p\">(</span>\n        <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"True when the active layer is RGB\"</span><span class=\"p\">,</span>\n        <span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">active</span><span class=\"p\">,</span> <span class=\"s2\">\"rgb\"</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre></div>\n</div>\n</li>\n<li><p><em>Internally</em> (in napari code), we can use those objects directly to declare\nexpressions in an IDE-friendly way.  For example, here we are declaratively\npopulating the layer-list context menu; this is a function that will split\nthe current stack into multiple layers, but it is only enabled when the\nselected image is a (non-RGB) <code class=\"docutils literal notranslate\"><span class=\"pre\">Image</span></code> layer.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"s1\">'napari:split_stack'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'description'</span><span class=\"p\">:</span> <span class=\"n\">trans</span><span class=\"o\">.</span><span class=\"n\">_</span><span class=\"p\">(</span><span class=\"s1\">'Split Stack'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'action'</span><span class=\"p\">:</span> <span class=\"n\">_split_stack</span><span class=\"p\">,</span>\n    <span class=\"s1\">'enable_when'</span><span class=\"p\">:</span> <span class=\"n\">LLCK</span><span class=\"o\">.</span><span class=\"n\">active_layer_type</span> <span class=\"o\">==</span> <span class=\"s2\">\"image\"</span><span class=\"p\">,</span>\n    <span class=\"s1\">'show_when'</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">LLCK</span><span class=\"o\">.</span><span class=\"n\">active_layer_is_rgb</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</li>\n<li><p><em>Externally</em> (in plugin manifests), plugin developers use the string form to\nexpress conditions.  For example, this plugin manifest offers up a command\n(just a callable) that is only enabled when the the active layer is an RGB\nimage.</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_plugin</span><span class=\"w\"></span>\n<span class=\"nt\">commands</span><span class=\"p\">:</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">id</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">my_plugin.some_command</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">when</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">active_layer_is_rgb</span><span class=\"w\"></span>\n</pre></div>\n</div>\n<p>When this manifest is parsed, those expressions will be converted into\nnapari <code class=\"docutils literal notranslate\"><span class=\"pre\">Expr</span></code> objects internally.</p>\n</li>\n<li><p>During runtime, napari maintains and <a class=\"reference external\" href=\"#updating-contexts\" target=\"_blank\" rel=\"noreferrer\">updates contexts</a></p></li>\n<li><p>As these contexts are updated, they emit events that allow menus, keybindings,\nand other things to update themselves accordingly.  For example, the layer-list\ncontext menu might update the items in the menu that are visible and/or enabled:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">context_menu</span><span class=\"o\">.</span><span class=\"n\">update_from_context</span><span class=\"p\">(</span><span class=\"n\">get_context</span><span class=\"p\">(</span><span class=\"n\">layer_list</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n<p>where <code class=\"docutils literal notranslate\"><span class=\"pre\">update_from_context</span></code> is a function that takes in a <code class=\"docutils literal notranslate\"><span class=\"pre\">Context</span></code> and\nupdates all of the “action” items in the menu according to their <code class=\"docutils literal notranslate\"><span class=\"pre\">when</span></code>\nclauses (declared internally or externally in steps 3 and 4)</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"c1\"># pseudocode</span>\n<span class=\"k\">def</span> <span class=\"nf\">update_from_context</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">actions</span><span class=\"p\">():</span>\n        <span class=\"n\">expression</span> <span class=\"o\">=</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">when</span>  <span class=\"c1\"># or however you get the expression</span>\n        <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">setEnabled</span><span class=\"p\">(</span><span class=\"n\">expression</span><span class=\"o\">.</span><span class=\"n\">eval</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./guides/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[{"href":"#python-expressions","text":"Python expressions"},{"href":"#napari-expressions","text":"Napari expressions"},{"href":"#contexts","text":"Contexts"},{"href":"#summary-a-rough-full-picture","text":"Summary: A (rough) full picture"}],"ipynbSource":"","mdSource":"/_sources/guides/stable/contexts_expressions.md"}},"__N_SSG":true}