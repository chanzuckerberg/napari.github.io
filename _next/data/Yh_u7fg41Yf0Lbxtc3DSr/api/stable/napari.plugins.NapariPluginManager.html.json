{"pageProps":{"state":{"globalHeaders":{"https://napari-hub.org":{"level":1,"children":[],"href":"https://napari-hub.org","text":"napari hub"},"https://github.com/napari/napari":{"level":1,"children":[],"href":"https://github.com/napari/napari","text":"napari source code"},"/roadmaps/index.html":{"level":1,"children":["/roadmaps/0_4.html","/roadmaps/0_3_retrospective.html","/roadmaps/0_3.html"],"href":"/roadmaps/index.html","text":"Roadmaps"},"/roadmaps/0_3.html":{"level":2,"children":[],"href":"/roadmaps/0_3.html","text":"Roadmap 0.3"},"/roadmaps/0_3_retrospective.html":{"level":2,"children":[],"href":"/roadmaps/0_3_retrospective.html","text":"Roadmap 0.3 Retrospective"},"/roadmaps/0_4.html":{"level":2,"children":[],"href":"/roadmaps/0_4.html","text":"Roadmap 0.4"},"/release/index.html":{"level":1,"children":["/release/release_0_4_12.html","/release/release_0_4_11.html","/release/release_0_4_10.html","/release/release_0_4_9.html","/release/release_0_4_8.html","/release/release_0_4_7.html","/release/release_0_4_6.html","/release/release_0_4_5.html","/release/release_0_4_4.html","/release/release_0_4_3.html","/release/release_0_4_2.html","/release/release_0_4_1.html","/release/release_0_4_0.html","/release/release_0_3_8.html","/release/release_0_3_7.html","/release/release_0_3_6.html","/release/release_0_3_5.html","/release/release_0_3_4.html","/release/release_0_3_3.html","/release/release_0_3_2.html","/release/release_0_3_1.html","/release/release_0_3_0.html","/release/release_0_2_12.html","/release/release_0_2_11.html","/release/release_0_2_10.html","/release/release_0_2_9.html","/release/release_0_2_8.html","/release/release_0_2_7.html","/release/release_0_2_6.html","/release/release_0_2_5.html","/release/release_0_2_4.html","/release/release_0_2_3.html","/release/release_0_2_1.html","/release/release_0_2_0.html","/release/release_0_1_5.html","/release/release_0_1_3.html","/release/release_0_1_0.html"],"href":"/release/index.html","text":"Release notes"},"/release/release_0_1_0.html":{"level":2,"children":[],"href":"/release/release_0_1_0.html","text":"napari 0.1.0"},"/release/release_0_1_3.html":{"level":2,"children":[],"href":"/release/release_0_1_3.html","text":"napari 0.1.3"},"/release/release_0_1_5.html":{"level":2,"children":[],"href":"/release/release_0_1_5.html","text":"napari 0.1.5"},"/release/release_0_2_0.html":{"level":2,"children":[],"href":"/release/release_0_2_0.html","text":"napari 0.2.0"},"/release/release_0_2_1.html":{"level":2,"children":[],"href":"/release/release_0_2_1.html","text":"napari 0.2.1"},"/release/release_0_2_3.html":{"level":2,"children":[],"href":"/release/release_0_2_3.html","text":"napari 0.2.3"},"/release/release_0_2_4.html":{"level":2,"children":[],"href":"/release/release_0_2_4.html","text":"napari 0.2.4"},"/release/release_0_2_5.html":{"level":2,"children":[],"href":"/release/release_0_2_5.html","text":"napari 0.2.5"},"/release/release_0_2_6.html":{"level":2,"children":[],"href":"/release/release_0_2_6.html","text":"napari 0.2.6"},"/release/release_0_2_7.html":{"level":2,"children":[],"href":"/release/release_0_2_7.html","text":"napari 0.2.7"},"/release/release_0_2_8.html":{"level":2,"children":[],"href":"/release/release_0_2_8.html","text":"napari 0.2.8"},"/release/release_0_2_9.html":{"level":2,"children":[],"href":"/release/release_0_2_9.html","text":"napari 0.2.9"},"/release/release_0_2_10.html":{"level":2,"children":[],"href":"/release/release_0_2_10.html","text":"napari 0.2.10"},"/release/release_0_2_11.html":{"level":2,"children":[],"href":"/release/release_0_2_11.html","text":"napari 0.2.11"},"/release/release_0_2_12.html":{"level":2,"children":[],"href":"/release/release_0_2_12.html","text":"napari 0.2.12"},"/release/release_0_3_0.html":{"level":2,"children":[],"href":"/release/release_0_3_0.html","text":"napari 0.3.0"},"/release/release_0_3_1.html":{"level":2,"children":[],"href":"/release/release_0_3_1.html","text":"napari 0.3.1"},"/release/release_0_3_2.html":{"level":2,"children":[],"href":"/release/release_0_3_2.html","text":"napari 0.3.2"},"/release/release_0_3_3.html":{"level":2,"children":[],"href":"/release/release_0_3_3.html","text":"napari 0.3.3"},"/release/release_0_3_4.html":{"level":2,"children":[],"href":"/release/release_0_3_4.html","text":"napari 0.3.4"},"/release/release_0_3_5.html":{"level":2,"children":[],"href":"/release/release_0_3_5.html","text":"napari 0.3.5"},"/release/release_0_3_6.html":{"level":2,"children":[],"href":"/release/release_0_3_6.html","text":"napari 0.3.6"},"/release/release_0_3_7.html":{"level":2,"children":[],"href":"/release/release_0_3_7.html","text":"napari 0.3.7"},"/release/release_0_3_8.html":{"level":2,"children":[],"href":"/release/release_0_3_8.html","text":"napari 0.3.8"},"/release/release_0_4_0.html":{"level":2,"children":[],"href":"/release/release_0_4_0.html","text":"napari 0.4.0"},"/release/release_0_4_1.html":{"level":2,"children":[],"href":"/release/release_0_4_1.html","text":"napari 0.4.1"},"/release/release_0_4_2.html":{"level":2,"children":[],"href":"/release/release_0_4_2.html","text":"napari 0.4.2"},"/release/release_0_4_3.html":{"level":2,"children":[],"href":"/release/release_0_4_3.html","text":"napari 0.4.3"},"/release/release_0_4_4.html":{"level":2,"children":[],"href":"/release/release_0_4_4.html","text":"napari 0.4.4"},"/release/release_0_4_5.html":{"level":2,"children":[],"href":"/release/release_0_4_5.html","text":"napari 0.4.5"},"/release/release_0_4_6.html":{"level":2,"children":[],"href":"/release/release_0_4_6.html","text":"napari 0.4.6"},"/release/release_0_4_7.html":{"level":2,"children":[],"href":"/release/release_0_4_7.html","text":"napari 0.4.7"},"/release/release_0_4_8.html":{"level":2,"children":[],"href":"/release/release_0_4_8.html","text":"napari 0.4.8"},"/release/release_0_4_9.html":{"level":2,"children":[],"href":"/release/release_0_4_9.html","text":"napari 0.4.9"},"/release/release_0_4_10.html":{"level":2,"children":[],"href":"/release/release_0_4_10.html","text":"napari 0.4.10"},"/release/release_0_4_11.html":{"level":2,"children":[],"href":"/release/release_0_4_11.html","text":"napari 0.4.11"},"/release/release_0_4_12.html":{"level":2,"children":[],"href":"/release/release_0_4_12.html","text":"napari 0.4.12"},"/glossary.html":{"level":1,"children":[],"href":"/glossary.html","text":"Glossary"},"/developers/index.html":{"level":1,"children":["/developers/benchmarks.html","/developers/contributing.html","/developers/core_dev_guide.html","/developers/profiling.html","/developers/release.html","/developers/testing.html","/developers/docs.html","/developers/translations.html"],"href":"/developers/index.html","text":"Developer resources"},"/developers/translations.html":{"level":2,"children":[],"href":"/developers/translations.html","text":"Translations"},"/developers/docs.html":{"level":2,"children":[],"href":"/developers/docs.html","text":"Organization of Documentation for napari"},"/developers/testing.html":{"level":2,"children":[],"href":"/developers/testing.html","text":"Testing"},"/developers/release.html":{"level":2,"children":[],"href":"/developers/release.html","text":"Release guide"},"/developers/profiling.html":{"level":2,"children":[],"href":"/developers/profiling.html","text":"Profiling"},"/developers/core_dev_guide.html":{"level":2,"children":[],"href":"/developers/core_dev_guide.html","text":"Core Developer guide"},"/developers/contributing.html":{"level":2,"children":[],"href":"/developers/contributing.html","text":"Contributing guide"},"/developers/benchmarks.html":{"level":2,"children":[],"href":"/developers/benchmarks.html","text":"Benchmarks"},"/api/stable/index.html":{"level":1,"children":["/api/stable/napari.layers.html","/api/stable/napari.view_layers.html","/api/stable/napari.types.html","/api/stable/napari.utils.html","/api/stable/napari.plugins.html","/api/stable/napari.components.html","/api/stable/napari.qt.threading.html","/api/stable/napari.utils.perf.html","/api/stable/napari.html","/api/stable/napari.html"],"href":"/api/stable/index.html","text":"API reference"},"/api/stable/napari.html":{"level":2,"children":["/api/stable/napari.Viewer.html"],"href":"/api/stable/napari.html","text":"napari"},"/api/stable/napari.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.Viewer.html","text":"napari.Viewer"},"/api/stable/napari.utils.perf.html":{"level":2,"children":["/api/stable/napari.utils.perf.PerfEvent.html"],"href":"/api/stable/napari.utils.perf.html","text":"napari.utils.perf"},"/api/stable/napari.utils.perf.PerfEvent.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.perf.PerfEvent.html","text":"napari.utils.perf.PerfEvent"},"/api/stable/napari.qt.threading.html":{"level":2,"children":["/api/stable/napari.qt.threading.FunctionWorker.html","/api/stable/napari.qt.threading.GeneratorWorker.html","/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","/api/stable/napari.qt.threading.WorkerBase.html","/api/stable/napari.qt.threading.WorkerBaseSignals.html"],"href":"/api/stable/napari.qt.threading.html","text":"napari.qt.threading"},"/api/stable/napari.qt.threading.WorkerBaseSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBaseSignals.html","text":"napari.qt.threading.WorkerBaseSignals"},"/api/stable/napari.qt.threading.WorkerBase.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.WorkerBase.html","text":"napari.qt.threading.WorkerBase"},"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorkerSignals.html","text":"napari.qt.threading.GeneratorWorkerSignals"},"/api/stable/napari.qt.threading.GeneratorWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.GeneratorWorker.html","text":"napari.qt.threading.GeneratorWorker"},"/api/stable/napari.qt.threading.FunctionWorker.html":{"level":3,"children":[],"href":"/api/stable/napari.qt.threading.FunctionWorker.html","text":"napari.qt.threading.FunctionWorker"},"/api/stable/napari.components.html":{"level":2,"children":["/api/stable/napari.components.Camera.html","/api/stable/napari.components.Dims.html","/api/stable/napari.components.LayerList.html","/api/stable/napari.components.ViewerModel.html"],"href":"/api/stable/napari.components.html","text":"napari.components"},"/api/stable/napari.components.ViewerModel.html":{"level":3,"children":[],"href":"/api/stable/napari.components.ViewerModel.html","text":"napari.components.ViewerModel"},"/api/stable/napari.components.LayerList.html":{"level":3,"children":[],"href":"/api/stable/napari.components.LayerList.html","text":"napari.components.LayerList"},"/api/stable/napari.components.Dims.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Dims.html","text":"napari.components.Dims"},"/api/stable/napari.components.Camera.html":{"level":3,"children":[],"href":"/api/stable/napari.components.Camera.html","text":"napari.components.Camera"},"/api/stable/napari.plugins.html":{"level":2,"children":["/api/stable/napari.plugins.NapariPluginManager.html"],"href":"/api/stable/napari.plugins.html","text":"napari.plugins"},"/api/stable/napari.plugins.NapariPluginManager.html":{"level":3,"children":[],"href":"/api/stable/napari.plugins.NapariPluginManager.html","text":"napari.plugins.NapariPluginManager"},"/api/stable/napari.utils.html":{"level":2,"children":["/api/stable/napari.utils.Colormap.html","/api/stable/napari.utils.nbscreenshot.html","/api/stable/napari.utils.progress.html"],"href":"/api/stable/napari.utils.html","text":"napari.utils"},"/api/stable/napari.utils.progress.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.progress.html","text":"napari.utils.progress"},"/api/stable/napari.utils.nbscreenshot.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.nbscreenshot.html","text":"napari.utils.nbscreenshot"},"/api/stable/napari.utils.Colormap.html":{"level":3,"children":[],"href":"/api/stable/napari.utils.Colormap.html","text":"napari.utils.Colormap"},"/api/stable/napari.types.html":{"level":2,"children":["/api/stable/napari.types.ArrayBase.html","/api/stable/napari.types.Path.html","/api/stable/napari.types.SampleDict.html","/api/stable/napari.types.TracebackType.html","/api/stable/napari.types.TypedDict.html","/api/stable/napari.types.partial.html"],"href":"/api/stable/napari.types.html","text":"napari.types"},"/api/stable/napari.types.partial.html":{"level":3,"children":[],"href":"/api/stable/napari.types.partial.html","text":"napari.types.partial"},"/api/stable/napari.types.TypedDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TypedDict.html","text":"napari.types.TypedDict"},"/api/stable/napari.types.TracebackType.html":{"level":3,"children":[],"href":"/api/stable/napari.types.TracebackType.html","text":"napari.types.TracebackType"},"/api/stable/napari.types.SampleDict.html":{"level":3,"children":[],"href":"/api/stable/napari.types.SampleDict.html","text":"napari.types.SampleDict"},"/api/stable/napari.types.Path.html":{"level":3,"children":[],"href":"/api/stable/napari.types.Path.html","text":"napari.types.Path"},"/api/stable/napari.types.ArrayBase.html":{"level":3,"children":[],"href":"/api/stable/napari.types.ArrayBase.html","text":"napari.types.ArrayBase"},"/api/stable/napari.view_layers.html":{"level":2,"children":["/api/stable/napari.view_layers.Viewer.html"],"href":"/api/stable/napari.view_layers.html","text":"napari.view_layers"},"/api/stable/napari.view_layers.Viewer.html":{"level":3,"children":[],"href":"/api/stable/napari.view_layers.Viewer.html","text":"napari.view_layers.Viewer"},"/api/stable/napari.layers.html":{"level":2,"children":["/api/stable/napari.layers.Image.html","/api/stable/napari.layers.Labels.html","/api/stable/napari.layers.Layer.html","/api/stable/napari.layers.Points.html","/api/stable/napari.layers.Shapes.html","/api/stable/napari.layers.Surface.html","/api/stable/napari.layers.Tracks.html","/api/stable/napari.layers.Vectors.html"],"href":"/api/stable/napari.layers.html","text":"napari.layers"},"/api/stable/napari.layers.Vectors.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Vectors.html","text":"napari.layers.Vectors"},"/api/stable/napari.layers.Tracks.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Tracks.html","text":"napari.layers.Tracks"},"/api/stable/napari.layers.Surface.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Surface.html","text":"napari.layers.Surface"},"/api/stable/napari.layers.Shapes.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Shapes.html","text":"napari.layers.Shapes"},"/api/stable/napari.layers.Points.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Points.html","text":"napari.layers.Points"},"/api/stable/napari.layers.Layer.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Layer.html","text":"napari.layers.Layer"},"/api/stable/napari.layers.Labels.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Labels.html","text":"napari.layers.Labels"},"/api/stable/napari.layers.Image.html":{"level":3,"children":[],"href":"/api/stable/napari.layers.Image.html","text":"napari.layers.Image"},"/community/index.html":{"level":1,"children":["/community/mission_and_values.html","/community/team.html","/community/code_of_conduct.html","/community/code_of_conduct_reporting.html","/community/governance.html","/community/working_groups.html","/community/meeting_schedule.html"],"href":"/community/index.html","text":"Community"},"/community/meeting_schedule.html":{"level":2,"children":[],"href":"/community/meeting_schedule.html","text":"Meeting schedule"},"/community/working_groups.html":{"level":2,"children":[],"href":"/community/working_groups.html","text":"Working groups"},"/community/governance.html":{"level":2,"children":[],"href":"/community/governance.html","text":"Governance model"},"/community/code_of_conduct_reporting.html":{"level":2,"children":[],"href":"/community/code_of_conduct_reporting.html","text":"Handling Code of Conduct reports"},"/community/code_of_conduct.html":{"level":2,"children":[],"href":"/community/code_of_conduct.html","text":"Code of Conduct"},"/community/team.html":{"level":2,"children":[],"href":"/community/team.html","text":"About the project and team"},"/community/mission_and_values.html":{"level":2,"children":[],"href":"/community/mission_and_values.html","text":"Mission and Values"},"/plugins/stable/index.html":{"level":1,"children":["/plugins/stable/best_practices.html","/plugins/stable/npe2_migration_guide.html","/plugins/stable/guides.html","/plugins/stable/first_plugin.html","/plugins/stable/test_deploy.html","/plugins/stable/npe1.html","/plugins/stable/find_and_install_plugin.html"],"href":"/plugins/stable/index.html","text":"Plugins"},"/plugins/stable/find_and_install_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/find_and_install_plugin.html","text":"Finding and installing a napari plugin"},"/plugins/stable/npe1.html":{"level":2,"children":[],"href":"/plugins/stable/npe1.html","text":"1st Gen Plugin Guide (Deprecated)"},"/plugins/stable/test_deploy.html":{"level":2,"children":[],"href":"/plugins/stable/test_deploy.html","text":"Test and Deploy"},"/plugins/stable/first_plugin.html":{"level":2,"children":[],"href":"/plugins/stable/first_plugin.html","text":"Your First Plugin"},"/plugins/stable/guides.html":{"level":2,"children":[],"href":"/plugins/stable/guides.html","text":"Contribution Guides"},"/plugins/stable/npe2_migration_guide.html":{"level":2,"children":[],"href":"/plugins/stable/npe2_migration_guide.html","text":"npe2 migration guide"},"/plugins/stable/best_practices.html":{"level":2,"children":[],"href":"/plugins/stable/best_practices.html","text":"Best practices"},"/guides/stable/index.html":{"level":1,"children":["/guides/stable/magicgui.html","/guides/stable/event_loop.html","/guides/stable/threading.html","/guides/stable/rendering-explanation.html","/guides/stable/rendering.html","/guides/stable/performance.html","/guides/stable/3D_interactivity.html","/guides/stable/events_reference.html","/guides/stable/contexts_expressions.html"],"href":"/guides/stable/index.html","text":"In-depth explanations"},"/guides/stable/contexts_expressions.html":{"level":2,"children":[],"href":"/guides/stable/contexts_expressions.html","text":"Contexts and Expressions in napari"},"/guides/stable/events_reference.html":{"level":2,"children":[],"href":"/guides/stable/events_reference.html","text":"Events reference"},"/guides/stable/3D_interactivity.html":{"level":2,"children":[],"href":"/guides/stable/3D_interactivity.html","text":"3D interactivity"},"/guides/stable/performance.html":{"level":2,"children":[],"href":"/guides/stable/performance.html","text":"napari performance"},"/guides/stable/rendering.html":{"level":2,"children":[],"href":"/guides/stable/rendering.html","text":"Asynchronous rendering"},"/guides/stable/rendering-explanation.html":{"level":2,"children":[],"href":"/guides/stable/rendering-explanation.html","text":"Rendering in napari"},"/guides/stable/threading.html":{"level":2,"children":[],"href":"/guides/stable/threading.html","text":"Multithreading in napari"},"/guides/stable/event_loop.html":{"level":2,"children":[],"href":"/guides/stable/event_loop.html","text":"An introduction to the event loop in napari"},"/guides/stable/magicgui.html":{"level":2,"children":[],"href":"/guides/stable/magicgui.html","text":"Using magicgui in napari"},"/howtos/index.html":{"level":1,"children":["/howtos/connecting_events.html","/howtos/napari_imageJ.html","/howtos/docker.html","/howtos/perfmon.html"],"href":"/howtos/index.html","text":"How-to guides"},"/howtos/perfmon.html":{"level":2,"children":[],"href":"/howtos/perfmon.html","text":"Performance monitoring"},"/howtos/docker.html":{"level":2,"children":[],"href":"/howtos/docker.html","text":"Napari in Docker"},"/howtos/napari_imageJ.html":{"level":2,"children":[],"href":"/howtos/napari_imageJ.html","text":"napari + ImageJ how-to guide"},"/howtos/connecting_events.html":{"level":2,"children":[],"href":"/howtos/connecting_events.html","text":"Hooking up your own events"},"/tutorials/index.html":{"level":1,"children":["/tutorials/segmentation/index.html","/tutorials/tracking/index.html","/tutorials/applications/annotate_points.html","/tutorials/applications/dask.html","/tutorials/further-resources/napari-workshops.html","/tutorials/tracking/cell_tracking.html","/tutorials/segmentation/annotate_segmentation.html"],"href":"/tutorials/index.html","text":"Tutorials"},"/tutorials/segmentation/annotate_segmentation.html":{"level":2,"children":[],"href":"/tutorials/segmentation/annotate_segmentation.html","text":"Annotating segmentation with text and bounding boxes"},"/tutorials/tracking/cell_tracking.html":{"level":2,"children":[],"href":"/tutorials/tracking/cell_tracking.html","text":"Single cell tracking with napari"},"/tutorials/further-resources/napari-workshops.html":{"level":2,"children":[],"href":"/tutorials/further-resources/napari-workshops.html","text":"napari workshops"},"/tutorials/applications/dask.html":{"level":2,"children":[],"href":"/tutorials/applications/dask.html","text":"Using Dask and napari to process & view large datasets"},"/tutorials/applications/annotate_points.html":{"level":2,"children":[],"href":"/tutorials/applications/annotate_points.html","text":"Annotating videos with napari"},"/tutorials/tracking/index.html":{"level":2,"children":[],"href":"/tutorials/tracking/index.html","text":"Tracking"},"/tutorials/segmentation/index.html":{"level":2,"children":[],"href":"/tutorials/segmentation/index.html","text":"Segmentation"},"/tutorials/start_index.html":{"level":1,"children":["/tutorials/fundamentals/installation.html","/tutorials/fundamentals/getting_started.html","/tutorials/fundamentals/viewer.html","/tutorials/fundamentals/image.html","/tutorials/fundamentals/labels.html","/tutorials/fundamentals/points.html","/tutorials/fundamentals/shapes.html","/tutorials/fundamentals/surface.html","/tutorials/fundamentals/tracks.html","/tutorials/fundamentals/vectors.html"],"href":"/tutorials/start_index.html","text":"Getting Started"},"/tutorials/fundamentals/vectors.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/vectors.html","text":"vectors layer tutorial"},"/tutorials/fundamentals/tracks.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/tracks.html","text":"tracks layer tutorial"},"/tutorials/fundamentals/surface.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/surface.html","text":"surface layer tutorial"},"/tutorials/fundamentals/shapes.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/shapes.html","text":"shapes layer tutorial"},"/tutorials/fundamentals/points.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/points.html","text":"points layer tutorial"},"/tutorials/fundamentals/labels.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/labels.html","text":"labels layer tutorial"},"/tutorials/fundamentals/image.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/image.html","text":"image layer tutorial"},"/tutorials/fundamentals/viewer.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/viewer.html","text":"napari viewer tutorial"},"/tutorials/fundamentals/getting_started.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/getting_started.html","text":"Getting started with napari"},"/tutorials/fundamentals/installation.html":{"level":2,"children":[],"href":"/tutorials/fundamentals/installation.html","text":"How to install napari on your machine"}},"rootGlobalHeaders":["/tutorials/start_index.html","/tutorials/index.html","/howtos/index.html","/guides/stable/index.html","/plugins/stable/index.html","/community/index.html","/api/stable/index.html","/developers/index.html","/glossary.html","/release/index.html","/roadmaps/index.html","https://github.com/napari/napari","https://napari-hub.org"],"pageTitle":"napari.plugins.NapariPluginManager","pageFrontMatter":{},"previewImage":"","previewDescription":"Bases: napari_plugin_engine.manager.PluginManager","appScripts":[{"src":"/_static/documentation_options.js"},{"src":"/_static/jquery.js"},{"src":"/_static/underscore.js"},{"src":"/_static/doctools.js"},{"src":"/_static/togglebutton.js"},{"src":"/_static/clipboard.min.js"},{"src":"/_static/copybutton.js"},{"children":"var togglebuttonSelector = '.toggle, .admonition.dropdown, .tag_hide_input div.cell_input, .tag_hide-input div.cell_input, .tag_hide_output div.cell_output, .tag_hide-output div.cell_output, .tag_hide_cell.cell, .tag_hide-cell.cell';"},{"src":"https://unpkg.com/thebe@0.5.1/lib/index.js"},{"children":"\n        const thebe_selector = \".thebe\"\n        const thebe_selector_input = \"pre\"\n        const thebe_selector_output = \".output\"\n    "},{"src":"/_static/sphinx-thebe.js"}],"appStyleSheets":[{"href":"/_static/pygments.css","rel":"stylesheet"},{"href":"/_static/togglebutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/copybutton.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/mystnb.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/sphinx-thebe.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-main.c949a650a448cc0ae9fd3441c0e17fb0.css","rel":"stylesheet","type":"text/css"},{"href":"/_static/panels-variables.06eb56fa6e07937060861dad626602ad.css","rel":"stylesheet","type":"text/css"}],"pageBodyHtml":"\n        <div id=\"documentation_options\" data-url_root=\"../../\"></div>\n        <div class=\"section\" id=\"napari-plugins-naparipluginmanager\">\n\n<dl class=\"py class\">\n<dt id=\"napari.plugins.NapariPluginManager\">\n<em class=\"property\"><span class=\"pre\">class</span> </em><code class=\"sig-prename descclassname\"><span class=\"pre\">napari.plugins.</span></code><code class=\"sig-name descname\"><span class=\"pre\">NapariPluginManager</span></code><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari_plugin_engine.manager.PluginManager</span></code></p>\n<p>PluginManager subclass for napari-specific functionality.</p>\n<dl class=\"simple\">\n<dt>registered (value: str)</dt><dd><p>Emitted after plugin named <cite>value</cite> has been registered.</p>\n</dd>\n<dt>unregistered (value: str)</dt><dd><p>Emitted after plugin named <cite>value</cite> has been unregistered.</p>\n</dd>\n<dt>enabled (value: str)</dt><dd><p>Emitted after plugin named <cite>value</cite> has been removed from the block list.</p>\n</dd>\n<dt>disabled (value: str)</dt><dd><p>Emitted after plugin named <cite>value</cite> has been added to the block list.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Methods</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\">\n<col style=\"width: 90%\">\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.add_hookcall_monitoring\" title=\"napari.plugins.NapariPluginManager.add_hookcall_monitoring\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_hookcall_monitoring</span></code></a>(before,&nbsp;after)</p></td>\n<td><p>Add before/after tracing functions for all hooks.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.add_hookspecs\" title=\"napari.plugins.NapariPluginManager.add_hookspecs\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">add_hookspecs</span></code></a>(namespace)</p></td>\n<td><p>Add new hook specifications defined in the given <code class=\"docutils literal notranslate\"><span class=\"pre\">namespace</span></code>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.assign_reader_to_extensions\" title=\"napari.plugins.NapariPluginManager.assign_reader_to_extensions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">assign_reader_to_extensions</span></code></a>(reader,&nbsp;extensions)</p></td>\n<td><p>Assign a specific reader plugin to <cite>extensions</cite>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.assign_writer_to_extensions\" title=\"napari.plugins.NapariPluginManager.assign_writer_to_extensions\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">assign_writer_to_extensions</span></code></a>(writer,&nbsp;extensions)</p></td>\n<td><p>Assign a specific writer plugin to <cite>extensions</cite>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.available_samples\" title=\"napari.plugins.NapariPluginManager.available_samples\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">available_samples</span></code></a>()</p></td>\n<td><p>Return a tuple of sample data keys provided by plugins.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.call_order\" title=\"napari.plugins.NapariPluginManager.call_order\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">call_order</span></code></a>([first_result_only])</p></td>\n<td><p>Returns the call order from the plugin manager.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.check_pending\" title=\"napari.plugins.NapariPluginManager.check_pending\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">check_pending</span></code></a>()</p></td>\n<td><p>Make sure all hooks have a specification, or are optional.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.discover\" title=\"napari.plugins.NapariPluginManager.discover\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">discover</span></code></a>([path,&nbsp;entry_point,&nbsp;prefix,&nbsp;…])</p></td>\n<td><p>Discover and load plugins.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">discover_sample_data</span></code>()</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.discover_themes\" title=\"napari.plugins.NapariPluginManager.discover_themes\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">discover_themes</span></code></a>()</p></td>\n<td><p>Trigger discovery of theme plugins.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.discover_widgets\" title=\"napari.plugins.NapariPluginManager.discover_widgets\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">discover_widgets</span></code></a>()</p></td>\n<td><p>Trigger discovery of dock_widgets plugins.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.discovery_blocked\" title=\"napari.plugins.NapariPluginManager.discovery_blocked\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">discovery_blocked</span></code></a>()</p></td>\n<td><p>A context manager that temporarily blocks discovery of new plugins.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.enable_tracing\" title=\"napari.plugins.NapariPluginManager.enable_tracing\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">enable_tracing</span></code></a>()</p></td>\n<td><p>Enable tracing of hook calls and return an undo function.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_errors\" title=\"napari.plugins.NapariPluginManager.get_errors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_errors</span></code></a>([plugin,&nbsp;error_type])</p></td>\n<td><p>Return a list of PluginErrors associated with <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_hookcallers\" title=\"napari.plugins.NapariPluginManager.get_hookcallers\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_hookcallers</span></code></a>(plugin)</p></td>\n<td><p>get all hook callers for the specified plugin.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_metadata\" title=\"napari.plugins.NapariPluginManager.get_metadata\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_metadata</span></code></a>(plugin,&nbsp;*values)</p></td>\n<td><p>Return metadata values for a given plugin</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_name\" title=\"napari.plugins.NapariPluginManager.get_name\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_name</span></code></a>(plugin)</p></td>\n<td><p>Return name for registered plugin or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if not registered.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_reader_for_extension\" title=\"napari.plugins.NapariPluginManager.get_reader_for_extension\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_reader_for_extension</span></code></a>(extension)</p></td>\n<td><p>Return reader plugin assigned to <cite>extension</cite>, or None.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_standard_metadata\" title=\"napari.plugins.NapariPluginManager.get_standard_metadata\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_standard_metadata</span></code></a>(plugin)</p></td>\n<td><p>Return a standard metadata dict for <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_widget\" title=\"napari.plugins.NapariPluginManager.get_widget\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_widget</span></code></a>(plugin_name[,&nbsp;widget_name])</p></td>\n<td><p>Get widget <cite>widget_name</cite> provided by plugin <cite>plugin_name</cite>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.get_writer_for_extension\" title=\"napari.plugins.NapariPluginManager.get_writer_for_extension\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">get_writer_for_extension</span></code></a>(extension)</p></td>\n<td><p>Return writer plugin assigned to <cite>extension</cite>, or None.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.is_blocked\" title=\"napari.plugins.NapariPluginManager.is_blocked\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_blocked</span></code></a>(plugin_name)</p></td>\n<td><p>Return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the given plugin name is blocked.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.is_registered\" title=\"napari.plugins.NapariPluginManager.is_registered\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">is_registered</span></code></a>(obj)</p></td>\n<td><p>Return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the plugin is already registered.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.iter_available\" title=\"napari.plugins.NapariPluginManager.iter_available\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">iter_available</span></code></a>([path,&nbsp;entry_point,&nbsp;prefix])</p></td>\n<td><p>Iterate over available plugins.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">iter_widgets</span></code>()</p></td>\n<td><p></p><dl class=\"field-list simple\">\n<dt class=\"field-odd\">rtype</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Iterator\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Iterator</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Tuple</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Tuple</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code></a>]]]</p>\n</dd>\n</dl>\n<p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.list_plugin_metadata\" title=\"napari.plugins.NapariPluginManager.list_plugin_metadata\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">list_plugin_metadata</span></code></a>()</p></td>\n<td><p>Return list of standard metadata dicts for every registered plugin.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plugin_info</span></code>(plugin)</p></td>\n<td><p></p><dl class=\"field-list simple\">\n<dt class=\"field-odd\">rtype</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a></p>\n</dd>\n</dl>\n<p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.prune\" title=\"napari.plugins.NapariPluginManager.prune\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">prune</span></code></a>()</p></td>\n<td><p>Unregister modules that can no longer be imported.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.register\" title=\"napari.plugins.NapariPluginManager.register\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">register</span></code></a>(namespace[,&nbsp;name])</p></td>\n<td><p>Register a plugin and return its canonical name or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">register_dock_widget</span></code>(args,&nbsp;hookimpl)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">register_function_widget</span></code>(args,&nbsp;hookimpl)</p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.register_sample_data\" title=\"napari.plugins.NapariPluginManager.register_sample_data\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">register_sample_data</span></code></a>(data,&nbsp;hookimpl)</p></td>\n<td><p>Register sample data dict returned by <cite>napari_provide_sample_data</cite>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.register_theme_colors\" title=\"napari.plugins.NapariPluginManager.register_theme_colors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">register_theme_colors</span></code></a>(data,&nbsp;hookimpl)</p></td>\n<td><p>Register theme data dict returned by <cite>napari_experimental_provide_theme</cite>.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.set_blocked\" title=\"napari.plugins.NapariPluginManager.set_blocked\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_blocked</span></code></a>(plugin_name[,&nbsp;blocked])</p></td>\n<td><p>Block registrations of <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_name</span></code>, unregister if registered.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.set_call_order\" title=\"napari.plugins.NapariPluginManager.set_call_order\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">set_call_order</span></code></a>(new_order)</p></td>\n<td><p>Sets the plugin manager call order to match settings plugin values.</p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.unregister\" title=\"napari.plugins.NapariPluginManager.unregister\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unregister</span></code></a>(name_or_object)</p></td>\n<td><p>Unregister a plugin object or <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_name</span></code>.</p></td>\n</tr>\n<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.unregister_theme_colors\" title=\"napari.plugins.NapariPluginManager.unregister_theme_colors\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">unregister_theme_colors</span></code></a>(plugin_name)</p></td>\n<td><p>Unregister theme data from napari.</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Attributes</p>\n<table class=\"longtable docutils align-default\">\n<colgroup>\n<col style=\"width: 10%\">\n<col style=\"width: 90%\">\n</colgroup>\n<tbody>\n<tr class=\"row-odd\"><td><p><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">ENTRY_POINT</span></code></p></td>\n<td><p></p></td>\n</tr>\n<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"#napari.plugins.NapariPluginManager.hooks\" title=\"napari.plugins.NapariPluginManager.hooks\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">hooks</span></code></a></p></td>\n<td><p>An alias for PluginManager.hook</p></td>\n</tr>\n</tbody>\n</table>\n<p class=\"rubric\">Details</p>\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.add_hookcall_monitoring\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_hookcall_monitoring</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">before</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">after</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.add_hookcall_monitoring\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Add before/after tracing functions for all hooks.</p>\n<p>return an undo function which, when called, will remove the added\ntracers.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">before(hook_name,</span> <span class=\"pre\">hook_impls,</span> <span class=\"pre\">kwargs)</span></code> will be called ahead of all\nhook calls and receive a hookcaller instance, a list of HookImplementation\ninstances and the keyword arguments for the hook call.</p>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">after(outcome,</span> <span class=\"pre\">hook_name,</span> <span class=\"pre\">hook_impls,</span> <span class=\"pre\">kwargs)</span></code> receives the same\narguments as <code class=\"docutils literal notranslate\"><span class=\"pre\">before</span></code> but also a\n<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">napari_plugin_engine.callers._Result</span></code> object which\nrepresents the result of the overall hook call.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Callable\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Callable</span></code></a>[[], <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.add_hookspecs\">\n<code class=\"sig-name descname\"><span class=\"pre\">add_hookspecs</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">namespace</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.add_hookspecs\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Add new hook specifications defined in the given <code class=\"docutils literal notranslate\"><span class=\"pre\">namespace</span></code>.</p>\n<p>Functions are recognized if they have been decorated accordingly.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.assign_reader_to_extensions\">\n<code class=\"sig-name descname\"><span class=\"pre\">assign_reader_to_extensions</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">reader</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extensions</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.assign_reader_to_extensions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.assign_reader_to_extensions\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Assign a specific reader plugin to <cite>extensions</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>reader</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a>) – Name of a plugin offering a reader hook.</p></li>\n<li><p><strong>extensions</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>Iterable</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>]</em><em>]</em>) – Name(s) of extensions to always write with <cite>reader</cite></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.assign_writer_to_extensions\">\n<code class=\"sig-name descname\"><span class=\"pre\">assign_writer_to_extensions</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">writer</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extensions</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.assign_writer_to_extensions\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.assign_writer_to_extensions\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Assign a specific writer plugin to <cite>extensions</cite>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>writer</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a>) – Name of a plugin offering a writer hook.</p></li>\n<li><p><strong>extensions</strong> (<em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>Iterable</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>]</em><em>]</em>) – Name(s) of extensions to always write with <cite>writer</cite></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.available_samples\">\n<code class=\"sig-name descname\"><span class=\"pre\">available_samples</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.available_samples\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.available_samples\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return a tuple of sample data keys provided by plugins.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>sample_keys</strong> – A sequence of 2-tuples <code class=\"docutils literal notranslate\"><span class=\"pre\">(plugin_name,</span> <span class=\"pre\">sample_name)</span></code> showing available\nsample data provided by plugins.  To load sample data into the viewer,\nuse <a class=\"reference internal\" href=\"napari.Viewer.html#napari.Viewer.open_sample\" title=\"napari.Viewer.open_sample\"><code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">napari.Viewer.open_sample()</span></code></a>.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>Tuple[Tuple[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">str</a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">str</a>], ..]</p>\n</dd>\n</dl>\n<p class=\"rubric\">Examples</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">napari.plugins</span> <span class=\"kn\">import</span> <span class=\"n\">available_samples</span>\n\n<span class=\"n\">sample_keys</span> <span class=\"o\">=</span> <span class=\"n\">available_samples</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">sample_keys</span><span class=\"p\">:</span>\n    <span class=\"c1\"># load first available sample</span>\n    <span class=\"n\">viewer</span><span class=\"o\">.</span><span class=\"n\">open_sample</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">sample_keys</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.call_order\">\n<code class=\"sig-name descname\"><span class=\"pre\">call_order</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">first_result_only</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.call_order\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.call_order\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Returns the call order from the plugin manager.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>call_order</strong> – mapping of hook_specification name, to a list of dicts with keys:\n{‘plugin’, ‘enabled’}.  Plugins earlier in the dict are called\nsooner.</p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p>CallOrderDict</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.check_pending\">\n<code class=\"sig-name descname\"><span class=\"pre\">check_pending</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.check_pending\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Make sure all hooks have a specification, or are optional.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Raises</dt>\n<dd class=\"field-odd\"><p><strong>PluginValidationError</strong> – If a hook implementation that was <em>not</em> marked as <code class=\"docutils literal notranslate\"><span class=\"pre\">optionalhook</span></code>\n    has been registered for a non-existent hook specification.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.discover\">\n<code class=\"sig-name descname\"><span class=\"pre\">discover</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">entry_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">ignore_errors</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.discover\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Discover and load plugins.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – If a string is provided, it is added to <code class=\"docutils literal notranslate\"><span class=\"pre\">sys.path</span></code> (and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">self.discover_path</span></code>) before importing, and removed at the end.</p></li>\n<li><p><strong>entry_point</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – An entry_point group to search for, by default\n<code class=\"docutils literal notranslate\"><span class=\"pre\">self.discover_entry_point</span></code> is used</p></li>\n<li><p><strong>prefix</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – If <code class=\"docutils literal notranslate\"><span class=\"pre\">provided</span></code>, modules in the environment starting with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">prefix</span></code> will be imported and searched for hook implementations\nby default <code class=\"docutils literal notranslate\"><span class=\"pre\">self.discover_prefix</span></code> is used</p></li>\n<li><p><strong>ignore_errors</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>bool</em></a><em>, </em><em>optional</em>) – If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, errors will be gathered and returned at the end.\nOtherwise, they will be raised immediately. by default True</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>(count, errs)</strong> – The number of succefully loaded modules, and a list of errors that\noccurred (if <code class=\"docutils literal notranslate\"><span class=\"pre\">ignore_errors</span></code> was <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>)</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Tuple[<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#int\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">int</a>, List[PluginError]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.discover_themes\">\n<code class=\"sig-name descname\"><span class=\"pre\">discover_themes</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.discover_themes\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.discover_themes\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Trigger discovery of theme plugins.</p>\n<p>As a “historic” hook, this should only need to be called once.\n(historic here means that even plugins that are discovered after this\nis called will be added.)</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.discover_widgets\">\n<code class=\"sig-name descname\"><span class=\"pre\">discover_widgets</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.discover_widgets\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.discover_widgets\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Trigger discovery of dock_widgets plugins.</p>\n<p>As a “historic” hook, this should only need to be called once.\n(historic here means that even plugins that are discovered after this\nis called will be added.)</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.discovery_blocked\">\n<code class=\"sig-name descname\"><span class=\"pre\">discovery_blocked</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.discovery_blocked\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>A context manager that temporarily blocks discovery of new plugins.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Generator\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Generator</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.enable_tracing\">\n<code class=\"sig-name descname\"><span class=\"pre\">enable_tracing</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.enable_tracing\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Enable tracing of hook calls and return an undo function.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_errors\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_errors</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"pre\">plugin=&lt;Empty.token:</span> <span class=\"pre\">0&gt;</span></em>, <em class=\"sig-param\"><span class=\"pre\">error_type=&lt;Empty.token:</span> <span class=\"pre\">0&gt;</span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_errors\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return a list of PluginErrors associated with <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plugin</strong> (<em>Any</em>) – If provided, will restrict errors to those that were raised by\n<code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.  If a string is provided, it will be interpreted as the\nname of the plugin, otherwise it is assumed to be the actual plugin\nobject itself.</p></li>\n<li><p><strong>error_type</strong> (<em>PluginError</em>) – If provided, will restrict errors to instances of <code class=\"docutils literal notranslate\"><span class=\"pre\">error_type</span></code>.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.List\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code></a>[<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PluginError</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_hookcallers\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_hookcallers</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_hookcallers\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>get all hook callers for the specified plugin.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Optional\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Optional</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.List\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">List</span></code></a>[<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">HookCaller</span></code>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_metadata</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">values</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_metadata\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return metadata values for a given plugin</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plugin</strong> (<em>Any</em>) – Either a string (in which case it is interpreted as a plugin name),\nor a non-string object (in which case it is assumed to be a plugin\nmodule or class).</p></li>\n<li><p><strong>*values</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a>) – key(s) to lookup in the plugin object distribution metadata.  At\nleast one value must be supplied.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#TypeError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>TypeError</strong></a> – If no values are supplied.</p></li>\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#KeyError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>KeyError</strong></a> – If the plugin does not exist.</p></li>\n</ul>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Union\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Union</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dict</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Optional\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Optional</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>]], <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_name\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_name</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_name\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return name for registered plugin or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if not registered.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_reader_for_extension\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_reader_for_extension</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extension</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.get_reader_for_extension\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_reader_for_extension\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return reader plugin assigned to <cite>extension</cite>, or None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Optional\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Optional</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_standard_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_standard_metadata</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_standard_metadata\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return a standard metadata dict for <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>plugin</strong> (<em>Any</em>) – A plugin name or any object.  If it is a plugin name, it\n<em>must</em> be a registered plugin.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p></p><p><strong>metadata</strong> – A  dicts with plugin metadata. The dict is guaranteed to have the\nfollowing keys:</p>\n<ul class=\"simple\">\n<li><p><strong>plugin_name</strong>: The name of the plugin as registered</p></li>\n<li><p><strong>package</strong>: The name of the package</p></li>\n<li><p><strong>version</strong>: The version of the plugin package</p></li>\n<li><p><strong>summary</strong>: A one-line summary of what the distribution does</p></li>\n<li><p><strong>author</strong>: The author’s name</p></li>\n<li><p><strong>email</strong>: The author’s (or maintainer’s) e-mail address.</p></li>\n<li><p><strong>license</strong>: The license covering the distribution</p></li>\n<li><p><strong>url</strong>: The home page for the package, or dowload url if N/A.</p></li>\n<li><p><strong>hooks</strong>: A list of hookspec names that this plugin implements.</p></li>\n</ul>\n<p></p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">dict</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#KeyError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>KeyError</strong></a> – If <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code> is a string, but is not a registered plugin_name.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_widget\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_widget</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">widget_name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.get_widget\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_widget\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Get widget <cite>widget_name</cite> provided by plugin <cite>plugin_name</cite>.</p>\n<p>Note: it’s important that <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">discover_dock_widgets()</span></code> has been called\nfirst, otherwise plugins may not be found yet.  (Typically, that is done\nin qt_main_window)</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plugin_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a>) – Name of a plugin providing a widget</p></li>\n<li><p><strong>widget_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – Name of a widget provided by <cite>plugin_name</cite>. If <cite>None</cite>, and the\nspecified plugin provides only a single widget, that widget will be\nreturned, otherwise a ValueError will be raised, by default None</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>plugin_widget</strong> – Tuple of (widget_class, options).</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Tuple[Callable, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">dict</a>]</p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#KeyError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>KeyError</strong></a> – If plugin <cite>plugin_name</cite> does not provide any widgets</p></li>\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#KeyError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>KeyError</strong></a> – If plugin does not provide a widget named <cite>widget_name</cite>.</p></li>\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>ValueError</strong></a> – If <cite>widget_name</cite> is not provided, but <cite>plugin_name</cite> provides more than\n    one widget</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.get_writer_for_extension\">\n<code class=\"sig-name descname\"><span class=\"pre\">get_writer_for_extension</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">extension</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.get_writer_for_extension\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.get_writer_for_extension\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return writer plugin assigned to <cite>extension</cite>, or None.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Optional\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Optional</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.hooks\">\n<em class=\"property\"><span class=\"pre\">property</span> </em><code class=\"sig-name descname\"><span class=\"pre\">hooks</span></code><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.hooks\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>An alias for PluginManager.hook</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">_HookRelay</span></code></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.is_blocked\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_blocked</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.is_blocked\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the given plugin name is blocked.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bool</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.is_registered\">\n<code class=\"sig-name descname\"><span class=\"pre\">is_registered</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">obj</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.is_registered\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code> if the plugin is already registered.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">bool</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.iter_available\">\n<code class=\"sig-name descname\"><span class=\"pre\">iter_available</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">path</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">entry_point</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">prefix</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.iter_available\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Iterate over available plugins.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>path</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – If a string is provided, it is added to <code class=\"docutils literal notranslate\"><span class=\"pre\">sys.path</span></code> (and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">self.discover_path</span></code>) before importing, and removed at the end.</p></li>\n<li><p><strong>entry_point</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – An entry_point group to search for, by default\n<code class=\"docutils literal notranslate\"><span class=\"pre\">self.discover_entry_point</span></code> is used</p></li>\n<li><p><strong>prefix</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – If <code class=\"docutils literal notranslate\"><span class=\"pre\">provided</span></code>, modules in the environment starting with\n<code class=\"docutils literal notranslate\"><span class=\"pre\">prefix</span></code> will be imported and searched for hook implementations\nby default <code class=\"docutils literal notranslate\"><span class=\"pre\">self.discover_prefix</span></code> is used</p></li>\n</ul>\n</dd>\n</dl>\n<p>:param See docstring of <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">iter_available_plugins()</span></code> for details.:</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Generator\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Generator</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Tuple\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Tuple</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>, <a class=\"reference external\" href=\"https://docs.python.org/3/library/typing.html#typing.Optional\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">Optional</span></code></a>[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">str</span></code></a>]], <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.list_plugin_metadata\">\n<code class=\"sig-name descname\"><span class=\"pre\">list_plugin_metadata</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.list_plugin_metadata\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Return list of standard metadata dicts for every registered plugin.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Returns</dt>\n<dd class=\"field-odd\"><p><strong>metadata</strong> – A list of dicts with plugin metadata. Every dict in the list is\nguaranteed to have the following keys mentioned in\n<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">get_standard_metadata()</span></code></p>\n</dd>\n<dt class=\"field-even\">Return type</dt>\n<dd class=\"field-even\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt id=\"napari.plugins.NapariPluginManager.plugins\">\n<code class=\"sig-name descname\"><span class=\"pre\">plugins</span></code><em class=\"property\"><span class=\"pre\">:</span> <span class=\"pre\">Dict</span><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><span class=\"pre\">str</span></a><span class=\"p\"><span class=\"pre\">,</span> </span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span></em><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.plugins\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>mapping of <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_name</span></code> → <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin</span></code> (object)</p>\n<p>Plugins get added to this dict in <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">register()</span></code></p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">dict</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.prune\">\n<code class=\"sig-name descname\"><span class=\"pre\">prune</span></code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.prune\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Unregister modules that can no longer be imported.</p>\n<p>Useful if pip uninstall has been run during the session.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.register\">\n<code class=\"sig-name descname\"><span class=\"pre\">register</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">namespace</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.register\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.register\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Register a plugin and return its canonical name or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plugin</strong> (<em>Any</em>) – The namespace (class, module, dict, etc…) to register</p></li>\n<li><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>optional</em>) – Optional name for plugin, by default <code class=\"docutils literal notranslate\"><span class=\"pre\">get_canonical_name(plugin)</span></code></p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>canonical plugin name, or <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if the name is blocked from\nregistering.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">str</a> or <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">None</a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#TypeError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>TypeError</strong></a> – If <code class=\"docutils literal notranslate\"><span class=\"pre\">namespace</span></code> is a string.</p></li>\n<li><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><strong>ValueError</strong></a> – if the plugin <code class=\"docutils literal notranslate\"><span class=\"pre\">name</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">namespace</span></code> is already registered.</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.register_sample_data\">\n<code class=\"sig-name descname\"><span class=\"pre\">register_sample_data</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hookimpl</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.register_sample_data\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.register_sample_data\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Register sample data dict returned by <cite>napari_provide_sample_data</cite>.</p>\n<p>Each key in <cite>data</cite> is a <cite>sample_name</cite> (the string that will appear in the\n<cite>Open Sample</cite> menu), and the value is either a string, or a callable that\nreturns an iterable of <code class=\"docutils literal notranslate\"><span class=\"pre\">LayerData</span></code> tuples, where each tuple is a 1-, 2-,\nor 3-tuple of <code class=\"docutils literal notranslate\"><span class=\"pre\">(data,)</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">(data,</span> <span class=\"pre\">meta)</span></code>, or <code class=\"docutils literal notranslate\"><span class=\"pre\">(data,</span> <span class=\"pre\">meta,</span>\n<span class=\"pre\">layer_type)</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>data</strong> (<em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>Union</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em>, </em><em>Callable</em><em>[</em><em>..</em><em>, </em><em>Iterable</em><em>[</em><em>LayerData</em><em>]</em><em>]</em><em>]</em><em>]</em>) – A mapping of {sample_name-&gt;data}</p></li>\n<li><p><strong>hookimpl</strong> (<em>HookImplementation</em>) – The hook implementation that returned the dict</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.register_theme_colors\">\n<code class=\"sig-name descname\"><span class=\"pre\">register_theme_colors</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">data</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">hookimpl</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.register_theme_colors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.register_theme_colors\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Register theme data dict returned by <cite>napari_experimental_provide_theme</cite>.</p>\n<p>The <cite>theme</cite> data should be provided as an iterable containing dictionary\nof values, where the <code class=\"docutils literal notranslate\"><span class=\"pre\">folder</span></code> value will be used as theme name.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.set_blocked\">\n<code class=\"sig-name descname\"><span class=\"pre\">set_blocked</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin_name</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">blocked</span></span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"default_value\"><span class=\"pre\">True</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.set_blocked\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Block registrations of <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_name</span></code>, unregister if registered.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>plugin_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a>) – A plugin name to block.</p></li>\n<li><p><strong>blocked</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>bool</em></a><em>, </em><em>optional</em>) – Whether to block the plugin.  If <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> will “unblock”\n<code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_name</span></code>.  by default True</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.set_call_order\">\n<code class=\"sig-name descname\"><span class=\"pre\">set_call_order</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">new_order</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.set_call_order\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.set_call_order\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Sets the plugin manager call order to match settings plugin values.</p>\n<p>Note: Run this after load_settings_plugin_defaults, which\nsets the default values in settings.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>new_order</strong> (<em>CallOrderDict</em>) – mapping of hook_specification name, to a list of dicts with keys:\n{‘plugin’, ‘enabled’}.  Plugins earlier in the dict are called\nsooner.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.unregister\">\n<code class=\"sig-name descname\"><span class=\"pre\">unregister</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name_or_object</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.unregister\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.unregister\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Unregister a plugin object or <code class=\"docutils literal notranslate\"><span class=\"pre\">plugin_name</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name_or_object</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\"><em>str</em></a><em> or </em><em>Any</em>) – A module/class object or a plugin name (string).</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><strong>module</strong> – The module object, or None if the <code class=\"docutils literal notranslate\"><span class=\"pre\">name_or_object</span></code> was not found.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Any or <a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.10)\" target=\"_blank\" rel=\"noreferrer\">None</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt id=\"napari.plugins.NapariPluginManager.unregister_theme_colors\">\n<code class=\"sig-name descname\"><span class=\"pre\">unregister_theme_colors</span></code><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">plugin_name</span></span></em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../_modules/napari/plugins/_plugin_manager.html#NapariPluginManager.unregister_theme_colors\"><span class=\"viewcode-link\"><span class=\"pre\">[source]</span></span></a><a class=\"headerlink\" href=\"#napari.plugins.NapariPluginManager.unregister_theme_colors\" title=\"Permalink to this definition\">¶</a></dt>\n<dd><p>Unregister theme data from napari.</p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n\n    <script type=\"text/x-thebe-config\">\n    {\n        requestKernel: true,\n        binderOptions: {\n            repo: \"binder-examples/jupyter-stacks-datascience\",\n            ref: \"master\",\n        },\n        codeMirrorConfig: {\n            theme: \"abcdef\",\n            mode: \"python\"\n        },\n        kernelOptions: {\n            kernelName: \"python3\",\n            path: \"./api/stable\"\n        },\n        predefinedOutput: true\n    }\n    </script>\n    <script>kernelName = 'python3'</script>\n      ","pageHeaders":[],"ipynbSource":"","mdSource":""}},"__N_SSG":true}